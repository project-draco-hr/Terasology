{
  Texture texture=new Texture();
  texture.id=glGenTextures();
  glBindTexture(GL11.GL_TEXTURE_2D,texture.id);
  glTexParameterf(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,addressingMode);
  glTexParameterf(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,addressingMode);
  GL11.glTexParameteri(GL_TEXTURE_2D,GL11.GL_TEXTURE_MIN_FILTER,interpolationMode);
  GL11.glTexParameteri(GL_TEXTURE_2D,GL11.GL_TEXTURE_MAG_FILTER,interpolationMode);
  readTexture(path,texture);
  GL11.glPixelStorei(GL11.GL_UNPACK_ALIGNMENT,4);
  GL11.glTexImage2D(GL11.GL_TEXTURE_2D,0,GL11.GL_RGBA,texture.width,texture.height,0,GL11.GL_RGBA,GL11.GL_UNSIGNED_BYTE,texture.data);
  if (mipMapPaths != null) {
    GL11.glTexParameteri(GL11.GL_TEXTURE_2D,GL12.GL_TEXTURE_MAX_LEVEL,mipMapPaths.length);
    GL11.glTexParameteri(GL_TEXTURE_2D,GL11.GL_TEXTURE_MIN_FILTER,GL_NEAREST_MIPMAP_NEAREST);
    GL11.glTexParameteri(GL_TEXTURE_2D,GL11.GL_TEXTURE_MAG_FILTER,GL_NEAREST_MIPMAP_NEAREST);
    for (int i=0; i < mipMapPaths.length; i++) {
      Texture t=new Texture();
      readTexture(mipMapPaths[i],t);
      GL11.glTexImage2D(GL11.GL_TEXTURE_2D,i + 1,GL11.GL_RGBA,t.width,t.height,0,GL11.GL_RGBA,GL11.GL_UNSIGNED_BYTE,t.data);
    }
  }
  return texture;
}
