{
  super.render();
  glPushMatrix();
  glTranslatef(getPosition().x - _parent.getWorldProvider().getRenderingReferencePoint().x,getPosition().y - _parent.getWorldProvider().getRenderingReferencePoint().y,getPosition().z - _parent.getWorldProvider().getRenderingReferencePoint().z);
  glRotatef((float)_yaw,0f,1f,0f);
  TextureManager.getInstance().bindTexture("slime");
  ShaderManager.getInstance().enableShader("gelatinousCube");
  int tick=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("gelatinousCube"),"tick");
  GL20.glUniform1f(tick,_parent.getTick());
  int cOffset=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("gelatinousCube"),"colorOffset");
  GL20.glUniform4f(cOffset,COLORS[_randomColorId].x,COLORS[_randomColorId].y,COLORS[_randomColorId].z,1.0f);
  int light=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("gelatinousCube"),"light");
  GL20.glUniform1f(light,calcLightValue());
  if (_displayListOuterBody == -1 || _displayListInnerBody == -1) {
    generateDisplayList();
  }
  glEnable(GL_BLEND);
  glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
  glPushMatrix();
  glScalef(_randomSize,_randomSize,_randomSize);
  glCallList(_displayListInnerBody);
  glCallList(_displayListOuterBody);
  glPopMatrix();
  glDisable(GL_BLEND);
  ShaderManager.getInstance().enableShader(null);
  glPopMatrix();
}
