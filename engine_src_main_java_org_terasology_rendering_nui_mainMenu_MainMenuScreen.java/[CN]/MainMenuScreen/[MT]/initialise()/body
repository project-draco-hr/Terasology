{
  find("version",UILabel.class).setText(TerasologyVersion.getInstance().getHumanVersion());
  WidgetUtil.trySubscribe(this,"singleplayer",new ActivateEventListener(){
    @Override public void onActivated(    UIWidget button){
      getManager().pushScreen("engine:selectGameScreen");
    }
  }
);
  WidgetUtil.trySubscribe(this,"multiplayer",new ActivateEventListener(){
    @Override public void onActivated(    UIWidget button){
      UIScreenLayer screen=getManager().pushScreen("engine:selectGameScreen");
      if (screen instanceof SelectGameScreen) {
        ((SelectGameScreen)screen).setLoadingAsServer(true);
      }
    }
  }
);
  WidgetUtil.trySubscribe(this,"join",new ActivateEventListener(){
    @Override public void onActivated(    UIWidget button){
      UIScreenLayer screen=getManager().pushScreen("engine:joinGameScreen");
    }
  }
);
  WidgetUtil.trySubscribe(this,"settings",new ActivateEventListener(){
    @Override public void onActivated(    UIWidget button){
      getManager().pushScreen("engine:settingsMenuScreen");
    }
  }
);
  WidgetUtil.trySubscribe(this,"exit",new ActivateEventListener(){
    @Override public void onActivated(    UIWidget button){
      engine.shutdown();
    }
  }
);
}
