{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,getWorldTitleBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(2,forestGrassDensity_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(3,plainsGrassDensity_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(4,snowGrassDensity_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(5,mountainGrassDensity_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(6,desertGrassDensity_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeSInt64Size(7,dayNightLengthInMs_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    size+=com.google.protobuf.CodedOutputStream.computeSInt64Size(9,initialTimeOffsetInMs_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(10,spawnOrigin_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(11,getDefaultSeedBytes());
  }
{
    int dataSize=0;
    for (int i=0; i < chunkGenerator_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(chunkGenerator_.getByteString(i));
    }
    size+=dataSize;
    size+=1 * getChunkGeneratorList().size();
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(13,chunkGeneratorFlatHeight_);
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
