{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    onChanged();
  return this;
default :
{
  if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
    this.setUnknownFields(unknownFields.build());
    onChanged();
    return this;
  }
  break;
}
case 8:
{
bitField0_|=0x00000001;
maxParticles_=input.readInt32();
break;
}
case 18:
{
org.terasology.protobuf.Configuration.Setting.System.CloudRes.Builder subBuilder=org.terasology.protobuf.Configuration.Setting.System.CloudRes.newBuilder();
if (hasCloudResolution()) {
subBuilder.mergeFrom(getCloudResolution());
}
input.readMessage(subBuilder,extensionRegistry);
setCloudResolution(subBuilder.buildPartial());
break;
}
case 24:
{
bitField0_|=0x00000004;
cloudUpdateInterval_=input.readInt32();
break;
}
case 32:
{
bitField0_|=0x00000008;
maxThreads_=input.readInt32();
break;
}
case 40:
{
bitField0_|=0x00000010;
saveChunks_=input.readBool();
break;
}
case 48:
{
bitField0_|=0x00000020;
chunkCacheSize_=input.readInt32();
break;
}
case 56:
{
bitField0_|=0x00000040;
maxChunkVBOs_=input.readInt32();
break;
}
case 69:
{
bitField0_|=0x00000080;
gamma_=input.readFloat();
break;
}
case 72:
{
bitField0_|=0x00000100;
pixelFormat_=input.readInt32();
break;
}
case 82:
{
org.terasology.protobuf.Configuration.Setting.System.DisplayMode.Builder subBuilder=org.terasology.protobuf.Configuration.Setting.System.DisplayMode.newBuilder();
if (hasDisplayMode()) {
subBuilder.mergeFrom(getDisplayMode());
}
input.readMessage(subBuilder,extensionRegistry);
setDisplayMode(subBuilder.buildPartial());
break;
}
case 88:
{
bitField0_|=0x00000400;
fullscreen_=input.readBool();
break;
}
case 96:
{
bitField0_|=0x00000800;
activeViewingDistanceId_=input.readInt32();
break;
}
case 104:
{
bitField0_|=0x00001000;
viewingDistanceNear_=input.readInt32();
break;
}
case 112:
{
bitField0_|=0x00002000;
viewingDistanceModerate_=input.readInt32();
break;
}
case 120:
{
bitField0_|=0x00004000;
viewingDistanceFar_=input.readInt32();
break;
}
case 128:
{
bitField0_|=0x00008000;
viewingDistanceUltra_=input.readInt32();
break;
}
case 136:
{
bitField0_|=0x00010000;
flickeringLight_=input.readBool();
break;
}
case 144:
{
bitField0_|=0x00020000;
enablePostProcessingEffects_=input.readBool();
break;
}
case 152:
{
bitField0_|=0x00040000;
animatedGrass_=input.readBool();
break;
}
case 160:
{
bitField0_|=0x00080000;
verticalChunkMeshSegments_=input.readInt32();
break;
}
case 168:
{
bitField0_|=0x00100000;
blurIntensity_=input.readInt32();
break;
}
case 176:
{
bitField0_|=0x00200000;
reflectiveWater_=input.readBool();
break;
}
case 184:
{
bitField0_|=0x00400000;
musicVolume_=input.readInt32();
break;
}
case 192:
{
bitField0_|=0x00800000;
soundVolume_=input.readInt32();
break;
}
}
}
}
