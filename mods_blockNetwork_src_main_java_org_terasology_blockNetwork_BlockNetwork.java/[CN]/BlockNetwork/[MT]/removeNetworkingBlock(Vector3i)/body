{
  validateNotMutating();
  mutating=true;
  try {
    SimpleNetwork networkWithBlock=findNetworkWithNetworkingBlock(location);
    if (networkWithBlock == null)     throw new IllegalStateException("Trying to remove a networking block that doesn't belong to any network");
    networkingNodes.remove(location);
    Map<Vector3i,Byte> networkingNodes=Maps.newHashMap(networkWithBlock.getNetworkingNodes());
    Multimap<Vector3i,Byte> leafNodes=HashMultimap.create(networkWithBlock.getLeafNodes());
    networkWithBlock.removeAllLeafNodes();
    notifyLeafNodesRemoved(networkWithBlock,leafNodes);
    networkWithBlock.removeAllNetworkingNodes();
    notifyNetworkingNodesRemoved(networkWithBlock,networkingNodes);
    networks.remove(networkWithBlock);
    notifyNetworkRemoved(networkWithBlock);
    for (    Map.Entry<Vector3i,Byte> networkingNode : networkingNodes.entrySet()) {
      if (!networkingNode.getKey().equals(location))       addNetworkingBlockInternal(networkingNode.getKey(),networkingNode.getValue());
    }
  }
  finally {
    mutating=false;
  }
}
