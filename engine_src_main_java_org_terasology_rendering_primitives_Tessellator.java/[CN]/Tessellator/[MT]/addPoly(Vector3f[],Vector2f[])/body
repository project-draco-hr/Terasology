{
  if (vertices.length != texCoords.length || vertices.length < 3) {
    throw new IllegalArgumentException("addPoly expected vertices.length == texCoords.length > 2");
  }
  for (int i=0; i < vertices.length; ++i) {
    meshData.getVertices().add(vertices[i].x);
    meshData.getVertices().add(vertices[i].y);
    meshData.getVertices().add(vertices[i].z);
    meshData.getColors().add(activeColor.x);
    meshData.getColors().add(activeColor.y);
    meshData.getColors().add(activeColor.z);
    meshData.getColors().add(activeColor.w);
    if (useNormals) {
      meshData.getNormals().add(activeNormal.x);
      meshData.getNormals().add(activeNormal.y);
      meshData.getNormals().add(activeNormal.z);
    }
    meshData.getTexCoord0().add(texCoords[i].x);
    meshData.getTexCoord0().add(texCoords[i].y);
    if (useLighting) {
      meshData.getTexCoord1().add(lighting.x);
      meshData.getTexCoord1().add(lighting.y);
      meshData.getTexCoord1().add(lighting.z);
    }
  }
  for (int i=0; i < vertices.length - 2; i++) {
    meshData.getIndices().add(nextIndex);
    meshData.getIndices().add(nextIndex + i + 1);
    meshData.getIndices().add(nextIndex + i + 2);
  }
  nextIndex+=vertices.length;
}
