{
  if (MIP_MAPPING && generateMipMap) {
    glBindTexture(GL11.GL_TEXTURE_2D,tex.getTextureID());
    int width=tex.getImageWidth();
    int height=tex.getImageHeight();
    byte[] texbytes=tex.getTextureData();
    int components=texbytes.length / (width * height);
    ByteBuffer texdata=BufferUtils.createByteBuffer(texbytes.length);
    texdata.put(texbytes);
    texdata.rewind();
    MipMap.gluBuild2DMipmaps(GL11.GL_TEXTURE_2D,components,width,height,components == 3 ? GL11.GL_RGB : GL11.GL_RGBA,GL11.GL_UNSIGNED_BYTE,texdata);
    GL11.glTexParameteri(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_MIN_FILTER,GL11.GL_NEAREST_MIPMAP_NEAREST);
    GL11.glTexParameteri(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_MAG_FILTER,GL11.GL_NEAREST);
    GL11.glTexParameteri(GL11.GL_TEXTURE_2D,GL12.GL_TEXTURE_MAX_LEVEL,2);
    GL11.glTexParameteri(GL11.GL_TEXTURE_2D,EXTTextureFilterAnisotropic.GL_TEXTURE_MAX_ANISOTROPY_EXT,ANISOTROPIC_FILTERING);
  }
  GL11.glTexParameteri(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_WRAP_S,GL11.GL_CLAMP);
  GL11.glTexParameteri(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_WRAP_T,GL11.GL_CLAMP);
}
