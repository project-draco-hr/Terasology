{
  IWorldProvider worldProvider=_player.getParent().getWorldProvider();
  RayBlockIntersection.Intersection selectedBlock=_player.getSelectedBlock();
  if (selectedBlock != null) {
    BlockPosition centerPos=selectedBlock.getBlockPosition();
    Block centerBlock=BlockManager.getInstance().getBlock(worldProvider.getBlock(centerPos.x,centerPos.y,centerPos.z));
    if (!centerBlock.isAllowBlockAttachment()) {
      return false;
    }
    BlockPosition blockPos=selectedBlock.calcAdjacentBlockPos();
    Block adjBlock=BlockManager.getInstance().getBlock(worldProvider.getBlock(blockPos.x,blockPos.y,blockPos.z));
    if (adjBlock != null && !adjBlock.isInvisible() && !adjBlock.isSelectionRayThrough()) {
      return false;
    }
    Side attachmentSide=Side.inDirection(centerPos.x - blockPos.x,centerPos.y - blockPos.y,centerPos.z - blockPos.z);
    Vector3d attachDir=new Vector3d(centerPos.x - blockPos.x,centerPos.y - blockPos.y,centerPos.z - blockPos.z);
    Vector3d rawDirection=new Vector3d(_player.getViewingDirection());
    double dot=rawDirection.dot(attachDir);
    rawDirection.sub(new Vector3d(dot * attachDir.x,dot * attachDir.y,dot * attachDir.z));
    Side direction=Side.inDirection(rawDirection.x,rawDirection.y,rawDirection.z);
    Block block=type.getBlockFor(attachmentSide,direction);
    if (block == null)     return false;
    if (!block.isPenetrable()) {
      for (      AABB blockAABB : block.getColliders(blockPos.x,blockPos.y,blockPos.z)) {
        if (blockAABB.overlaps(_player.getAABB())) {
          return false;
        }
      }
    }
    placeBlock(blockPos,block.getId(),true);
    AudioManager.play("PlaceBlock",0.5f);
    return true;
  }
  return false;
}
