{
  List<Module> modules=Lists.newArrayList(moduleManager.getModules());
  Collections.sort(modules,new Comparator<Module>(){
    @Override public int compare(    Module o1,    Module o2){
      return o1.getModuleInfo().getDisplayName().compareTo(o2.getModuleInfo().getDisplayName());
    }
  }
);
  for (  Module module : modules) {
    if (!module.getModuleInfo().getId().equals(ModuleManager.ENGINE_MODULE)) {
      UIListItem item=new UIListItem(module.getModuleInfo().getDisplayName(),module);
      item.setPadding(new Vector4f(2f,5f,2f,5f));
      if (modConfig.hasMod(module.getModuleInfo().getId())) {
        item.setTextColor(ACTIVE_TEXT_COLOR);
        item.setTextSelectionColor(ACTIVE_SELECTED_TEXT_COLOR);
      }
 else {
        item.setTextColor(INACTIVE_TEXT_COLOR);
        item.setTextSelectionColor(INACTIVE_SELECTED_TEXT_COLOR);
      }
      modList.addItem(item);
    }
  }
  modList.addSelectionListener(new SelectionListener(){
    @Override public void changed(    UIDisplayElement element){
      Module module=(Module)modList.getSelection().getValue();
      detailPanel.setVisible(true);
      nameLabel.setText(module.getModuleInfo().getDisplayName());
      descriptionLabel.setText(module.getModuleInfo().getDescription());
      boolean active=modConfig.hasMod(module.getModuleInfo().getId());
      if (active) {
        toggleButton.getLabel().setText(DEACTIVATE_TEXT);
      }
 else {
        toggleButton.getLabel().setText(ACTIVATE_TEXT);
      }
      toggleButton.setVisible(!module.getModuleInfo().getId().equals("core"));
    }
  }
);
  toggleButton.addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      Module selectedModule=(Module)modList.getSelection().getValue();
      if (modConfig.hasMod(selectedModule.getModuleInfo().getId())) {
        deactivateMod(selectedModule);
        toggleButton.getLabel().setText(ACTIVATE_TEXT);
      }
 else {
        activateMod(selectedModule);
        toggleButton.getLabel().setText(DEACTIVATE_TEXT);
      }
      refreshListItemActivation();
    }
  }
);
}
