{
  FileInputStream fileIn=null;
  ObjectInputStream in=null;
  try {
    fileIn=new FileInputStream(file);
    in=new ObjectInputStream(fileIn);
    ChunkStoreGZip cache=(ChunkStoreGZip)in.readObject();
    cache.logger=Logger.getLogger(ChunkStoreGZip.class.getName());
    cache.compressionQueue=Queues.newLinkedBlockingDeque();
    cache.modifiedChunks=Maps.newConcurrentMap();
    cache.setupThreads();
    return cache;
  }
 catch (  ClassNotFoundException e) {
    throw new IOException("Unable to load chunk cache",e);
  }
 finally {
    if (in != null) {
      try {
        in.close();
      }
 catch (      IOException e) {
        Logger.getLogger(ChunkStoreGZip.class.getName()).log(Level.SEVERE,"Failed to close input stream",e);
      }
    }
    if (fileIn != null) {
      try {
        fileIn.close();
      }
 catch (      IOException e) {
        Logger.getLogger(ChunkStoreGZip.class.getName()).log(Level.SEVERE,"Failed to close input stream",e);
      }
    }
  }
}
