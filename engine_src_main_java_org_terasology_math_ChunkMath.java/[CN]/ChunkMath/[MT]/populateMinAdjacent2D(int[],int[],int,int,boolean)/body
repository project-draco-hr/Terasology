{
  System.arraycopy(source,0,target,0,target.length);
  for (int y=1; y < dimY - 1; ++y) {
    for (int x=1; x < dimX - 1; ++x) {
      target[x + y * dimX]=Math.min(Math.min(source[x + (y - 1) * dimX],source[x + (y + 1) * dimX]),Math.min(source[x + 1 + y * dimX],source[x - 1 + y * dimX]));
    }
  }
  if (populateMargins) {
    target[0]=Math.min(source[1],source[dimX]);
    for (int x=1; x < dimX - 1; ++x) {
      target[x]=Math.min(source[x - 1],Math.min(source[x + 1],source[x + dimX]));
    }
    target[dimX - 1]=Math.min(source[2 * dimX - 1],source[dimX - 2]);
    for (int y=1; y < dimY - 1; ++y) {
      target[y * dimX]=Math.min(source[dimX * (y - 1)],Math.min(source[dimX * (y + 1)],source[1 + dimX * y]));
      target[dimX - 1 + y * dimX]=Math.min(source[dimX - 1 + dimX * (y - 1)],Math.min(source[dimX - 1 + dimX * (y + 1)],source[dimX - 2 + dimX * y]));
    }
    target[dimX * (dimY - 1)]=Math.min(source[1 + dimX * (dimY - 1)],source[dimX * (dimY - 2)]);
    for (int x=1; x < dimX - 1; ++x) {
      target[x + dimX * (dimY - 1)]=Math.min(source[x - 1 + dimX * (dimY - 1)],Math.min(source[x + 1 + dimX * (dimY - 1)],source[x + dimX * (dimY - 2)]));
    }
    target[dimX - 1 + dimX * (dimY - 1)]=Math.min(source[dimX - 2 + dimX * (dimY - 1)],source[dimX - 1 + dimX * (dimY - 2)]);
  }
}
