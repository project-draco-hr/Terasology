{
  Vector3f chunkPos=calcChunkPos(pos);
  Vector3f blockCoord=calcBlockPos(pos,chunkPos);
  try {
    Chunk c=chunks[(int)chunkPos.x][(int)chunkPos.y][(int)chunkPos.z];
    Chunk c1=chunks[(int)chunkPos.x - 1][(int)chunkPos.y][(int)chunkPos.z];
    Chunk c2=chunks[(int)chunkPos.x + 1][(int)chunkPos.y][(int)chunkPos.z];
    Chunk c3=chunks[(int)chunkPos.x][(int)chunkPos.y][(int)chunkPos.z - 1];
    Chunk c4=chunks[(int)chunkPos.x][(int)chunkPos.y][(int)chunkPos.z + 1];
    c.setBlock(blockCoord,type,true);
    if ((int)blockCoord.x == 0) {
      c1.dirty=true;
      chunkUpdateQueue.add(c1);
    }
 else     if ((int)blockCoord.x == (int)Chunk.chunkDimensions.x - 1) {
      c2.dirty=true;
      chunkUpdateQueue.add(c2);
    }
    if ((int)blockCoord.z == 0) {
      c3.dirty=true;
      chunkUpdateQueue.add(c3);
    }
 else     if ((int)blockCoord.z == (int)Chunk.chunkDimensions.z - 1) {
      c4.dirty=true;
      chunkUpdateQueue.add(c4);
    }
    chunkUpdateQueue.add(c);
  }
 catch (  Exception e) {
    return;
  }
}
