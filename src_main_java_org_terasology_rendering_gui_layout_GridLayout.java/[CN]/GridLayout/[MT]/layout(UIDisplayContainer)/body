{
  List<UIDisplayElement> elements=container.getDisplayElements();
  cellWidth=calcCellWidth(elements);
  cellHeight=calcCellHeight(elements);
  for (int i=0; i < elements.size(); i++) {
    if (!(elements.get(i) instanceof UIStyle)) {
      float x=0;
      for (int j=0; (j < (i % columns)); j++) {
        x+=cellWidth[j % columns];
      }
      if (horizontalCellAlign == EHorizontalAlign.LEFT) {
        x+=margin.w;
      }
 else       if (horizontalCellAlign == EHorizontalAlign.CENTER) {
        x+=cellWidth[i % columns] / 2 - elements.get(i).getSize().x / 2;
      }
 else       if (horizontalCellAlign == EHorizontalAlign.RIGHT) {
        x+=cellWidth[i % columns] - elements.get(i).getSize().x + margin.y;
      }
      float y=0;
      for (int j=0; j < (int)Math.floor(i / columns); j++) {
        y+=cellHeight[(int)Math.floor(i / columns)];
      }
      if (verticalCellAlign == EVerticalAlign.TOP) {
        y+=margin.x;
      }
 else       if (verticalCellAlign == EVerticalAlign.CENTER) {
        y+=cellHeight[(int)Math.floor(i / columns)] / 2 - elements.get(i).getSize().y / 2;
      }
 else       if (verticalCellAlign == EVerticalAlign.BOTTOM) {
        y+=cellHeight[(int)Math.floor(i / columns)] - elements.get(i).getSize().y - margin.z;
      }
      elements.get(i).setPosition(new Vector2f(x,y));
      elements.get(i).setVisible(true);
    }
  }
  container.setSize(size);
}
