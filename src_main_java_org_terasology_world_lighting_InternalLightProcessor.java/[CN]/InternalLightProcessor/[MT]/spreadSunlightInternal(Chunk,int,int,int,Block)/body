{
  byte lightValue=chunk.getSunlight(x,y,z);
  if (y > 0 && LightingUtil.canSpreadLightOutOf(block,Side.BOTTOM)) {
    Block adjBlock=chunk.getBlock(x,y - 1,z);
    if (chunk.getSunlight(x,y - 1,z) < lightValue - 1 && LightingUtil.canSpreadLightInto(adjBlock,Side.TOP)) {
      chunk.setSunlight(x,y - 1,z,(byte)(lightValue - 1));
      spreadSunlightInternal(chunk,x,y - 1,z,adjBlock);
    }
  }
  if (y < Chunk.SIZE_Y && lightValue < Chunk.MAX_LIGHT && LightingUtil.canSpreadLightOutOf(block,Side.TOP)) {
    Block adjBlock=chunk.getBlock(x,y + 1,z);
    if (chunk.getSunlight(x,y + 1,z) < lightValue - 1 && LightingUtil.canSpreadLightInto(adjBlock,Side.BOTTOM)) {
      chunk.setSunlight(x,y + 1,z,(byte)(lightValue - 1));
      spreadSunlightInternal(chunk,x,y + 1,z,adjBlock);
    }
  }
  if (lightValue <= 1)   return;
  for (  Side adjDir : Side.horizontalSides()) {
    int adjX=x + adjDir.getVector3i().x;
    int adjZ=z + adjDir.getVector3i().z;
    if (chunk.isInBounds(adjX,y,adjZ) && LightingUtil.canSpreadLightOutOf(block,adjDir)) {
      byte adjLightValue=chunk.getSunlight(adjX,y,adjZ);
      Block adjBlock=chunk.getBlock(adjX,y,adjZ);
      if (adjLightValue < lightValue - 1 && LightingUtil.canSpreadLightInto(adjBlock,adjDir.reverse())) {
        chunk.setSunlight(adjX,y,adjZ,(byte)(lightValue - 1));
        spreadSunlightInternal(chunk,adjX,y,adjZ,adjBlock);
      }
    }
  }
}
