{
  org.terasology.protobuf.ChunksProtobuf.Chunk result=new org.terasology.protobuf.ChunksProtobuf.Chunk(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  if (blockBuilder_ == null) {
    result.block_=block_;
  }
 else {
    result.block_=blockBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  if (sunlightBuilder_ == null) {
    result.sunlight_=sunlight_;
  }
 else {
    result.sunlight_=sunlightBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  if (lightBuilder_ == null) {
    result.light_=light_;
  }
 else {
    result.light_=lightBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  if (liquidBuilder_ == null) {
    result.liquid_=liquid_;
  }
 else {
    result.liquid_=liquidBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
