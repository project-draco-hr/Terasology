{
  NodeFactory nodeFactory=new NodeFactory(context);
  shadowMapNode=nodeFactory.createInstance(ShadowMapNode.class);
  Node worldReflectionNode=nodeFactory.createInstance(WorldReflectionNode.class);
  Node backdropNode=nodeFactory.createInstance(BackdropNode.class);
  Node skybandsNode=nodeFactory.createInstance(SkyBandsNode.class);
  Node objectOpaqueNode=nodeFactory.createInstance(ObjectsOpaqueNode.class);
  Node chunksOpaqueNode=nodeFactory.createInstance(ChunksOpaqueNode.class);
  Node chunksAlphaRejectNode=nodeFactory.createInstance(ChunksAlphaRejectNode.class);
  Node overlaysNode=nodeFactory.createInstance(OverlaysNode.class);
  Node firstPersonViewNode=nodeFactory.createInstance(FirstPersonViewNode.class);
  Node lightGeometryNode=nodeFactory.createInstance(LightGeometryNode.class);
  Node directionalLightsNode=nodeFactory.createInstance(DirectionalLightsNode.class);
  Node chunksRefractiveReflectiveNode=nodeFactory.createInstance(ChunksRefractiveReflectiveNode.class);
  Node outlineNode=nodeFactory.createInstance(OutlineNode.class);
  Node ambientOcclusionPassesNode=nodeFactory.createInstance(AmbientOcclusionPassesNode.class);
  Node prePostCompositeNode=nodeFactory.createInstance(PrePostCompositeNode.class);
  Node simpleBlendMaterialsNode=nodeFactory.createInstance(SimpleBlendMaterialsNode.class);
  Node lightShaftsNode=nodeFactory.createInstance(LightShaftsNode.class);
  Node initialPostProcessingNode=nodeFactory.createInstance(InitialPostProcessingNode.class);
  Node downSampleSceneAndUpdateExposure=nodeFactory.createInstance(DownSampleSceneAndUpdateExposureNode.class);
  Node toneMappingNode=nodeFactory.createInstance(ToneMappingNode.class);
  Node bloomPassesNode=nodeFactory.createInstance(BloomPassesNode.class);
  Node blurPassesNode=nodeFactory.createInstance(BlurPassesNode.class);
  Node finalPostProcessingNode=nodeFactory.createInstance(FinalPostProcessingNode.class);
  RenderGraph renderGraph=new RenderGraph();
  renderGraph.add(shadowMapNode);
  renderGraph.add(worldReflectionNode);
  renderGraph.add(backdropNode);
  renderGraph.add(skybandsNode);
  renderGraph.add(objectOpaqueNode);
  renderGraph.add(chunksOpaqueNode);
  renderGraph.add(chunksAlphaRejectNode);
  renderGraph.add(overlaysNode);
  renderGraph.add(firstPersonViewNode);
  renderGraph.add(lightGeometryNode);
  renderGraph.add(directionalLightsNode);
  renderGraph.add(chunksRefractiveReflectiveNode);
  renderGraph.add(outlineNode);
  renderGraph.add(ambientOcclusionPassesNode);
  renderGraph.add(prePostCompositeNode);
  renderGraph.add(simpleBlendMaterialsNode);
  renderGraph.add(lightShaftsNode);
  renderGraph.add(initialPostProcessingNode);
  renderGraph.add(downSampleSceneAndUpdateExposure);
  renderGraph.add(toneMappingNode);
  renderGraph.add(bloomPassesNode);
  renderGraph.add(blurPassesNode);
  renderGraph.add(finalPostProcessingNode);
  RenderPipelineGenerator generator=new RenderPipelineGenerator(renderGraph);
  RenderPipelineOptimizer optimizer=new RenderPipelineOptimizer(generator.generate());
  renderPipelineExecutor=new RenderPipelineExecutor(optimizer.optimize());
}
