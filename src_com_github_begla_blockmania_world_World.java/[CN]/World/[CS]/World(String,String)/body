{
  if (title == null) {
    throw new IllegalArgumentException("No title provided.");
  }
  if (title.isEmpty()) {
    throw new IllegalArgumentException("No title provided.");
  }
  if (seed == null) {
    throw new IllegalArgumentException("No seed provided.");
  }
  if (seed.isEmpty()) {
    throw new IllegalArgumentException("No seed provided.");
  }
  this._title=title;
  this._seed=seed;
  loadMetaData();
  _clouds=new Clouds(this);
  _sunMoon=new SunMoon(this);
  _chunkGenerators.put("terrain",new ChunkGeneratorTerrain(_seed));
  _chunkGenerators.put("forest",new ChunkGeneratorForest(_seed));
  _chunkGenerators.put("resources",new ChunkGeneratorResources(_seed));
  _objectGenerators.put("tree",new ObjectGeneratorTree(this,_seed));
  _objectGenerators.put("pineTree",new ObjectGeneratorPineTree(this,_seed));
  _objectGenerators.put("firTree",new ObjectGeneratorFirTree(this,_seed));
  _objectGenerators.put("cactus",new ObjectGeneratorCactus(this,_seed));
  _random=new FastRandom(seed.hashCode());
  _visibleChunks=new FastList<Chunk>();
  _updateThread=new Thread(new Runnable(){
    public void run(){
      while (true) {
        if (!_updateThreadAlive) {
          return;
        }
        if (!_updatingEnabled) {
synchronized (_updateThread) {
            try {
              _updateThread.wait();
            }
 catch (            InterruptedException ex) {
              Game.getInstance().getLogger().log(Level.SEVERE,ex.toString());
            }
          }
        }
        _chunkUpdateManager.processChunkUpdates();
        _chunkCache.freeCacheSpace();
      }
    }
  }
);
}
