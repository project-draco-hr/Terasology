{
  if (title == null) {
    throw new IllegalArgumentException("No title provided.");
  }
  if (title.isEmpty()) {
    throw new IllegalArgumentException("No title provided.");
  }
  if (seed == null) {
    throw new IllegalArgumentException("No seed provided.");
  }
  if (seed.isEmpty()) {
    throw new IllegalArgumentException("No seed provided.");
  }
  if (p == null) {
    throw new IllegalArgumentException("No player provided.");
  }
  this._player=p;
  this._title=title;
  this._seed=seed;
  if (!loadMetaData()) {
    if (!Game.getInstance().isSandboxed()) {
      File dir=new File(getWorldSavePath());
      if (!dir.exists()) {
        dir.mkdirs();
      }
    }
  }
  _generatorTerrain=new ChunkGeneratorTerrain(_seed);
  _generatorForest=new ChunkGeneratorForest(_seed);
  _generatorResources=new ChunkGeneratorResources(_seed);
  _generatorTree=new ObjectGeneratorTree(this,_seed);
  _generatorPineTree=new ObjectGeneratorPineTree(this,_seed);
  _generatorFirTree=new ObjectGeneratorFirTree(this,_seed);
  _generatorGrass=new ChunkGeneratorFlora(_seed);
  _generatorCactus=new ObjectGeneratorCactus(this,_seed);
  _rand=new FastRandom(seed.hashCode());
  resetPlayer();
  _visibleChunks=fetchVisibleChunks();
  _updateThread=new Thread(new Runnable(){
    public void run(){
      while (true) {
        if (!_updateThreadAlive) {
          return;
        }
        if (!_updatingEnabled) {
synchronized (_updateThread) {
            try {
              _updateThread.wait();
            }
 catch (            InterruptedException ex) {
              Game.getInstance().getLogger().log(Level.SEVERE,ex.toString());
            }
          }
        }
        _chunkUpdateManager.updateChunk();
        updateDaytime();
      }
    }
  }
);
}
