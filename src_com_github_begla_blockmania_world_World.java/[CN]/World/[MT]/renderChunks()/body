{
  ShaderManager.getInstance().enableShader("chunk");
  int daylight=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("chunk"),"daylight");
  int swimming=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("chunk"),"swimming");
  int animationOffset=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("chunk"),"animationOffset");
  int animated=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("chunk"),"animated");
  GL20.glUniform1f(daylight,(float)getDaylight());
  GL20.glUniform1i(swimming,_player.isHeadUnderWater() ? 1 : 0);
  FastList<Chunk> visibleChunks=fetchVisibleChunks();
  glEnable(GL_TEXTURE_2D);
  GL20.glUniform1i(animated,0);
  TextureManager.getInstance().bindTexture("terrain");
  for (FastList.Node<Chunk> n=visibleChunks.head(), end=visibleChunks.tail(); (n=n.getNext()) != end; ) {
    Chunk c=n.getValue();
    c.render(ChunkMesh.RENDER_TYPE.OPAQUE);
    if ((Boolean)BlockmaniaConfiguration.getInstance().getConfig().get("System.Debug.chunkOutlines")) {
      c.getAABB().render();
    }
  }
  GL20.glUniform1i(animated,1);
  TextureManager.getInstance().bindTexture("custom_lava_still");
  GL20.glUniform1f(animationOffset,((float)(_tick % 16)) * (1.0f / 16f));
  for (FastList.Node<Chunk> n=visibleChunks.head(), end=visibleChunks.tail(); (n=n.getNext()) != end; ) {
    Chunk c=n.getValue();
    c.render(ChunkMesh.RENDER_TYPE.LAVA);
  }
  GL20.glUniform1i(animated,0);
  TextureManager.getInstance().bindTexture("terrain");
  for (FastList.Node<Chunk> n=visibleChunks.head(), end=visibleChunks.tail(); (n=n.getNext()) != end; ) {
    Chunk c=n.getValue();
    c.render(ChunkMesh.RENDER_TYPE.BILLBOARD_AND_TRANSLUCENT);
  }
  GL20.glUniform1i(animated,1);
  GL20.glUniform1f(animationOffset,((float)(_tick / 2 % 12)) * (1.0f / 16f));
  TextureManager.getInstance().bindTexture("custom_water_still");
  for (int i=0; i < 2; i++) {
    for (FastList.Node<Chunk> n=visibleChunks.head(), end=visibleChunks.tail(); (n=n.getNext()) != end; ) {
      Chunk c=n.getValue();
      if (i == 0) {
        glColorMask(false,false,false,false);
      }
 else {
        glColorMask(true,true,true,true);
      }
      c.render(ChunkMesh.RENDER_TYPE.WATER);
    }
  }
  ShaderManager.getInstance().enableShader(null);
  glDisable(GL_TEXTURE_2D);
}
