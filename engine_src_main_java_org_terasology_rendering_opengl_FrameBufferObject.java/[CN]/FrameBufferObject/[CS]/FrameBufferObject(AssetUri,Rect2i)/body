{
  IntBuffer fboId=BufferUtils.createIntBuffer(1);
  GL30.glGenFramebuffers(fboId);
  frame=fboId.get(0);
  IntBuffer texIds=BufferUtils.createIntBuffer(2);
  GL11.glGenTextures(texIds);
  color=texIds.get(0);
  generateTexture(uri,region);
  GL11.glBindTexture(GL11.GL_TEXTURE_2D,color);
  GL11.glTexImage2D(GL11.GL_TEXTURE_2D,0,GL11.GL_RGBA,region.width(),region.height(),0,GL11.GL_RGBA,GL11.GL_INT,(ByteBuffer)null);
  GL11.glTexParameteri(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_MIN_FILTER,GL11.GL_LINEAR);
  GL11.glTexParameteri(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_MAG_FILTER,GL11.GL_LINEAR);
  GL11.glTexParameteri(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_WRAP_S,GL12.GL_CLAMP_TO_EDGE);
  GL11.glTexParameteri(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_WRAP_T,GL12.GL_CLAMP_TO_EDGE);
  GL30.glBindFramebuffer(GL30.GL_FRAMEBUFFER,frame);
  GL30.glFramebufferTexture2D(GL30.GL_FRAMEBUFFER,GL30.GL_COLOR_ATTACHMENT0,GL11.GL_TEXTURE_2D,color,0);
  int result=GL30.glCheckFramebufferStatus(GL30.GL_FRAMEBUFFER);
  if (result != GL30.GL_FRAMEBUFFER_COMPLETE) {
    throw new IllegalStateException("Something went wrong with framebuffer! " + result);
  }
  GL11.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);
  unbindFrame();
}
