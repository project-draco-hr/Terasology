{
  EntityManager entityManager=CoreRegistry.get(EntityManager.class);
  CraftingActionComponent craftingComponent=entity.getComponent(CraftingActionComponent.class);
  Map<String,List<String>> possibleRecipe=Maps.newHashMap();
  for (  String level : CraftingActionComponent.levels) {
    int countNotEmptyElements=0;
    ArrayList<EntityRef> craftLevel=craftingComponent.getLevelElements(level);
    ArrayList<String> translatedLevel=new ArrayList<String>();
    if (craftLevel != null) {
      for (      EntityRef craftElement : craftLevel) {
        ItemComponent item=craftElement.getComponent(ItemComponent.class);
        if (item != null) {
          translatedLevel.add(item.name.toLowerCase());
          countNotEmptyElements++;
        }
 else {
          translatedLevel.add(EMPTY_ROW);
        }
      }
      possibleRecipe.put(level,translatedLevel);
    }
  }
  String searchingKey=getRecipeKey(possibleRecipe);
  if (entitesWithRecipes.containsKey(searchingKey)) {
    boolean isRecipe=false;
    for (    Prefab prefabWithRecipe : entitesWithRecipes.get(searchingKey)) {
      CraftRecipeComponent craftRecipe=prefabWithRecipe.getComponent(CraftRecipeComponent.class);
      RecipeMatrix possibleRecipeMatrix=new RecipeMatrix(possibleRecipe,3,3);
      RecipeMatrix craftMatrix=new RecipeMatrix(craftRecipe.recipe,3,3);
      isRecipe=!craftRecipe.fullMatch ? possibleRecipeMatrix.trim().equals(craftMatrix.trim()) : possibleRecipeMatrix.equals(craftMatrix);
      if (isRecipe) {
        return createNewElement(prefabWithRecipe);
      }
    }
  }
  return EntityRef.NULL;
}
