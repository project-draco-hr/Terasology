{
  super.applyParameters(program);
  DynamicFBM dynamicFBM=CoreRegistry.get(DynamicFBM.class);
  Camera activeCamera=CoreRegistry.get(WorldRenderer.class).getActiveCamera();
  WorldProvider worldProvider=CoreRegistry.get(WorldProvider.class);
  Vector3f tint=worldProvider.getBlock(activeCamera.getPosition()).getTint();
  program.setFloat3("inLiquidTint",tint.x,tint.y,tint.z,true);
  int texId=0;
  GL13.glActiveTexture(GL13.GL_TEXTURE0 + texId);
  dynamicFBM.bindFboColorTexture(DefaultDynamicFBOs.ReadOnlyGBuffer.getResourceUrn());
  program.setInt("texScene",texId++,true);
  if (CoreRegistry.get(Config.class).getRendering().isBloom()) {
    GL13.glActiveTexture(GL13.GL_TEXTURE0 + texId);
    dynamicFBM.bindFboColorTexture(BloomPassesNode.BLOOM_2_URN);
    program.setInt("texBloom",texId++,true);
    program.setFloat("bloomFactor",bloomFactor,true);
  }
  program.setFloat2("aberrationOffset",aberrationOffsetX,aberrationOffsetY,true);
  if (CoreRegistry.get(Config.class).getRendering().isLightShafts()) {
    GL13.glActiveTexture(GL13.GL_TEXTURE0 + texId);
    dynamicFBM.bindFboColorTexture(LightShaftsNode.LIGHT_SHAFTS_URN);
    program.setInt("texLightShafts",texId++,true);
  }
  Optional<? extends Texture> vignetteTexture=Assets.getTexture("engine:vignette");
  if (vignetteTexture.isPresent()) {
    GL13.glActiveTexture(GL13.GL_TEXTURE0 + texId);
    glBindTexture(GL11.GL_TEXTURE_2D,vignetteTexture.get().getId());
    program.setInt("texVignette",texId++,true);
  }
}
