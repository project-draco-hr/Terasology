{
  canvas.setPart(TREE_ITEM);
  if (model.get().getItemCount() == 0) {
    return new Vector2i();
  }
  model.get().setEnumerateExpandedOnly(false);
  Vector2i result=new Vector2i();
  for (int i=0; i < model.get().getItemCount(); i++) {
    Tree<T> item=model.get().getItem(i);
    Vector2i preferredSize=canvas.getCurrentStyle().getMargin().grow(itemRenderer.getPreferredSize(item.getValue(),canvas).addX(item.getDepth() * itemIndent.get()));
    result.x=Math.max(result.x,preferredSize.x);
    if (i < maxItems.get()) {
      result.y+=preferredSize.y;
    }
  }
  model.get().setEnumerateExpandedOnly(true);
  result.addX(canvas.calculateRestrictedSize(verticalBar,new Vector2i(canvas.size().x,canvas.size().y)).x);
  result.addX(itemIndent.get());
  return result;
}
