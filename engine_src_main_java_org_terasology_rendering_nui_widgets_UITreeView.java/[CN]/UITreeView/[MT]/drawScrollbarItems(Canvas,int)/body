{
  Border itemMargin=canvas.getCurrentStyle().getMargin();
  int scrollbarWidth=canvas.calculateRestrictedSize(verticalBar,new Vector2i(canvas.size().x,canvas.size().y)).x;
  int scrollbarHeight=canvas.size().y - itemMargin.getTotalHeight();
  int availableWidth=canvas.size().x - scrollbarWidth;
  int scrollbarXPosition=canvas.size().x - scrollbarWidth - itemMargin.getRight();
  int scrollbarYPosition=itemMargin.getTop();
  Rect2i scrollableArea=Rect2i.createFromMinAndSize(0,0,canvas.size().x,canvas.size().y);
  Rect2i scrollbarRegion=Rect2i.createFromMinAndSize(scrollbarXPosition,scrollbarYPosition,scrollbarWidth,scrollbarHeight);
  canvas.drawWidget(verticalBar,scrollbarRegion);
  int maxScrollbarRange=itemHeight * (model.get().getItemCount() - maxItems.get()) + itemMargin.getBottom();
  verticalBar.setRange(maxScrollbarRange);
  for (int i=0; i < model.get().getItemCount(); i++) {
    Tree<T> item=model.get().getItem(i);
    ItemInteractionListener itemListener=itemListeners.get(i);
    ExpandButtonInteractionListener buttonListener=expandListeners.get(i);
    if (!item.getChildren().isEmpty()) {
      canvas.setPart(EXPAND_BUTTON);
      setButtonMode(canvas,item,buttonListener);
      Rect2i buttonRegion=Rect2i.createFromMinAndSize(item.getDepth() * itemIndent.get(),i * itemHeight - verticalBar.getValue(),itemIndent.get(),itemHeight);
      try (SubRegion ignored=canvas.subRegion(scrollableArea,true)){
        drawButton(canvas,buttonRegion,buttonListener);
      }
     }
    canvas.setPart(TREE_ITEM);
    setItemMode(canvas,item,itemListener);
    Rect2i itemRegion=Rect2i.createFromMinAndSize((item.getDepth() + 1) * itemIndent.get(),i * itemHeight - verticalBar.getValue(),availableWidth - (item.getDepth() + 1) * itemIndent.get(),itemHeight);
    try (SubRegion ignored=canvas.subRegion(scrollableArea,true)){
      drawItem(canvas,itemRegion,item,itemListener);
    }
   }
}
