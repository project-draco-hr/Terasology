{
  super(title,size);
  setModal(true);
  _inputSeed=new UIInput(new Vector2f(256f,30f));
  _inputSeed.setVisible(true);
  _inputWorldTitle=new UIInput(new Vector2f(256f,30f));
  _inputWorldTitle.setVisible(true);
  _inputWorldTitleLabel=new UIText("Enter a world name:");
  _inputWorldTitleLabel.setColor(Color.darkGray);
  _inputWorldTitleLabel.getSize().y=16f;
  _inputWorldTitleLabel.setVisible(true);
  _inputSeedLabel=new UIText("Enter a seed (optional):");
  _inputSeedLabel.setColor(Color.darkGray);
  _inputSeedLabel.getSize().y=16f;
  _inputSeedLabel.setVisible(true);
  _chunkGeneratorLabel=new UIText("Choose Chunk Generator:");
  _chunkGeneratorLabel.setColor(Color.darkGray);
  _chunkGeneratorLabel.getSize().y=16f;
  _chunkGeneratorLabel.setVisible(true);
  _chunkGenerator=new UIComboBox(new Vector2f(176f,22f),new Vector2f(175f,64f));
  _chunkGenerator.addItem("Normal",new Integer(0));
  _chunkGenerator.addItem("Flat",new Integer(1));
  _chunkGenerator.setSelectedItemIndex(0);
  _chunkGenerator.setVisible(true);
  _inputWorldTitleLabel.setPosition(new Vector2f(15f,32f));
  _inputWorldTitle.setPosition(new Vector2f(_inputWorldTitleLabel.getPosition().x,_inputWorldTitleLabel.getPosition().y + _inputWorldTitleLabel.getSize().y + 8f));
  _inputSeedLabel.setPosition(new Vector2f(_inputWorldTitle.getPosition().x,_inputWorldTitle.getPosition().y + _inputWorldTitle.getSize().y + 16f));
  _inputSeed.setPosition(new Vector2f(_inputSeedLabel.getPosition().x,_inputSeedLabel.getPosition().y + _inputSeedLabel.getSize().y + 8f));
  _chunkGeneratorLabel.setPosition(new Vector2f(_inputSeed.getPosition().x,_inputSeed.getPosition().y + _inputSeed.getSize().y + 16f));
  _chunkGenerator.setPosition(new Vector2f(_chunkGeneratorLabel.getPosition().x,_chunkGeneratorLabel.getPosition().y + _chunkGeneratorLabel.getSize().y + 8f));
  _okButton=new UIButton(new Vector2f(128f,32f),UIButton.eButtonType.NORMAL);
  _okButton.getLabel().setText("Play");
  _okButton.setPosition(new Vector2f(size.x / 2 - _okButton.getSize().x - 16f,size.y - _okButton.getSize().y - 10));
  _okButton.setVisible(true);
  _okButton.addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      if (_inputWorldTitle.getValue().isEmpty()) {
        GUIManager.getInstance().showMessage("Error","Please enter a world name");
        return;
      }
 else       if ((new File(PathManager.getInstance().getWorldSavePath(_inputWorldTitle.getValue()),WorldInfo.DEFAULT_FILE_NAME)).exists()) {
        GUIManager.getInstance().showMessage("Error","A World with this name already exists");
        return;
      }
      if (_inputSeed.getValue().length() > 0) {
        Config.getInstance().setDefaultSeed(_inputSeed.getValue());
      }
 else {
        FastRandom random=new FastRandom();
        Config.getInstance().setDefaultSeed(random.randomCharacterString(32));
      }
      if (_inputWorldTitle.getValue().length() > 0) {
        Config.getInstance().setWorldTitle(_inputWorldTitle.getValue());
      }
 else {
        Config.getInstance().setWorldTitle(getWorldName());
      }
      List<String> chunkList=new ArrayList<String>();
switch (_chunkGenerator.getSelectedItemIndex()) {
case 1:
        chunkList.add(FlatTerrainGenerator.class.getName());
      chunkList.add(FloraGenerator.class.getName());
    chunkList.add(LiquidsGenerator.class.getName());
  chunkList.add(ForestGenerator.class.getName());
break;
default :
chunkList.add(PerlinTerrainGenerator.class.getName());
chunkList.add(FloraGenerator.class.getName());
chunkList.add(LiquidsGenerator.class.getName());
chunkList.add(ForestGenerator.class.getName());
break;
}
String[] chunksListArr=chunkList.toArray(new String[chunkList.size()]);
Config.getInstance().setChunkGenerator(chunksListArr);
CoreRegistry.get(GameEngine.class).changeState(new StateSinglePlayer(new WorldInfo(Config.getInstance().getWorldTitle(),Config.getInstance().getDefaultSeed(),Config.getInstance().getDayNightLengthInMs() / 4,chunksListArr)));
}
}
);
_cancelButton=new UIButton(new Vector2f(128f,32f),UIButton.eButtonType.NORMAL);
_cancelButton.setPosition(new Vector2f(_okButton.getPosition().x + _okButton.getSize().x + 16f,_okButton.getPosition().y));
_cancelButton.getLabel().setText("Cancel");
_cancelButton.setVisible(true);
_cancelButton.addClickListener(new ClickListener(){
@Override public void click(UIDisplayElement element,int button){
close();
}
}
);
addDisplayElement(_inputWorldTitleLabel,"inputWorldTitleLabel");
addDisplayElement(_inputWorldTitle,"inputWorldTitle");
addDisplayElement(_inputSeedLabel,"inputSeedLabel");
addDisplayElement(_inputSeed,"inputSeed");
addDisplayElement(_chunkGeneratorLabel,"chunkGeneratorLabel");
addDisplayElement(_okButton,"okButton");
addDisplayElement(_cancelButton,"cancelButton");
addDisplayElement(_chunkGenerator,"chunkGenerator");
}
