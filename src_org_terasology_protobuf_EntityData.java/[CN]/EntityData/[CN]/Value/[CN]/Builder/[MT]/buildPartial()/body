{
  org.terasology.protobuf.EntityData.Value result=new org.terasology.protobuf.EntityData.Value(this);
  int from_bitField0_=bitField0_;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    double_=java.util.Collections.unmodifiableList(double_);
    bitField0_=(bitField0_ & ~0x00000001);
  }
  result.double_=double_;
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    float_=java.util.Collections.unmodifiableList(float_);
    bitField0_=(bitField0_ & ~0x00000002);
  }
  result.float_=float_;
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    integer_=java.util.Collections.unmodifiableList(integer_);
    bitField0_=(bitField0_ & ~0x00000004);
  }
  result.integer_=integer_;
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    long_=java.util.Collections.unmodifiableList(long_);
    bitField0_=(bitField0_ & ~0x00000008);
  }
  result.long_=long_;
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    boolean_=java.util.Collections.unmodifiableList(boolean_);
    bitField0_=(bitField0_ & ~0x00000010);
  }
  result.boolean_=boolean_;
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    string_=new com.google.protobuf.UnmodifiableLazyStringList(string_);
    bitField0_=(bitField0_ & ~0x00000020);
  }
  result.string_=string_;
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    byte_=java.util.Collections.unmodifiableList(byte_);
    bitField0_=(bitField0_ & ~0x00000040);
  }
  result.byte_=byte_;
  if (valueBuilder_ == null) {
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      value_=java.util.Collections.unmodifiableList(value_);
      bitField0_=(bitField0_ & ~0x00000080);
    }
    result.value_=value_;
  }
 else {
    result.value_=valueBuilder_.build();
  }
  if (nameValueBuilder_ == null) {
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      nameValue_=java.util.Collections.unmodifiableList(nameValue_);
      bitField0_=(bitField0_ & ~0x00000100);
    }
    result.nameValue_=nameValue_;
  }
 else {
    result.nameValue_=nameValueBuilder_.build();
  }
  onBuilt();
  return result;
}
