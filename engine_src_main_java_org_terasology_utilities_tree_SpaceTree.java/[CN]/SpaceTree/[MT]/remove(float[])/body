{
  validatePosition(position);
  if (rootNode == null) {
    return null;
  }
 else {
    if (rootNode.center != null) {
      int subNodeIndex=getSubNodeIndex(position,rootNode.center);
      if (subNodeIndex == -1) {
        Node oldRootNode=rootNode;
        rootNode=null;
        for (        Node subNode : oldRootNode.subNodes) {
          addAllFromNode(subNode,null);
        }
        return oldRootNode.centerValue;
      }
 else {
        return removeFromSubNodeOfNode(position,rootNode,subNodeIndex);
      }
    }
 else {
      for (      NodeEntry<T> nodeEntry : rootNode.nodeBucket) {
        if (distanceFunction.getDistance(nodeEntry.position,position) == 0) {
          rootNode.nodeBucket.remove(nodeEntry);
          if (rootNode.nodeBucket.size() == 0) {
            rootNode=null;
          }
          return nodeEntry.value;
        }
      }
      return null;
    }
  }
}
