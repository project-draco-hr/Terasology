{
  Iterator<NodeEntry<T>> iterator=nodeBucket.iterator();
  NodeEntry<T> newCenter=iterator.next();
  center=newCenter.position;
  centerValue=newCenter.value;
  subNodes=new SpaceTree.Node[subNodeCount];
  while (iterator.hasNext()) {
    NodeEntry<T> nodeEntry=iterator.next();
    int subNodeIndex=getSubNodeIndex(nodeEntry.position,center);
    if (subNodes[subNodeIndex] == null) {
      float[] min=new float[dimensions];
      float[] max=new float[dimensions];
      for (int i=0; i < dimensions; i++) {
        if (nodeEntry.position[i] > center[i]) {
          min[i]=center[i];
          max[i]=maxValues[i];
        }
 else {
          min[i]=minValues[i];
          max[i]=center[i];
        }
      }
      subNodes[subNodeIndex]=new Node(nodeEntry.position,nodeEntry.value,min,max);
    }
 else {
      subNodes[subNodeIndex].nodeBucket.add(nodeEntry);
    }
  }
  nodeBucket=null;
}
