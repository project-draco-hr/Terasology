{
  Vector3f cameraPosition=worldRenderer.getActiveCamera().getPosition();
  for (  EntityRef entity : entityRefs) {
    MeshComponent meshComp=entity.getComponent(MeshComponent.class);
    meshComp.material.enable();
    LocationComponent location=entity.getComponent(LocationComponent.class);
    if (location == null) {
      continue;
    }
    if (isHidden(entity,meshComp)) {
      continue;
    }
    Quat4f worldRot=location.getWorldRotation();
    Vector3f worldPos=location.getWorldPosition();
    float worldScale=location.getWorldScale();
    AABB aabb=meshComp.mesh.getAABB().transform(worldRot,worldPos,worldScale);
    if (worldRenderer.getActiveCamera().hasInSight(aabb)) {
      glPushMatrix();
      glTranslated(worldPos.x - cameraPosition.x,worldPos.y - cameraPosition.y,worldPos.z - cameraPosition.z);
      Vector3f axis=worldRot.getAxis();
      float angle=(float)worldRot.getAngle();
      glRotatef(TeraMath.RAD_TO_DEG * angle,axis.getX(),axis.getY(),axis.getZ());
      glScalef(worldScale,worldScale,worldScale);
      meshComp.material.setFloat4("colorOffset",meshComp.color.rf(),meshComp.color.gf(),meshComp.color.bf(),meshComp.color.af(),true);
      meshComp.material.setFloat("light",worldRenderer.getRenderingLightValueAt(worldPos),true);
      meshComp.mesh.render();
      glPopMatrix();
    }
  }
}
