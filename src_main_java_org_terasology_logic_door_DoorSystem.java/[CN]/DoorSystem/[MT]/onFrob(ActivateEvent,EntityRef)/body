{
  DoorComponent door=entity.getComponent(DoorComponent.class);
  Side oldSide=(door.isOpen) ? door.openSide : door.closedSide;
  Side newSide=(door.isOpen) ? door.closedSide : door.openSide;
  BlockRegionComponent regionComp=entity.getComponent(BlockRegionComponent.class);
  worldProvider.setBlock(regionComp.region.min(),door.bottomBlockFamily.getBlockUponPlacement(worldProvider,blockEntityRegistry,regionComp.region.min(),newSide,Side.TOP),door.bottomBlockFamily.getBlockUponPlacement(worldProvider,blockEntityRegistry,regionComp.region.min(),oldSide,Side.TOP));
  worldProvider.setBlock(regionComp.region.max(),door.topBlockFamily.getBlockUponPlacement(worldProvider,blockEntityRegistry,regionComp.region.max(),newSide,Side.TOP),door.topBlockFamily.getBlockUponPlacement(worldProvider,blockEntityRegistry,regionComp.region.max(),oldSide,Side.TOP));
  Sound sound=(door.isOpen) ? door.closeSound : door.openSound;
  if (sound != null) {
    LocationComponent loc=entity.getComponent(LocationComponent.class);
    audioManager.playSound(sound,loc.getWorldPosition(),10,1);
  }
  door.isOpen=!door.isOpen;
  entity.saveComponent(door);
}
