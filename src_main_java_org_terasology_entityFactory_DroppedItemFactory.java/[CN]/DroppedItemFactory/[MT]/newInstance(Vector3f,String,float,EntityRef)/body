{
  Mesh itemMesh=iconMeshes.get(iconName);
  if (itemMesh == null) {
    Icon icon=Icon.get(iconName);
    itemMesh=MeshFactory.getInstance().generateItemMesh(icon.getX(),icon.getY());
    iconMeshes.put(iconName,itemMesh);
  }
  Prefab prefab=CoreRegistry.get(PrefabManager.class).getPrefab("core:droppeditem");
  if (prefab != null && prefab.getComponent(LocationComponent.class) != null) {
    EntityRef itemEntity=entityManager.create(prefab,location);
    MeshComponent itemMeshComponent=itemEntity.getComponent(MeshComponent.class);
    itemMeshComponent.mesh=itemMesh;
    itemEntity.saveComponent(itemMeshComponent);
    LifespanComponent lifespanComp=itemEntity.getComponent(LifespanComponent.class);
    lifespanComp.lifespan=lifespan;
    itemEntity.saveComponent(lifespanComp);
    DroppedItemTypeComponent droppedItem=itemEntity.getComponent(DroppedItemTypeComponent.class);
    droppedItem.placedEntity=entityManager.copy(placedEntity);
    ItemComponent itemComponent=placedEntity.getComponent(ItemComponent.class);
    ItemComponent newItem=new ItemComponent();
    newItem.stackCount=1;
    newItem.container=EntityRef.NULL;
    newItem.name=itemComponent.name;
    newItem.baseDamage=itemComponent.baseDamage;
    newItem.consumedOnUse=itemComponent.consumedOnUse;
    newItem.icon=itemComponent.icon;
    newItem.stackId=itemComponent.stackId;
    newItem.renderWithIcon=itemComponent.renderWithIcon;
    droppedItem.placedEntity.saveComponent(newItem);
    itemEntity.saveComponent(droppedItem);
    return itemEntity;
  }
  return EntityRef.NULL;
}
