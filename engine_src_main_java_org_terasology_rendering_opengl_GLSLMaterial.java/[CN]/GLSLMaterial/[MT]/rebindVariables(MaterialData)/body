{
  for (  Map.Entry<String,Texture> entry : data.getTextures().entrySet()) {
    setTexture(entry.getKey(),entry.getValue());
  }
  for (  Map.Entry<String,Float> entry : data.getFloatParams().entrySet()) {
    setFloat(entry.getKey(),entry.getValue());
  }
  for (  Map.Entry<String,Integer> entry : data.getIntegerParams().entrySet()) {
    setInt(entry.getKey(),entry.getValue());
  }
  for (  Map.Entry<String,float[]> entry : data.getFloatArrayParams().entrySet()) {
    float[] value=entry.getValue();
switch (value.length) {
case 1:
      setFloat(entry.getKey(),value[0]);
    break;
case 2:
  setFloat2(entry.getKey(),value[0],value[1]);
break;
case 3:
setFloat3(entry.getKey(),value[0],value[1],value[2]);
break;
case 4:
setFloat4(entry.getKey(),value[0],value[1],value[2],value[3]);
break;
default :
logger.error("MaterialData contains float array entry of size > 4");
break;
}
}
}
