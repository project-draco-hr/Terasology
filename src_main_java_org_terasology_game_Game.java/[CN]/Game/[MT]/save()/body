{
  StorageManager storageManager=CoreRegistry.get(StorageManager.class);
  if (storageManager != null) {
    BlockManager blockManager=CoreRegistry.get(BlockManager.class);
    WorldProvider worldProvider=CoreRegistry.get(WorldProvider.class);
    ModuleConfig moduleConfig=new ModuleConfig();
    for (    Module module : CoreRegistry.get(ModuleManager.class).getActiveModules()) {
      moduleConfig.addMod(module.getId());
    }
    GameManifest gameManifest=new GameManifest(name,seed,time.getGameTimeInMs(),moduleConfig);
    List<String> registeredBlockFamilies=Lists.newArrayList();
    for (    BlockFamily family : blockManager.listRegisteredBlockFamilies()) {
      registeredBlockFamilies.add(family.getURI().toString());
    }
    gameManifest.setRegisteredBlockFamilies(registeredBlockFamilies);
    gameManifest.setBlockIdMap(blockManager.getBlockIdMap());
    gameManifest.addWorld(worldProvider.getWorldInfo());
    try {
      GameManifest.save(PathManager.getInstance().getCurrentSavePath().resolve(GameManifest.DEFAULT_FILE_NAME),gameManifest);
    }
 catch (    IOException e) {
      logger.error("Failed to save world manifest",e);
    }
    try {
      storageManager.flush();
    }
 catch (    IOException e) {
      logger.error("Failed to save game",e);
    }
    storageManager.shutdown();
  }
}
