{
  super.onOpened();
  PropertyLayout properties=find("properties",PropertyLayout.class);
  properties.setOrdering(PropertyOrdering.byLabel());
  properties.clear();
  SimpleUri generatorUri=config.getWorldGeneration().getDefaultGenerator();
  WorldGeneratorInfo info=worldGeneratorManager.getWorldGeneratorInfo(generatorUri);
  Module worldGeneratorModule=moduleManager.getLatestModuleVersion(info.getUri().getModuleName());
  try {
    moduleManager.enableModuleAndDependencies(worldGeneratorModule);
    WorldGenerator wg=CoreRegistry.get(WorldGeneratorManager.class).createGenerator(info.getUri());
    if (wg.getConfigurator().isPresent()) {
      worldConfig=wg.getConfigurator().get();
      Map<String,?> props=worldConfig.getProperties();
      for (      String label : props.keySet()) {
        PropertyProvider<?> provider=new PropertyProvider<>(props.get(label));
        properties.addPropertyProvider(label,provider);
      }
    }
 else {
      logger.info(info.getUri().toString() + " does not support configuration");
      return;
    }
  }
 catch (  UnresolvedWorldGeneratorException e) {
    logger.error("Unable to load world generator: " + info.getUri().toString());
  }
 finally {
    moduleManager.disableAllModules();
  }
}
