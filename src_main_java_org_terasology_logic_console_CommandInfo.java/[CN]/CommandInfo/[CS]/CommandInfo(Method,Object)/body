{
  this.provider=provider;
  this.name=method.getName();
  Command commandAnnotation=method.getAnnotation(Command.class);
  if (commandAnnotation == null) {
    throw new IllegalArgumentException("Method not annotated with command");
  }
  for (int i=0; i < method.getParameterTypes().length; ++i) {
    Class<?> parameterType=method.getParameterTypes()[i];
    if (i == method.getParameterTypes().length - 1 && parameterType == EntityRef.class) {
      clientEntityRequired=true;
    }
 else {
      String paramName=method.getParameterTypes()[i].toString();
      for (      Annotation paramAnnot : method.getParameterAnnotations()[i]) {
        if (paramAnnot instanceof CommandParam) {
          paramName=((CommandParam)paramAnnot).value();
          break;
        }
      }
      parameterNames.add(paramName);
    }
  }
  this.runOnServer=commandAnnotation.runOnServer();
  this.shortDescription=commandAnnotation.shortDescription();
  this.helpText=commandAnnotation.helpText();
}
