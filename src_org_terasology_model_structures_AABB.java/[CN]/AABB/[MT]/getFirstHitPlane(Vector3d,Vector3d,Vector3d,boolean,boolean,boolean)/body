{
  Vector3d hitNormal=new Vector3d();
  double dist=Double.POSITIVE_INFINITY;
  if (testX) {
    double distX;
    if (direction.x > 0) {
      distX=(_position.x - pos.x - dimensions.x- _dimensions.x) / direction.x;
    }
 else {
      distX=(_position.x - pos.x + dimensions.x + _dimensions.x) / direction.x;
    }
    if (distX >= 0 && distX < dist) {
      hitNormal.set(Math.copySign(1,direction.x),0,0);
    }
  }
  if (testY) {
    double distY;
    if (direction.y > 0) {
      distY=(_position.y - pos.y - dimensions.y- _dimensions.y) / direction.y;
    }
 else {
      distY=(_position.y - pos.y + dimensions.y + _dimensions.y) / direction.y;
    }
    if (distY >= 0 && distY < dist) {
      hitNormal.set(0,Math.copySign(1,direction.y),0);
    }
  }
  if (testZ) {
    double distZ;
    if (direction.z > 0) {
      distZ=(_position.z - pos.z - dimensions.z- _dimensions.z) / direction.z;
    }
 else {
      distZ=(_position.z - pos.z + dimensions.z + _dimensions.z) / direction.z;
    }
    if (distZ >= 0 && distZ < dist) {
      hitNormal.set(0,0,Math.copySign(1,direction.z));
    }
  }
  return hitNormal;
}
