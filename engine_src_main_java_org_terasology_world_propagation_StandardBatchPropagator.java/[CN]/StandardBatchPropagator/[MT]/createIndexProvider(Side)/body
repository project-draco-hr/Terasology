{
  IndexProvider indexProvider;
switch (side) {
case TOP:
case BOTTOM:
    indexProvider=new IndexProvider(){
      @Override public int getIndexFor(      Vector3i pos){
        return pos.x + ChunkConstants.SIZE_X * pos.z;
      }
      @Override public int getIndexFor(      int x,      int y,      int z){
        return x + ChunkConstants.SIZE_X * z;
      }
    }
;
  break;
case LEFT:
case RIGHT:
indexProvider=new IndexProvider(){
  @Override public int getIndexFor(  Vector3i pos){
    return pos.y + ChunkConstants.SIZE_Y * pos.z;
  }
  @Override public int getIndexFor(  int x,  int y,  int z){
    return y + ChunkConstants.SIZE_Y * z;
  }
}
;
break;
default :
indexProvider=new IndexProvider(){
@Override public int getIndexFor(Vector3i pos){
return pos.x + ChunkConstants.SIZE_X * pos.y;
}
@Override public int getIndexFor(int x,int y,int z){
return x + ChunkConstants.SIZE_X * y;
}
}
;
break;
}
return indexProvider;
}
