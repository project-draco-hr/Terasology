{
  Iterator<Map.Entry<EntityRef,ResynchData>> i=pendingResynch.entrySet().iterator();
  while (i.hasNext()) {
    Map.Entry<EntityRef,ResynchData> entry=i.next();
    RigidBody body=entityRigidBodies.get(entry.getKey());
    ResynchData data=entry.getValue();
    if (body == null) {
      i.remove();
    }
 else {
      float applyDelta=delta;
      float timeDifference=delta + data.getT();
      if (timeDifference >= RESYNC_TIME) {
        applyDelta-=timeDifference - RESYNC_TIME;
        i.remove();
      }
      Vector3f change=new Vector3f();
      data.positionDelta.scale(applyDelta / RESYNC_TIME,change);
      Transform current=body.getWorldTransform(new Transform());
      change.add(current.origin);
      body.proceedToTransform(new Transform(new Matrix4f(current.getRotation(new Quat4f()),change,1)));
    }
  }
}
