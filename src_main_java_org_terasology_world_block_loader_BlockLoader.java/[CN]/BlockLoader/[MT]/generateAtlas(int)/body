{
  int size=Block.ATLAS_SIZE_IN_PX / (1 << mipMapLevel);
  int textureSize=Block.TEXTURE_SIZE_IN_PX / (1 << mipMapLevel);
  BufferedImage result=new BufferedImage(size,size,BufferedImage.TYPE_INT_ARGB);
  Graphics g=result.getGraphics();
  if (tiles.size() > MAX_TILES) {
    logger.severe("Too many tiles, culling overflow");
  }
  for (int index=0; index < tiles.size() && index < MAX_TILES; ++index) {
    Tile tile=tiles.get(index);
    int posX=(index) % Block.ATLAS_ELEMENTS_PER_ROW_AND_COLUMN;
    int posY=(index) / Block.ATLAS_ELEMENTS_PER_ROW_AND_COLUMN;
    g.drawImage(tile.getImage().getScaledInstance(textureSize,textureSize,Image.SCALE_SMOOTH),posX * textureSize,posY * textureSize,null);
  }
  return result;
}
