{
  ModuleManager moduleManager=ModuleManagerFactory.create();
  ModuleEnvironment environment=moduleManager.getEnvironment();
  ClassLoader classLoader=Thread.currentThread().getContextClassLoader();
  SortedSetMultimap<String,String> sortedApi=Multimaps.newSortedSetMultimap(new HashMap<String,Collection<String>>(),new Supplier<TreeSet<String>>(){
    @Override public TreeSet<String> get(){
      return new TreeSet<>();
    }
  }
);
  for (  Class<?> apiClass : environment.getTypesAnnotatedWith(API.class)) {
    boolean isPackage=apiClass.isSynthetic();
    URL location;
    String category;
    String apiPackage="";
    if (isPackage) {
      apiPackage=apiClass.getPackage().getName();
      location=classLoader.getResource(apiPackage.replace('.','/'));
    }
 else {
      location=apiClass.getResource('/' + apiClass.getName().replace('.','/') + ".class");
    }
    if (location == null) {
      System.out.println("Failed to get a class/package location, skipping " + apiClass);
      continue;
    }
switch (location.getProtocol()) {
case "jar":
      String categoryFragment=location.getPath();
    int bang=categoryFragment.lastIndexOf("!");
  int hyphen=categoryFragment.lastIndexOf("-",bang);
int slash=categoryFragment.lastIndexOf("/",hyphen);
category=categoryFragment.substring(slash + 1,hyphen);
if (isPackage) {
sortedApi.put(category,apiPackage + " (PACKAGE)");
}
 else {
sortedApi.put(category,apiClass.getName() + (apiClass.isInterface() ? " (INTERFACE)" : " (CLASS)"));
}
break;
case "file":
category="terasology engine";
if (isPackage) {
sortedApi.put(category,apiPackage + " (PACKAGE)");
}
 else {
sortedApi.put(category,apiClass.getName() + (apiClass.isInterface() ? " (INTERFACE)" : " (CLASS)"));
}
break;
default :
System.out.println("Unknown protocol for: " + apiClass + ", came from "+ location);
}
}
System.out.println("# Modding API:\n");
for (String key : sortedApi.keySet()) {
System.out.println("## " + key + "\n");
for (String value : sortedApi.get(key)) {
System.out.println("* " + value);
}
System.out.println("");
}
}
