{
  CraftingActionComponent craftingComponent=event.getTarget().getComponent(CraftingActionComponent.class);
  if (!event.isDown() || timer.getTimeInMs() - lastInteraction < 200 / craftIncreaseDecreaseSpeed) {
    if (!event.isDown()) {
      useButtonPushed=false;
      itsCraftActionTime=false;
      craftIncreaseDecreaseSpeed=1;
      if (!useButtonPushed && stateCreateBlock == statesCreateBlock.CREATED) {
        stateCreateBlock=statesCreateBlock.NOT_READY;
        resetDropMark();
        event.consume();
        return;
      }
      if (craftingComponent != null && additionalOptions) {
        event.getTarget().send(new ChangeLevelEvent(1,entity));
        event.consume();
        return;
      }
    }
    if (craftingComponent != null) {
      event.consume();
    }
    return;
  }
  if (stateCreateBlock == statesCreateBlock.CREATED) {
    event.consume();
    return;
  }
  if (craftingComponent != null) {
    useButtonPushed=true;
    if (timer.getTimeInMs() - lastInteraction > (200 / craftIncreaseDecreaseSpeed) && !additionalOptions) {
      LocalPlayerComponent localPlayerComp=entity.getComponent(LocalPlayerComponent.class);
      if (localPlayerComp.isDead)       return;
      InventoryComponent inventory=entity.getComponent(InventoryComponent.class);
      UIItemContainer toolbar=(UIItemContainer)guiManager.getWindowById("hud").getElementById("toolbar");
      EntityRef selectedItemEntity=inventory.itemSlots.get(localPlayerComp.selectedTool + toolbar.getSlotStart());
      if (!selectedItemEntity.equals(EntityRef.NULL)) {
        float dropPower=getDropPower();
        itsCraftActionTime=true;
        event.getTarget().send(new AddItemEvent(event.getTarget(),selectedItemEntity,dropPower / 6));
        resetDropMark();
        lastInteraction=timer.getTimeInMs();
      }
    }
    event.consume();
  }
 else {
    if (stateCreateBlock == statesCreateBlock.READY) {
      createCraftBlock(event,entity);
    }
  }
}
