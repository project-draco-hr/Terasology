{
  LocalPlayerComponent localPlayerComp=entity.getComponent(LocalPlayerComponent.class);
  CraftingActionComponent craftingComponent=event.getTarget().getComponent(CraftingActionComponent.class);
  if (localPlayerComp.isDead)   return;
switch (event.getState()) {
case DOWN:
case REPEAT:
    if (stateCreateBlock == statesCreateBlock.CREATED) {
      resetDropMark();
      event.consume();
      return;
    }
  dropButtonPushed=true;
if (craftingComponent == null) {
  stateCreateBlock=statesCreateBlock.READY;
  return;
}
if (craftingComponent != null) {
if (lastTimeThrowInteraction == 0) {
  lastTimeThrowInteraction=timer.getTimeInMs();
}
UIImage crossHair=(UIImage)CoreRegistry.get(GUIManager.class).getWindowById("hud").getElementById("crosshair");
crossHair.getTextureSize().set(new Vector2f(22f / 256f,22f / 256f));
float dropPower=getDropPower();
crossHair.getTextureOrigin().set(new Vector2f((46f + 22f * dropPower) / 256f,23f / 256f));
return;
}
break;
case UP:
dropButtonPushed=false;
if (!useButtonPushed && stateCreateBlock == statesCreateBlock.CREATED) {
stateCreateBlock=statesCreateBlock.NOT_READY;
localPlayerSystem.resetDropMark();
resetDropMark();
event.consume();
return;
}
if (craftingComponent == null) {
return;
}
if (craftingComponent != null) {
float dropPower=getDropPower();
if (stateCreateBlock != statesCreateBlock.CREATED) {
localPlayerSystem.resetDropMark();
resetDropMark();
event.consume();
return;
}
if (dontDrop) {
localPlayerSystem.resetDropMark();
resetDropMark();
dontDrop=false;
return;
}
dropPower*=25f;
resetDropMark();
localPlayerSystem.resetDropMark();
event.consume();
}
break;
}
}
