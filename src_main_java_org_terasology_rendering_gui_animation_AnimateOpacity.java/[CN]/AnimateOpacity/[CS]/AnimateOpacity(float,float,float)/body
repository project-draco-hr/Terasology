{
  this.fromOpacity=fromOpacity;
  this.toOpacity=toOpacity;
  this.speed=speed;
  this.id=generateId();
  if (fromOpacity < toOpacity) {
    this.factor=1;
  }
 else {
    this.factor=-1;
  }
  Tessellator tessellator=new Tessellator();
  TessellatorHelper.addGUIQuadMesh(tessellator,new Vector4f(255f / 256f,255f / 256f,255f / 256f,1.0f),1.0f,1.0f);
  mesh=tessellator.generateMesh();
  currentOpacity=fromOpacity;
}
