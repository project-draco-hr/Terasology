{
  if (networkSystem.getServer() != null && networkSystem.getServer().getInfo() != null) {
    NetData.ServerInfoMessage serverInfo=networkSystem.getServer().getInfo();
    gameManifest.setTitle(serverInfo.getGameName());
    for (    NetData.WorldInfo worldInfo : serverInfo.getWorldInfoList()) {
      WorldInfo world=new WorldInfo();
      world.setTime(worldInfo.getTime());
      world.setTitle(worldInfo.getTitle());
      gameManifest.addWorldInfo(world);
    }
    Map<String,Short> blockMap=Maps.newHashMap();
    for (int i=0; i < serverInfo.getBlockIdCount(); ++i) {
      blockMap.put(serverInfo.getBlockName(i),(short)serverInfo.getBlockId(i));
    }
    gameManifest.setRegisteredBlockFamilies(serverInfo.getRegisterBlockFamilyList());
    gameManifest.setBlockIdMap(blockMap);
    gameManifest.setTime(networkSystem.getServer().getInfo().getTime());
    ModuleConfig moduleConfig=gameManifest.getModuleConfiguration();
    ModuleManager moduleManager=CoreRegistry.get(ModuleManager.class);
    for (    NetData.ModuleInfo moduleInfo : networkSystem.getServer().getInfo().getModuleList()) {
      Module module=moduleManager.getModule(moduleInfo.getModuleId());
      if (module == null) {
        CoreRegistry.get(GameEngine.class).changeState(new StateMainMenu("Missing required module: " + moduleInfo.getModuleId()));
        return false;
      }
 else {
        logger.debug("Activating module: {}",moduleInfo.getModuleId());
        moduleConfig.addMod(moduleInfo.getModuleId());
      }
    }
    CoreRegistry.get(Game.class).load(gameManifest);
    return true;
  }
 else {
    return false;
  }
}
