{
  final ScrollableArea scrollArea=find("scrollArea",ScrollableArea.class);
  scrollArea.moveToBottom();
  Collection<Command> commands=console.getCommands();
  Collection<String> commandNames=Collections2.transform(commands,new Function<Command,String>(){
    @Override public String apply(    Command input){
      return input.getName();
    }
  }
);
  commandLine=find("commandLine",UICommandEntry.class);
  getManager().setFocus(commandLine);
  commandLine.setTabCompletionEngine(new CyclingTabCompletionEngine(console));
  commandLine.bindCommandHistory(new ReadOnlyBinding<List<String>>(){
    @Override public List<String> get(){
      return console.getPreviousCommands();
    }
  }
);
  commandLine.subscribe(new ActivateEventListener(){
    @Override public void onActivated(    UIWidget widget){
      console.execute(commandLine.getText(),localPlayer.getClientEntity());
      commandLine.setText("");
      scrollArea.moveToBottom();
    }
  }
);
  final UIText history=find("messageHistory",UIText.class);
  history.bindText(new ReadOnlyBinding<String>(){
    @Override public String get(){
      StringBuilder messageList=new StringBuilder();
      for (      Message message : console.getMessages()) {
        messageList.append(FontColor.getColored(message.getMessage(),message.getType().getColor()));
        messageList.append(Message.NEW_LINE);
      }
      return messageList.toString();
    }
  }
);
}
