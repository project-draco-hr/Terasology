{
  final ScrollableArea scrollArea=find("scrollArea",ScrollableArea.class);
  scrollArea.moveToBottom();
  commandLine=find("commandLine",UICommandEntry.class);
  getManager().setFocus(commandLine);
  commandLine.setTabCompletionEngine(new ConsoleTabCompletionEngine(console));
  commandLine.bindCommandHistory(new ReadOnlyBinding<List<String>>(){
    @Override public List<String> get(){
      return console.getPreviousCommands();
    }
  }
);
  commandLine.subscribe(new ActivateEventListener(){
    @Override public void onActivated(    UIWidget widget){
      console.execute(commandLine.getText(),localPlayer.getClientEntity());
      commandLine.setText("");
      scrollArea.moveToBottom();
    }
  }
);
  final UIText history=find("messageHistory",UIText.class);
  history.setReadOnly(true);
  history.bindText(new ReadOnlyBinding<String>(){
    @Override public String get(){
      StringBuilder messageList=new StringBuilder();
      Iterator<Message> messageIterator=console.getMessages().iterator();
      while (messageIterator.hasNext()) {
        Message message=messageIterator.next();
        messageList.append(FontColor.getColored(message.getMessage(),message.getType().getColor()));
        messageList.append("\n");
        if (messageIterator.hasNext()) {
          messageList.append("\n");
        }
      }
      return messageList.toString();
    }
  }
);
}
