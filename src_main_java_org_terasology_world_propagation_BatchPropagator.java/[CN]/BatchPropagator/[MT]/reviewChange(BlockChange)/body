{
  byte newValue=rules.getBlockValue(blockChange.getTo());
  byte existingValue=world.getValueAt(blockChange.getPosition());
  if (newValue > existingValue) {
    increase(blockChange.getPosition(),newValue);
  }
  byte oldValue=rules.getBlockValue(blockChange.getFrom());
  if (newValue < oldValue) {
    reduce(blockChange.getPosition(),oldValue);
  }
  for (  Side side : Side.values()) {
    PropagationComparison comparison=rules.comparePropagation(blockChange.getTo(),blockChange.getFrom(),side);
    if (comparison.isRestricting() && existingValue > 0) {
      reduce(blockChange.getPosition(),existingValue);
      Vector3i adjPos=side.getAdjacentPos(blockChange.getPosition());
      if (world.isInBounds(adjPos)) {
        byte adjValue=world.getValueAt(adjPos);
        if (adjValue == rules.propagateValue(existingValue,side)) {
          reduce(adjPos,adjValue);
        }
      }
    }
 else     if (comparison.isPermitting()) {
      if (existingValue > 0) {
        queueSpreadValue(blockChange.getPosition(),existingValue);
      }
      Vector3i adjPos=side.getAdjacentPos(blockChange.getPosition());
      if (world.isInBounds(adjPos)) {
        queueSpreadValue(adjPos,world.getValueAt(adjPos));
      }
    }
  }
}
