{
  this.world=world;
  this.rules=rules;
  for (  Side side : Side.values()) {
    Vector3i delta=new Vector3i(side.getVector3i());
    if (delta.x < 0) {
      delta.x+=Chunk.SIZE_X;
    }
 else     if (delta.x > 0) {
      delta.x-=Chunk.SIZE_X;
    }
    if (delta.y < 0) {
      delta.y+=Chunk.SIZE_Y;
    }
 else     if (delta.y > 0) {
      delta.y-=Chunk.SIZE_Y;
    }
    if (delta.z < 0) {
      delta.z+=Chunk.SIZE_Z;
    }
 else     if (delta.z > 0) {
      delta.z-=Chunk.SIZE_Z;
    }
    chunkEdgeDeltas.put(side,delta);
  }
  increaseQueues=new Set[rules.getMaxValue()];
  reduceQueues=new Set[rules.getMaxValue()];
  for (int i=0; i < rules.getMaxValue(); ++i) {
    increaseQueues[i]=Sets.newLinkedHashSet();
    reduceQueues[i]=Sets.newLinkedHashSet();
  }
}
