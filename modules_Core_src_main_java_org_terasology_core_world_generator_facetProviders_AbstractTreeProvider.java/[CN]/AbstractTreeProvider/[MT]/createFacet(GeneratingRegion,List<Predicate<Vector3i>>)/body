{
  Border3D borderForTreeFacet=region.getBorderForFacet(TreeFacet.class);
  TreeFacet facet=new TreeFacet(region.getRegion(),borderForTreeFacet.extendBy(0,15,10));
  SurfaceHeightFacet surface=region.getRegionFacet(SurfaceHeightFacet.class);
  int minY=facet.getWorldRegion().minY();
  int maxY=facet.getWorldRegion().maxY();
  for (int z=facet.getWorldRegion().minZ(); z <= facet.getWorldRegion().maxZ(); z++) {
    for (int x=facet.getWorldRegion().minX(); x <= facet.getWorldRegion().maxX(); x++) {
      int height=TeraMath.ceilToInt(surface.getWorld(x,z));
      if (height >= minY && height <= maxY) {
        Vector3i pos=new Vector3i(x,height,z);
        if (Predicates.and(filters).apply(pos)) {
          facet.setWorld(x,height,z,Integer.valueOf(treeSeedNoise.noise(x,z)));
        }
      }
    }
  }
  return facet;
}
