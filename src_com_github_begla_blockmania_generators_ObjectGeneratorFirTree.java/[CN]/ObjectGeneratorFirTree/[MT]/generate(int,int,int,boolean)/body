{
  int height=MathHelper.fastAbs(_worldProvider.getRandom().randomInt() % 4) + 8;
  if (posY + height >= Chunk.getChunkDimensionY()) {
    return;
  }
  for (int i=0; i < height; i++) {
    _worldProvider.setBlock(posX,posY + i,posZ,BlockManager.getInstance().getBlock("Tree trunk").getId(),update,true);
  }
  int stage=2;
  for (int y=height - 1; y >= (height * (1.0 / 3.0)); y--) {
    for (int x=-(stage / 2); x <= (stage / 2); x++) {
      if (!(x == 0)) {
        _worldProvider.setBlock(posX + x,posY + y,posZ,BlockManager.getInstance().getBlock("Dark leaf").getId(),update,false);
        _worldProvider.refreshSunlightAt(posX + x,0,false,true);
      }
    }
    for (int z=-(stage / 2); z <= (stage / 2); z++) {
      if (!(z == 0)) {
        _worldProvider.setBlock(posX,posY + y,posZ + z,BlockManager.getInstance().getBlock("Dark leaf").getId(),update,false);
        _worldProvider.refreshSunlightAt(0,posZ + z,false,true);
      }
    }
    stage++;
  }
  _worldProvider.setBlock(posX,posY + height,posZ,BlockManager.getInstance().getBlock("Dark leaf").getId(),update,false);
}
