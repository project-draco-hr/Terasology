{
  int X=(int)MathHelper.fastFloor(x) & 255, Y=(int)MathHelper.fastFloor(y) & 255, Z=(int)MathHelper.fastFloor(z) & 255;
  x-=MathHelper.fastFloor(x);
  y-=MathHelper.fastFloor(y);
  z-=MathHelper.fastFloor(z);
  double u=fade(x), v=fade(y), w=fade(z);
  int A=noisePerm[X % 255] + Y, AA=noisePerm[A % 255] + Z, AB=noisePerm[(A + 1) % 255] + Z, B=noisePerm[(X + 1) % 255] + Y, BA=noisePerm[B % 255] + Z, BB=noisePerm[(B + 1) % 255] + Z;
  return lerp(w,lerp(v,lerp(u,grad(noisePerm[AA % 255],x,y,z),grad(noisePerm[BA % 255],x - 1,y,z)),lerp(u,grad(noisePerm[AB % 255],x,y - 1,z),grad(noisePerm[BB % 255],x - 1,y - 1,z))),lerp(v,lerp(u,grad(noisePerm[(AA + 1) % 255],x,y,z - 1),grad(noisePerm[(BA + 1) % 255],x - 1,y,z - 1)),lerp(u,grad(noisePerm[(AB + 1) % 255],x,y - 1,z - 1),grad(noisePerm[(BB + 1) % 255],x - 1,y - 1,z - 1))));
}
