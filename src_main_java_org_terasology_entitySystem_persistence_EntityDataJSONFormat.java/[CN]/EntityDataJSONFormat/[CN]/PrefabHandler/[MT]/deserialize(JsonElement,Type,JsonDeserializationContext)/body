{
  EntityData.Prefab.Builder prefab=EntityData.Prefab.newBuilder();
  JsonObject jsonObject=json.getAsJsonObject();
  for (  Map.Entry<String,JsonElement> entry : jsonObject.entrySet()) {
    String name=entry.getKey().toLowerCase(Locale.ENGLISH);
    if (name.equals("name")) {
      if (entry.getValue().isJsonPrimitive())       prefab.setName(entry.getValue().getAsString());
    }
 else     if (name.equals("parent")) {
      if (entry.getValue().isJsonPrimitive()) {
        prefab.addParentName(entry.getValue().getAsString());
      }
 else       if (entry.getValue().isJsonArray()) {
        for (        JsonElement element : entry.getValue().getAsJsonArray()) {
          prefab.addParentName(element.getAsString());
        }
      }
    }
 else     if (name.equals("persisted")) {
      prefab.setPersisted(entry.getValue().getAsBoolean());
    }
 else     if (entry.getValue().isJsonObject()) {
      EntityData.Component.Builder component=context.deserialize(entry.getValue(),EntityData.Component.Builder.class);
      component.setType(entry.getKey());
      prefab.addComponent(component);
    }
  }
  return prefab.build();
}
