{
  setSize(size);
  setCrop(true);
  setBackgroundImage("engine:gui_menu",new Vector2f(0f,90f),new Vector2f(256f,30f));
  addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      if (!isDisabled()) {
        setFocus(_inputObj);
        if (_inputValue.length() > 0 && _inputText.getTextWidth() > 0) {
          Vector2f absolutePosition=_inputText.calcAbsolutePosition();
          float positionRelativeElement=absolutePosition.x + _inputText.getTextWidth() - new Vector2f(Mouse.getX(),Display.getHeight() - Mouse.getY()).x;
          float averageSymbols=_inputText.getTextWidth() / _inputValue.length();
          int pos=Math.abs((int)(positionRelativeElement / averageSymbols) - _inputValue.length());
          if (pos > _inputValue.length()) {
            pos=_inputValue.length();
          }
 else           if (pos < 0) {
            pos=0;
          }
          _cursorPosition=pos;
        }
      }
    }
  }
);
  addMouseButtonListener(new MouseButtonListener(){
    @Override public void up(    UIDisplayElement element,    int button,    boolean intersect){
    }
    @Override public void down(    UIDisplayElement element,    int button,    boolean intersect){
      if (isFocused() && !intersect)       setFocus(null);
    }
    @Override public void wheel(    UIDisplayElement element,    int wheel,    boolean intersect){
    }
  }
);
  addMouseMoveListener(new MouseMoveListener(){
    @Override public void leave(    UIDisplayElement element){
    }
    @Override public void hover(    UIDisplayElement element){
    }
    @Override public void enter(    UIDisplayElement element){
      AudioManager.play(new AssetUri(AssetType.SOUND,"engine:PlaceBlock"));
    }
    @Override public void move(    UIDisplayElement element){
    }
  }
);
  addFocusListener(new FocusListener(){
    @Override public void focusOn(    UIDisplayElement element){
      if (!isDisabled()) {
        _textCursor.setVisible(true);
      }
      setBorderSolid(2,0xFA,0xAA,0x00,1.0f);
      layout();
    }
    @Override public void focusOff(    UIDisplayElement element){
      _textCursor.setVisible(false);
      removeBorderSolid();
    }
  }
);
  _inputText=new UIText();
  _inputText.setVisible(true);
  _inputText.setColor(Color.black);
  _inputText.setPosition(new Vector2f(getPosition().x + _padding.x,getPosition().y));
  _textCursor=new UITextCursor();
  _textCursor.setVisible(true);
  _textCursor.setPosition(new Vector2f(getPosition().x + _padding.x,getPosition().y));
  _textCursor.setVisible(false);
  addDisplayElement(_inputText);
  addDisplayElement(_textCursor);
}
