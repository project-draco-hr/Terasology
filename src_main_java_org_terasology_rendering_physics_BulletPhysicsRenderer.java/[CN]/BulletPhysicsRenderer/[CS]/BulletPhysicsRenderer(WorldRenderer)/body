{
  _broadphase=new DbvtBroadphase();
  _defaultCollisionConfiguration=new TeraCollisionConfiguration();
  _dispatcher=new CollisionDispatcher(_defaultCollisionConfiguration);
  _sequentialImpulseConstraintSolver=new SequentialImpulseConstraintSolver();
  _discreteDynamicsWorld=new TeraDynamicsWorld(_dispatcher,_broadphase,_sequentialImpulseConstraintSolver,_defaultCollisionConfiguration);
  _discreteDynamicsWorld.setGravity(new Vector3f(0f,-10f,0f));
  _parent=parent;
  _blockItemFactory=new BlockItemFactory(CoreRegistry.get(EntityManager.class),CoreRegistry.get(PrefabManager.class));
  _timer=CoreRegistry.get(Timer.class);
  WorldShape worldShape=new WorldShape(parent.getWorldProvider());
  Vector3f interia=new Vector3f();
  worldShape.calculateLocalInertia(100000,interia);
  Matrix3f rot=new Matrix3f();
  rot.setIdentity();
  DefaultMotionState blockMotionState=new DefaultMotionState(new Transform(new Matrix4f(rot,new Vector3f(0,0,0),1.0f)));
  RigidBodyConstructionInfo blockConsInf=new RigidBodyConstructionInfo(0,blockMotionState,worldShape,interia);
  RigidBody rigidBody=new RigidBody(blockConsInf);
  _discreteDynamicsWorld.addRigidBody(rigidBody);
}
