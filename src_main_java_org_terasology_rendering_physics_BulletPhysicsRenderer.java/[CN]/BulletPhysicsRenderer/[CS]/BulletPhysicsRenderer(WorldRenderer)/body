{
  _broadphase=new DbvtBroadphase();
  _defaultCollisionConfiguration=new DefaultCollisionConfiguration();
  _dispatcher=new CollisionDispatcher(_defaultCollisionConfiguration);
  _sequentialImpulseConstraintSolver=new SequentialImpulseConstraintSolver();
  _discreteDynamicsWorld=new DiscreteDynamicsWorld(_dispatcher,_broadphase,_sequentialImpulseConstraintSolver,_defaultCollisionConfiguration);
  _discreteDynamicsWorld.setGravity(new Vector3f(0f,-10f,0f));
  _parent=parent;
  _blockItemFactory=new BlockItemFactory(CoreRegistry.get(EntityManager.class),CoreRegistry.get(PrefabManager.class));
  blockEntityRegistry=CoreRegistry.get(BlockEntityRegistry.class);
  _timer=CoreRegistry.get(Timer.class);
  CoreRegistry.get(EventSystem.class).registerEventReceiver(this,BlockChangedEvent.class,BlockComponent.class);
  PhysicsWorldWrapper wrapper=new PhysicsWorldWrapper(parent.getWorldProvider());
  VoxelWorldShape worldShape=new VoxelWorldShape(wrapper);
  Matrix3f rot=new Matrix3f();
  rot.setIdentity();
  DefaultMotionState blockMotionState=new DefaultMotionState(new Transform(new Matrix4f(rot,new Vector3f(0,0,0),1.0f)));
  RigidBodyConstructionInfo blockConsInf=new RigidBodyConstructionInfo(0,blockMotionState,worldShape,new Vector3f());
  RigidBody rigidBody=new RigidBody(blockConsInf);
  _discreteDynamicsWorld.addRigidBody(rigidBody);
}
