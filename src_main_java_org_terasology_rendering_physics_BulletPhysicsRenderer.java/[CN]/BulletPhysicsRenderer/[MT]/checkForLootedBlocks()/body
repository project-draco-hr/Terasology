{
  for (int i=_blocks.size() - 1; i >= 0; i--) {
    BlockRigidBody b=_blocks.get(i);
    if (b._temporary) {
      continue;
    }
    EntityRef closestCreature=EntityRef.NULL;
    Vector3f closestPosition=new Vector3f();
    float closestDist=Float.MAX_VALUE;
    for (    EntityRef creature : CoreRegistry.get(EntityManager.class).iteratorEntities(InventoryComponent.class,CharacterMovementComponent.class,LocationComponent.class)) {
      Vector3f pos=creature.getComponent(LocationComponent.class).getWorldPosition();
      float dist=b.distanceToEntity(pos);
      if (dist < closestDist) {
        closestDist=dist;
        closestCreature=creature;
        closestPosition.set(pos);
      }
    }
    if (closestDist < 8 && !b._picked) {
      b._picked=true;
    }
    if (b._picked && closestDist < 32.0f) {
      if (closestDist > 1.0) {
        Transform t=new Transform();
        b.getMotionState().getWorldTransform(t);
        Matrix4f tMatrix=new Matrix4f();
        t.getMatrix(tMatrix);
        Vector3f blockPlayer=new Vector3f();
        tMatrix.get(blockPlayer);
        blockPlayer.sub(new Vector3f(closestPosition));
        blockPlayer.normalize();
        blockPlayer.scale(-16000f);
        b.applyCentralImpulse(blockPlayer);
      }
 else {
        Block block=BlockManager.getInstance().getBlock(b.getType());
        EntityRef blockItem=_blockItemFactory.newInstance(block.getBlockFamily());
        closestCreature.send(new ReceiveItemEvent(blockItem));
        ItemComponent itemComp=blockItem.getComponent(ItemComponent.class);
        if (itemComp != null && !itemComp.container.exists()) {
          blockItem.destroy();
        }
        AudioManager.play(new AssetUri(AssetType.SOUND,"engine:Loot"));
        _blocks.remove(i);
        _discreteDynamicsWorld.removeRigidBody(b);
      }
    }
  }
}
