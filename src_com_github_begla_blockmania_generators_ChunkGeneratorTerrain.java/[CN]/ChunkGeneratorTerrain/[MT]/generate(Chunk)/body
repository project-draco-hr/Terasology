{
  float[][][] densityMap=new float[(int)Configuration.CHUNK_DIMENSIONS.x + 1][(int)Configuration.CHUNK_DIMENSIONS.y + 1][(int)Configuration.CHUNK_DIMENSIONS.z + 1];
  for (int x=0; x <= Configuration.CHUNK_DIMENSIONS.x; x+=SAMPLE_RATE_3D_HOR) {
    for (int z=0; z <= Configuration.CHUNK_DIMENSIONS.z; z+=SAMPLE_RATE_3D_HOR) {
      for (int y=0; y <= Configuration.CHUNK_DIMENSIONS.y; y+=SAMPLE_RATE_3D_VERT) {
        float density=calcMountainDensity(x + getOffsetX(c),y + getOffsetY(c),z + getOffsetZ(c));
        float height=calcHeightMap(x + getOffsetX(c),z + getOffsetZ(c));
        density=height + density;
        density/=(y + 1) * 2f;
        densityMap[x][y][z]=density;
      }
    }
  }
  triLerpDensityMap(densityMap);
  for (int x=0; x < Configuration.CHUNK_DIMENSIONS.x; x++) {
    for (int z=0; z < Configuration.CHUNK_DIMENSIONS.z; z++) {
      boolean set=false;
      for (int y=(int)Configuration.CHUNK_DIMENSIONS.y; y >= 0; y--) {
        if (y == 0) {
          c.setBlock(x,y,z,(byte)0x8);
          break;
        }
        if (y < 30 && y > 0) {
          c.setBlock(x,y,z,(byte)0x4);
        }
        float dens=densityMap[x][y][z];
        if ((dens > 0.01f && dens < 0.1f)) {
          if (!set) {
            c.setBlock(x,y,z,getBlockTailpiece(c,getBlockTypeForPosition(c,x,y,z,1.0f),y));
          }
 else {
            c.setBlock(x,y,z,getBlockTypeForPosition(c,x,y,z,1.0f));
          }
          set=true;
        }
 else         if (dens >= 0.1f) {
          c.setBlock(x,y,z,getBlockTailpiece(c,getBlockTypeForPosition(c,x,y,z,0.2f),y));
          set=true;
        }
      }
    }
  }
}
