{
  double[][][] densityMap=new double[Chunk.getChunkDimensionX() + 1][Chunk.getChunkDimensionY() + 1][Chunk.getChunkDimensionZ() + 1];
  for (int x=0; x <= Chunk.getChunkDimensionX(); x+=SAMPLE_RATE_3D_HOR) {
    for (int z=0; z <= Chunk.getChunkDimensionZ(); z+=SAMPLE_RATE_3D_HOR) {
      for (int y=0; y <= Chunk.getChunkDimensionY(); y+=SAMPLE_RATE_3D_VERT) {
        densityMap[x][y][z]=calcDensity(c.getBlockWorldPosX(x),y,c.getBlockWorldPosZ(z));
      }
    }
  }
  triLerpDensityMap(densityMap);
  for (int x=0; x < Chunk.getChunkDimensionX(); x++) {
    for (int z=0; z < Chunk.getChunkDimensionZ(); z++) {
      BIOME_TYPE type=calcBiomeTypeForGlobalPosition(c.getBlockWorldPosX(x),c.getBlockWorldPosZ(z));
      int firstBlockHeight=-1;
      for (int y=Chunk.getChunkDimensionY(); y >= 0; y--) {
        if (y == 0) {
          c.setBlock(x,y,z,BlockManager.getInstance().getBlock("Hard stone").getId());
          break;
        }
        if (y <= 32 && y > 0) {
          c.setBlock(x,y,z,BlockManager.getInstance().getBlock("Water").getId());
          if (y == 32) {
            if (type == BIOME_TYPE.SNOW)             c.setBlock(x,y,z,BlockManager.getInstance().getBlock("Ice").getId());
          }
        }
        double dens=densityMap[x][y][z];
        if ((dens >= 0 && dens < 8)) {
          if (firstBlockHeight == -1)           firstBlockHeight=y;
          if (calcCaveDensity(c.getBlockWorldPosX(x),y,c.getBlockWorldPosZ(z)) > -0.8)           GenerateOuterLayer(x,y,z,firstBlockHeight,c,type);
 else           c.setBlock(x,y,z,(byte)0);
          continue;
        }
 else         if (dens >= 8) {
          if (firstBlockHeight == -1)           firstBlockHeight=y;
          if (calcCaveDensity(c.getBlockWorldPosX(x),y,c.getBlockWorldPosZ(z)) > -0.4)           GenerateInnerLayer(x,y,z,c,type);
 else           c.setBlock(x,y,z,(byte)0);
          continue;
        }
        firstBlockHeight=-1;
      }
    }
  }
}
