{
  float[][][] densityMap=new float[(int)Configuration.CHUNK_DIMENSIONS.x + 1][(int)Configuration.CHUNK_DIMENSIONS.y + 1][(int)Configuration.CHUNK_DIMENSIONS.z + 1];
  for (int x=0; x <= Configuration.CHUNK_DIMENSIONS.x; x+=SAMPLE_RATE_3D_HOR) {
    for (int z=0; z <= Configuration.CHUNK_DIMENSIONS.z; z+=SAMPLE_RATE_3D_HOR) {
      for (int y=0; y <= Configuration.CHUNK_DIMENSIONS.y; y+=SAMPLE_RATE_3D_VERT) {
        densityMap[x][y][z]=calcDensity(x + getOffsetX(c),y + getOffsetY(c),z + getOffsetZ(c));
      }
    }
  }
  triLerpDensityMap(densityMap);
  for (int x=0; x < Configuration.CHUNK_DIMENSIONS.x; x++) {
    for (int z=0; z < Configuration.CHUNK_DIMENSIONS.z; z++) {
      int firstBlockHeight=-1;
      for (int y=(int)Configuration.CHUNK_DIMENSIONS.y; y >= 0; y--) {
        if (y == 0) {
          c.setBlock(x,y,z,(byte)0x8);
          break;
        }
        if (y < 30 && y > 0) {
          c.setBlock(x,y,z,(byte)0x4);
        }
        float dens=densityMap[x][y][z];
        if ((dens >= 0.01f && dens < 0.012f)) {
          if (firstBlockHeight == -1) {
            c.setBlock(x,y,z,getBlockTailpiece(getBlockTypeForPosition(y,1.0f),y));
            if (calcLakeIntensity(x + getOffsetX(c),z + getOffsetZ(c)) < 0.1) {
              c.setBlock(x,y,z,(byte)0x4);
            }
          }
 else {
            c.setBlock(x,y,z,getBlockTypeForPosition(y,1.0f - ((float)(firstBlockHeight - y) / 16f)));
          }
          if (firstBlockHeight == -1)           firstBlockHeight=y;
        }
 else         if (dens >= 0.012f) {
          c.setBlock(x,y,z,getBlockTailpiece(getBlockTypeForPosition(y,0.2f),y));
          if (firstBlockHeight == -1)           firstBlockHeight=y;
        }
      }
    }
  }
}
