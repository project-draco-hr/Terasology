{
  double[][][] densityMap=new double[(int)Configuration.CHUNK_DIMENSIONS.x + 1][(int)Configuration.CHUNK_DIMENSIONS.y + 1][(int)Configuration.CHUNK_DIMENSIONS.z + 1];
  for (int x=0; x <= Configuration.CHUNK_DIMENSIONS.x; x+=SAMPLE_RATE_3D_HOR) {
    for (int z=0; z <= Configuration.CHUNK_DIMENSIONS.z; z+=SAMPLE_RATE_3D_HOR) {
      for (int y=0; y <= Configuration.CHUNK_DIMENSIONS.y; y+=SAMPLE_RATE_3D_VERT) {
        densityMap[x][y][z]=calcDensity(x + getOffsetX(c),y + getOffsetY(c),z + getOffsetZ(c));
      }
    }
  }
  triLerpDensityMap(densityMap);
  for (int x=0; x < Configuration.CHUNK_DIMENSIONS.x; x++) {
    for (int z=0; z < Configuration.CHUNK_DIMENSIONS.z; z++) {
      BIOME_TYPE type=calcBiomeType(c.getBlockWorldPosX(x),c.getBlockWorldPosZ(z));
      int firstBlockHeight=-1;
      for (int y=(int)Configuration.CHUNK_DIMENSIONS.y; y >= 0; y--) {
        if (y == 0) {
          c.setBlock(x,y,z,(byte)0x8);
          break;
        }
        if (y <= 32 && y > 0) {
          c.setBlock(x,y,z,(byte)0x4);
          if (y == 32) {
            if (type == BIOME_TYPE.SNOW)             c.setBlock(x,y,z,(byte)0x11);
          }
        }
        double dens=densityMap[x][y][z];
        if ((dens >= 0.008 && dens < 0.01)) {
          if (firstBlockHeight == -1)           firstBlockHeight=y;
          GenerateOuterLayer(x,y,z,firstBlockHeight,c,type);
          continue;
        }
 else         if (dens >= 0.01) {
          if (firstBlockHeight == -1)           firstBlockHeight=y;
          if (calcCaveDensity(c.getBlockWorldPosX(x),c.getBlockWorldPosY(y),c.getBlockWorldPosZ(z)) > -0.2)           GenerateInnerLayer(x,y,z,c,type);
          continue;
        }
        firstBlockHeight=-1;
      }
    }
  }
}
