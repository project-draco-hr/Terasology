{
  for (int x=0; x < Chunk.getChunkDimensionX(); x++) {
    for (int y=0; y < Chunk.getChunkDimensionY(); y++) {
      for (int z=0; z < Chunk.getChunkDimensionZ(); z++) {
        if (!(x % SAMPLE_RATE_3D_HOR == 0 && y % SAMPLE_RATE_3D_VERT == 0 && z % SAMPLE_RATE_3D_HOR == 0)) {
          int offsetX=(x / SAMPLE_RATE_3D_HOR) * SAMPLE_RATE_3D_HOR;
          int offsetY=(y / SAMPLE_RATE_3D_VERT) * SAMPLE_RATE_3D_VERT;
          int offsetZ=(z / SAMPLE_RATE_3D_HOR) * SAMPLE_RATE_3D_HOR;
          densityMap[x][y][z]=MathHelper.triLerp(x,y,z,densityMap[offsetX][offsetY][offsetZ],densityMap[offsetX][SAMPLE_RATE_3D_VERT + offsetY][offsetZ],densityMap[offsetX][offsetY][offsetZ + SAMPLE_RATE_3D_HOR],densityMap[offsetX][offsetY + SAMPLE_RATE_3D_VERT][offsetZ + SAMPLE_RATE_3D_HOR],densityMap[SAMPLE_RATE_3D_HOR + offsetX][offsetY][offsetZ],densityMap[SAMPLE_RATE_3D_HOR + offsetX][offsetY + SAMPLE_RATE_3D_VERT][offsetZ],densityMap[SAMPLE_RATE_3D_HOR + offsetX][offsetY][offsetZ + SAMPLE_RATE_3D_HOR],densityMap[SAMPLE_RATE_3D_HOR + offsetX][offsetY + SAMPLE_RATE_3D_VERT][offsetZ + SAMPLE_RATE_3D_HOR],offsetX,SAMPLE_RATE_3D_HOR + offsetX,offsetY,SAMPLE_RATE_3D_VERT + offsetY,offsetZ,offsetZ + SAMPLE_RATE_3D_HOR);
        }
      }
    }
  }
}
