{
  int quantity=quantityParam != null ? quantityParam : 16;
  Set<ResourceUrn> matchingUris=Assets.resolveAssetUri(uri,BlockFamilyDefinition.class);
  if (matchingUris.size() == 1) {
    Optional<BlockFamilyDefinition> def=Assets.get(matchingUris.iterator().next(),BlockFamilyDefinition.class);
    if (def.isPresent()) {
      if (def.get().isFreeform()) {
        if (shapeUriParam == null) {
          return giveBlock(blockManager.getBlockFamily(new BlockUri(def.get().getUrn(),new ResourceUrn("engine:cube"))),quantity,sender);
        }
 else {
          Set<ResourceUrn> resolvedShapeUris=Assets.resolveAssetUri(shapeUriParam,BlockShape.class);
          if (resolvedShapeUris.isEmpty()) {
            throw new IllegalArgumentException("No shape found for '" + shapeUriParam + "'");
          }
 else           if (resolvedShapeUris.size() > 1) {
            StringBuilder builder=new StringBuilder();
            builder.append("Non-unique shape name, possible matches: ");
            Iterator<ResourceUrn> shapeUris=sortItems(resolvedShapeUris).iterator();
            while (shapeUris.hasNext()) {
              builder.append(shapeUris.next().toString());
              if (shapeUris.hasNext()) {
                builder.append(", ");
              }
            }
            return builder.toString();
          }
          return giveBlock(blockManager.getBlockFamily(new BlockUri(def.get().getUrn(),resolvedShapeUris.iterator().next())),quantity,sender);
        }
      }
 else {
        return giveBlock(blockManager.getBlockFamily(new BlockUri(def.get().getUrn())),quantity,sender);
      }
    }
 else {
      throw new IllegalArgumentException("No block found for '" + uri + "'");
    }
  }
 else   if (matchingUris.isEmpty()) {
    return suggestItemIfAvailable(uri);
  }
 else {
    StringBuilder builder=new StringBuilder();
    builder.append("Non-unique block name, possible matches: ");
    Joiner.on(", ").appendTo(builder,matchingUris);
    return builder.toString();
  }
}
