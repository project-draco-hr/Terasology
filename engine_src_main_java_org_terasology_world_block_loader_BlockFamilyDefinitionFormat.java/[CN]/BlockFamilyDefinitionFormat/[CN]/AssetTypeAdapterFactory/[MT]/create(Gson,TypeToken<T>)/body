{
  Class<T> rawType=(Class<T>)type.getRawType();
  if (Asset.class.isAssignableFrom(rawType)) {
    final Class<? extends Asset> assetClass=(Class<? extends Asset>)rawType;
    return (TypeAdapter)new TypeAdapter<Asset>(){
      @Override public void write(      JsonWriter out,      Asset value) throws IOException {
        if (value == null) {
          out.nullValue();
        }
 else {
          out.value(value.getUrn().toString());
        }
      }
      @Override public Asset read(      JsonReader in) throws IOException {
        if (in.peek() == JsonToken.NULL) {
          in.nextNull();
          return null;
        }
 else {
          String value=in.nextString();
          Optional<? extends Asset> asset=assetManager.getAsset(value,assetClass);
          if (asset.isPresent()) {
            return asset.get();
          }
        }
        return null;
      }
    }
;
  }
  return null;
}
