{
  if (isDisposed()) {
    return;
  }
  ShaderManager.getInstance().enableDefaultTextured();
  Texture bound=null;
  int posX=x;
  int posY=y;
  for (  char c : text.toCharArray()) {
    if (c == '\n') {
      posX=x;
      posY+=data.getLineHeight();
    }
 else {
      FontCharacter character=data.getCharacter(c);
      if (character != null && character.getPage() != null) {
        Texture page=character.getPage();
        if (!character.getPage().equals(bound)) {
          glBindTexture(GL11.GL_TEXTURE_2D,page.getId());
          bound=character.getPage();
        }
        glMatrixMode(GL11.GL_MODELVIEW);
        glPushMatrix();
        glTranslatef(posX + character.getxOffset(),posY + character.getyOffset(),0);
        glBegin(GL_TRIANGLE_FAN);
        glColor4f(color.r,color.g,color.b,color.a);
        glTexCoord2f(character.getX(),character.getY());
        glVertex3f(0,0,0);
        glTexCoord2f(character.getX() + character.getTexWidth(),character.getY());
        glVertex3f(character.getWidth(),0,0);
        glTexCoord2f(character.getX() + character.getTexWidth(),character.getY() + character.getTexHeight());
        glVertex3f(character.getWidth(),character.getHeight(),0);
        glTexCoord2f(character.getX(),character.getY() + character.getTexHeight());
        glVertex3f(0,character.getHeight(),0);
        glEnd();
        glPopMatrix();
        posX+=character.getxAdvance();
      }
    }
  }
}
