{
  _hud=new UIHeadsUpDisplay();
  _hud.setVisible(true);
  _pauseMenu=new UIPauseMenu();
  _loadingScreen=new UILoadingScreen();
  _statusScreen=new UIStatusScreen();
  _inventoryScreen=new UIInventoryScreen();
  _metrics=new UIMetrics();
  _metrics.setVisible(true);
  _guiScreens.add(_metrics);
  _guiScreens.add(_hud);
  _guiScreens.add(_pauseMenu);
  _guiScreens.add(_loadingScreen);
  _guiScreens.add(_inventoryScreen);
  _guiScreens.add(_statusScreen);
  _entityManager=new PojoEntityManager();
  _entityManager.setEventSystem(new PojoEventSystem(_entityManager));
  CoreRegistry.put(EntityManager.class,_entityManager);
  _componentSystemManager=new ComponentSystemManager();
  CoreRegistry.put(ComponentSystemManager.class,_componentSystemManager);
  _componentSystemManager.register(new BlockEntityLookup());
  _componentSystemManager.register(new CharacterMovementSystem());
  _componentSystemManager.register(new SimpleAISystem());
  _componentSystemManager.register(new ItemSystem());
  _componentSystemManager.register(new CharacterSoundSystem());
  _localPlayerSys=new LocalPlayerSystem();
  _componentSystemManager.register(_localPlayerSys);
  _componentSystemManager.register(new FirstPersonRenderer());
  _componentSystemManager.register(new HealthSystem());
  _componentSystemManager.register(new BlockEntitySystem());
  _componentSystemManager.register(new BlockParticleEmitterSystem());
  _componentSystemManager.register(new BlockDamageRenderer());
  _componentSystemManager.register(new InventorySystem());
  _componentSystemManager.register(new MeshRenderer());
  _componentSystemManager.register(new ExplosionAction());
  _componentSystemManager.register(new PlaySoundAction());
  _componentSystemManager.register(new TunnelAction());
}
