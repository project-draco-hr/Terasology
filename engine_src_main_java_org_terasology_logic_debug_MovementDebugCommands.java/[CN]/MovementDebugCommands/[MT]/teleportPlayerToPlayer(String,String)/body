{
  if (usernameFrom.equals(usernameTo)) {
    throw new IllegalArgumentException("Why teleport to yourself...");
  }
  EntityRef entityFrom=null;
  EntityRef entityTo=null;
  boolean foundEntityFrom=false;
  boolean foundEntityTo=false;
  for (  EntityRef clientEntity : entityManager.getEntitiesWith(ClientComponent.class)) {
    EntityRef clientInfo=clientEntity.getComponent(ClientComponent.class).clientInfo;
    DisplayNameComponent name=clientInfo.getComponent(DisplayNameComponent.class);
    if (!foundEntityFrom && usernameFrom.equals(name.name)) {
      entityFrom=clientEntity;
      foundEntityFrom=true;
    }
 else     if (!foundEntityTo && usernameTo.equals(name.name)) {
      entityTo=clientEntity;
      foundEntityTo=true;
    }
    if (foundEntityFrom && foundEntityTo) {
      break;
    }
  }
  if (!foundEntityFrom) {
    throw new IllegalArgumentException("No such user '" + usernameFrom + "'");
  }
  if (!foundEntityTo) {
    throw new IllegalArgumentException("No such user '" + usernameTo + "'");
  }
  LocationComponent locationComponent=entityTo.getComponent(LocationComponent.class);
  if (locationComponent != null) {
    Vector3f vLocation=locationComponent.getWorldPosition();
    ClientComponent clientComp=entityFrom.getComponent(ClientComponent.class);
    if (clientComp != null) {
      clientComp.character.send(new CharacterTeleportEvent(vLocation));
      return "Teleporting " + usernameFrom + " to "+ usernameTo+ " at "+ vLocation.x+ " "+ vLocation.y+ " "+ vLocation.z;
    }
  }
  throw new IllegalArgumentException("User " + usernameTo + " has an invalid location.");
}
