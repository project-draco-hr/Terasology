{
  Vector3f vPlayerLocation=Vector3f.zero();
  boolean bPlayerLocationWasFound=false;
  EntityRef playerEntity=null;
  for (  EntityRef clientEntity : entityManager.getEntitiesWith(ClientComponent.class)) {
    EntityRef clientInfo=clientEntity.getComponent(ClientComponent.class).clientInfo;
    DisplayNameComponent name=clientInfo.getComponent(DisplayNameComponent.class);
    if (username.equals(name.name)) {
      LocationComponent locationComponent=clientEntity.getComponent(LocationComponent.class);
      if (locationComponent != null) {
        vPlayerLocation=locationComponent.getWorldPosition();
        bPlayerLocationWasFound=true;
        playerEntity=clientEntity;
      }
      break;
    }
  }
  if (!bPlayerLocationWasFound) {
    throw new IllegalArgumentException("No such user '" + username + "'");
  }
  MovementMode playerMovementMode=MovementMode.NONE;
  ClientComponent clientInfo=playerEntity.getComponent(ClientComponent.class);
  if (clientInfo != null) {
    CharacterMovementComponent playerMovementComponent=clientInfo.character.getComponent(CharacterMovementComponent.class);
    if (playerMovementComponent != null) {
      playerMovementMode=playerMovementComponent.mode;
    }
  }
  for (  EntityRef clientEntity : entityManager.getEntitiesWith(ClientComponent.class)) {
    ClientComponent clientComp=clientEntity.getComponent(ClientComponent.class);
    if (clientComp != null) {
      clientComp.character.send(new CharacterTeleportEvent(vPlayerLocation));
      CharacterMovementComponent characterMovementComponent=clientComp.character.getComponent(CharacterMovementComponent.class);
      if (characterMovementComponent != null && playerMovementMode != MovementMode.NONE && playerMovementMode != characterMovementComponent.mode) {
        clientComp.character.send(new SetMovementModeEvent(playerMovementMode));
      }
    }
  }
  return "All possible players teleported to " + username + " and set to "+ playerMovementMode;
}
