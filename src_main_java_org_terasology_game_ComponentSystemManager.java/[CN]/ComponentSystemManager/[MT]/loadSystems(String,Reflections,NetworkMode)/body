{
  Set<Class<?>> systems=reflections.getTypesAnnotatedWith(RegisterComponentSystem.class);
  for (  Class<?> system : systems) {
    if (!ComponentSystem.class.isAssignableFrom(system)) {
      logger.error("Cannot load {}, must be a subclass of ComponentSystem",system.getSimpleName());
      continue;
    }
    RegisterComponentSystem registerInfo=system.getAnnotation(RegisterComponentSystem.class);
    if (shouldRegister(registerInfo,netMode)) {
      String id=packageName + ":" + system.getSimpleName();
      try {
        ComponentSystem newSystem=(ComponentSystem)system.newInstance();
        register(newSystem,id);
        logger.debug("Loaded system {}",id);
      }
 catch (      InstantiationException e) {
        logger.error("Failed to load system {}",id,e);
      }
catch (      IllegalAccessException e) {
        logger.error("Failed to load system {}",id,e);
      }
    }
  }
}
