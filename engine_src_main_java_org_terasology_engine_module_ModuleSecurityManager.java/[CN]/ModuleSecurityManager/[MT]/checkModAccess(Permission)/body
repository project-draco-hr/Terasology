{
  if (calculatingPermission.get() != null) {
    return true;
  }
  if (globallyAllowedPermissionsTypes.contains(perm.getClass()) || globallyAllowedPermissionsInstances.contains(perm)) {
    return true;
  }
  calculatingPermission.set(true);
  try {
    Class[] stack=getClassContext();
    for (int i=0; i < stack.length; ++i) {
      ClassLoader owningLoader=stack[i].getClassLoader();
      if (owningLoader != null && owningLoader instanceof ModuleClassLoader) {
        return checkAPIPermissionsFor(perm,i,stack);
      }
    }
  }
  finally {
    calculatingPermission.set(null);
  }
  return false;
}
