{
  setId("inventory");
  setBackgroundColor(new Color(0,0,0,200));
  setModal(true);
  setCloseBinds(new String[]{InventoryButton.ID});
  setCloseKeys(new int[]{Keyboard.KEY_ESCAPE});
  maximize();
  addVisibilityListener(new VisibilityListener(){
    @Override public void changed(    UIDisplayElement element,    boolean visibility){
      if (visibility) {
        toolbar.setEntity(CoreRegistry.get(LocalPlayer.class).getEntity(),0,8);
        inventory.setEntity(CoreRegistry.get(LocalPlayer.class).getEntity(),9);
        GUIManager.getInstance().getWindowById("hud").getElementById("leftGearWheel").setVisible(false);
        GUIManager.getInstance().getWindowById("hud").getElementById("rightGearWheel").setVisible(false);
        inventory.setPosition(new Vector2f(toolbar.getAbsolutePosition().x,Display.getHeight() + 5f));
        inventory.setAnimation(new AnimationMove(new Vector2f(Display.getWidth() / 2 - inventory.getSize().x / 2,Display.getHeight() - 192f),20f));
        inventory.getAnimation(AnimationMove.class).start();
        leftGearWheel.setAnimation(new AnimationRotate(-120f,10f));
        leftGearWheel.getAnimation(AnimationRotate.class).start();
        rightGearWheel.setAnimation(new AnimationRotate(120f,10f));
        rightGearWheel.getAnimation(AnimationRotate.class).start();
        layout();
      }
    }
  }
);
  addMouseButtonListener(new MouseButtonListener(){
    @Override public void wheel(    UIDisplayElement element,    int wheel,    boolean intersect){
    }
    @Override public void up(    UIDisplayElement element,    int button,    boolean intersect){
    }
    @Override public void down(    UIDisplayElement element,    int button,    boolean intersect){
      if (button == 0) {
        UIItemCell.reset();
      }
    }
  }
);
  toolbar=new UIItemContainer(9);
  toolbar.setVisible(true);
  toolbar.setHorizontalAlign(EHorizontalAlign.CENTER);
  toolbar.setVerticalAlign(EVerticalAlign.BOTTOM);
  toolbar.setCellMargin(new Vector2f(0f,0f));
  toolbar.setBorderImage("engine:inventory",new Vector2f(0f,84f),new Vector2f(169f,83f),new Vector4f(4f,4f,4f,4f));
  inventory=new UIItemContainer(9);
  inventory.setPosition(new Vector2f(0f,Display.getHeight() + 5f));
  inventory.setVisible(true);
  inventory.setCellMargin(new Vector2f(0f,0f));
  inventory.setBorderImage("engine:inventory",new Vector2f(0f,84f),new Vector2f(169f,61f),new Vector4f(5f,4f,3f,4f));
  leftGearWheel=new UIImage(AssetManager.loadTexture("engine:inventory"));
  leftGearWheel.setSize(new Vector2f(36f,36f));
  leftGearWheel.setTextureOrigin(new Vector2f(121.0f,168.0f));
  leftGearWheel.setTextureSize(new Vector2f(27.0f,27.0f));
  leftGearWheel.setVisible(true);
  rightGearWheel=new UIImage(AssetManager.loadTexture("engine:inventory"));
  rightGearWheel.setSize(new Vector2f(36f,36f));
  rightGearWheel.setTextureOrigin(new Vector2f(121.0f,168.0f));
  rightGearWheel.setTextureSize(new Vector2f(27.0f,27.0f));
  rightGearWheel.setVisible(true);
  addDisplayElement(rightGearWheel);
  addDisplayElement(leftGearWheel);
  addDisplayElement(inventory);
  addDisplayElement(toolbar);
}
