{
  setId("inventory");
  setBackgroundColor(0x00,0x00,0x00,0.75f);
  setModal(true);
  setCloseBinds(new String[]{InventoryButton.ID});
  setCloseKeys(new int[]{Keyboard.KEY_ESCAPE});
  maximize();
  addWindowListener(new WindowListener(){
    @Override public void open(    UIDisplayElement element){
      toolbar.setEntity(CoreRegistry.get(LocalPlayer.class).getEntity(),0,8);
      inventory.setEntity(CoreRegistry.get(LocalPlayer.class).getEntity(),9);
      layout();
    }
    @Override public void close(    UIDisplayElement element){
    }
  }
);
  addMouseButtonListener(new MouseButtonListener(){
    @Override public void wheel(    UIDisplayElement element,    int wheel,    boolean intersect){
    }
    @Override public void up(    UIDisplayElement element,    int button,    boolean intersect){
    }
    @Override public void down(    UIDisplayElement element,    int button,    boolean intersect){
      if (button == 0) {
        UIItemCell.reset();
      }
    }
  }
);
  toolbar=new UIItemContainer(9);
  toolbar.setCellMargin(new Vector2f(1,1));
  toolbar.setHorizontalAlign(EHorizontalAlign.CENTER);
  toolbar.setVerticalAlign(EVerticalAlign.CENTER);
  toolbar.setPosition(new Vector2f(0f,180f));
  toolbar.setVisible(true);
  inventory=new UIItemContainer(9);
  inventory.setCellMargin(new Vector2f(1,1));
  inventory.setHorizontalAlign(EHorizontalAlign.CENTER);
  inventory.setVerticalAlign(EVerticalAlign.CENTER);
  inventory.setPosition(new Vector2f(0f,72f));
  inventory.setVisible(true);
  background=new UIImage(AssetManager.loadTexture("engine:inventory"));
  background.setSize(new Vector2f(192.0f * 2.5f,180.0f * 2.5f));
  background.setTextureSize(new Vector2f(176.0f,167.0f));
  background.setHorizontalAlign(EHorizontalAlign.CENTER);
  background.setVerticalAlign(EVerticalAlign.CENTER);
  background.setVisible(true);
  addDisplayElement(background);
  addDisplayElement(toolbar);
  addDisplayElement(inventory);
}
