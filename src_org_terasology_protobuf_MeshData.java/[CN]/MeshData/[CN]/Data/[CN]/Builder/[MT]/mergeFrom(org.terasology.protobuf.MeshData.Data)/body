{
  if (other == org.terasology.protobuf.MeshData.Data.getDefaultInstance())   return this;
  if (other.hasName()) {
    setName(other.getName());
  }
  if (!other.vertices_.isEmpty()) {
    if (vertices_.isEmpty()) {
      vertices_=other.vertices_;
      bitField0_=(bitField0_ & ~0x00000002);
    }
 else {
      ensureVerticesIsMutable();
      vertices_.addAll(other.vertices_);
    }
    onChanged();
  }
  if (!other.texCoords0_.isEmpty()) {
    if (texCoords0_.isEmpty()) {
      texCoords0_=other.texCoords0_;
      bitField0_=(bitField0_ & ~0x00000004);
    }
 else {
      ensureTexCoords0IsMutable();
      texCoords0_.addAll(other.texCoords0_);
    }
    onChanged();
  }
  if (!other.texCoords1_.isEmpty()) {
    if (texCoords1_.isEmpty()) {
      texCoords1_=other.texCoords1_;
      bitField0_=(bitField0_ & ~0x00000008);
    }
 else {
      ensureTexCoords1IsMutable();
      texCoords1_.addAll(other.texCoords1_);
    }
    onChanged();
  }
  if (!other.normals_.isEmpty()) {
    if (normals_.isEmpty()) {
      normals_=other.normals_;
      bitField0_=(bitField0_ & ~0x00000010);
    }
 else {
      ensureNormalsIsMutable();
      normals_.addAll(other.normals_);
    }
    onChanged();
  }
  if (!other.colors_.isEmpty()) {
    if (colors_.isEmpty()) {
      colors_=other.colors_;
      bitField0_=(bitField0_ & ~0x00000020);
    }
 else {
      ensureColorsIsMutable();
      colors_.addAll(other.colors_);
    }
    onChanged();
  }
  if (!other.indices_.isEmpty()) {
    if (indices_.isEmpty()) {
      indices_=other.indices_;
      bitField0_=(bitField0_ & ~0x00000040);
    }
 else {
      ensureIndicesIsMutable();
      indices_.addAll(other.indices_);
    }
    onChanged();
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
