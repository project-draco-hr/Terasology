{
  org.terasology.protobuf.MeshData.Data result=new org.terasology.protobuf.MeshData.Data(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.name_=name_;
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    vertices_=java.util.Collections.unmodifiableList(vertices_);
    bitField0_=(bitField0_ & ~0x00000002);
  }
  result.vertices_=vertices_;
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    texCoords0_=java.util.Collections.unmodifiableList(texCoords0_);
    bitField0_=(bitField0_ & ~0x00000004);
  }
  result.texCoords0_=texCoords0_;
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    texCoords1_=java.util.Collections.unmodifiableList(texCoords1_);
    bitField0_=(bitField0_ & ~0x00000008);
  }
  result.texCoords1_=texCoords1_;
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    normals_=java.util.Collections.unmodifiableList(normals_);
    bitField0_=(bitField0_ & ~0x00000010);
  }
  result.normals_=normals_;
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    colors_=java.util.Collections.unmodifiableList(colors_);
    bitField0_=(bitField0_ & ~0x00000020);
  }
  result.colors_=colors_;
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    indices_=java.util.Collections.unmodifiableList(indices_);
    bitField0_=(bitField0_ & ~0x00000040);
  }
  result.indices_=indices_;
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
