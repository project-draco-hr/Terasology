{
  SplashScreen.getInstance().post("Loading modules ...");
  ModuleManager moduleManager=new ModuleManagerImpl();
  context.put(ModuleManager.class,moduleManager);
  SplashScreen.getInstance().post("Loading reflections ...");
  ReflectFactory reflectFactory=new ReflectionReflectFactory();
  context.put(ReflectFactory.class,reflectFactory);
  CopyStrategyLibrary copyStrategyLibrary=new CopyStrategyLibrary(reflectFactory);
  context.put(CopyStrategyLibrary.class,copyStrategyLibrary);
  context.put(TypeSerializationLibrary.class,new TypeSerializationLibrary(reflectFactory,copyStrategyLibrary));
  SplashScreen.getInstance().post("Loading assets ...");
  AssetManager assetManager=new AssetManagerImpl(moduleManager.getEnvironment());
  assetManager.setEnvironment(moduleManager.getEnvironment());
  context.put(AssetManager.class,assetManager);
  context.put(CollisionGroupManager.class,new CollisionGroupManager());
  context.put(WorldGeneratorManager.class,new WorldGeneratorManager(context));
  context.put(ComponentSystemManager.class,new ComponentSystemManager());
  context.put(ParameterAdapterManager.class,ParameterAdapterManager.createCore());
  context.put(NetworkSystem.class,new NetworkSystemImpl(time,context));
  context.put(Game.class,new Game(this,time));
  AssetType.registerAssetTypes(assetManager);
  ApplyModulesUtil.applyModules(context);
}
