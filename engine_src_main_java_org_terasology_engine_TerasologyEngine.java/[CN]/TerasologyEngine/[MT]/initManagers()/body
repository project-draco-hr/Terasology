{
  changeStatus(TerasologyEngineStatus.INITIALIZING_MODULE_MANAGER);
  ModuleManager moduleManager=new ModuleManagerImpl();
  rootContext.put(ModuleManager.class,moduleManager);
  changeStatus(TerasologyEngineStatus.INITIALIZING_LOWLEVEL_OBJECT_MANIPULATION);
  ReflectFactory reflectFactory=new ReflectionReflectFactory();
  rootContext.put(ReflectFactory.class,reflectFactory);
  CopyStrategyLibrary copyStrategyLibrary=new CopyStrategyLibrary(reflectFactory);
  rootContext.put(CopyStrategyLibrary.class,copyStrategyLibrary);
  rootContext.put(TypeSerializationLibrary.class,new TypeSerializationLibrary(reflectFactory,copyStrategyLibrary));
  changeStatus(TerasologyEngineStatus.INITIALIZING_ASSET_TYPES);
  assetTypeManager=new ModuleAwareAssetTypeManager();
  rootContext.put(ModuleAwareAssetTypeManager.class,assetTypeManager);
  rootContext.put(AssetManager.class,assetTypeManager.getAssetManager());
  rootContext.put(WorldGeneratorManager.class,new WorldGeneratorManager(rootContext));
  rootContext.put(Game.class,new Game());
}
