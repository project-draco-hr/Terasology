{
  ModuleSecurityManager moduleSecurityManager=new ModuleSecurityManager();
  ModuleManager moduleManager=CoreRegistry.putPermanently(ModuleManager.class,new ModuleManagerImpl(moduleSecurityManager));
  moduleSecurityManager.addAPIPackage("org.lwjgl.opengl");
  moduleSecurityManager.addAPIPackage("org.newdawn.slick");
  moduleSecurityManager.addAPIPackage("java.lang");
  moduleSecurityManager.addAPIPackage("java.lang.ref");
  moduleSecurityManager.addAPIPackage("java.math");
  moduleSecurityManager.addAPIPackage("java.util");
  moduleSecurityManager.addAPIPackage("java.util.concurrent");
  moduleSecurityManager.addAPIPackage("java.util.concurrent.atomic");
  moduleSecurityManager.addAPIPackage("java.util.concurrent.locks");
  moduleSecurityManager.addAPIPackage("java.util.regex");
  moduleSecurityManager.addAPIPackage("java.awt");
  moduleSecurityManager.addAPIPackage("java.awt.geom");
  moduleSecurityManager.addAPIPackage("java.awt.image");
  moduleSecurityManager.addAPIPackage("com.google.common.annotations");
  moduleSecurityManager.addAPIPackage("com.google.common.cache");
  moduleSecurityManager.addAPIPackage("com.google.common.collect");
  moduleSecurityManager.addAPIPackage("com.google.common.base");
  moduleSecurityManager.addAPIPackage("com.google.common.math");
  moduleSecurityManager.addAPIPackage("com.google.common.primitives");
  moduleSecurityManager.addAPIPackage("com.google.common.util.concurrent");
  moduleSecurityManager.addAPIPackage("gnu.trove");
  moduleSecurityManager.addAPIPackage("gnu.trove.decorator");
  moduleSecurityManager.addAPIPackage("gnu.trove.function");
  moduleSecurityManager.addAPIPackage("gnu.trove.iterator");
  moduleSecurityManager.addAPIPackage("gnu.trove.iterator.hash");
  moduleSecurityManager.addAPIPackage("gnu.trove.list");
  moduleSecurityManager.addAPIPackage("gnu.trove.list.array");
  moduleSecurityManager.addAPIPackage("gnu.trove.list.linked");
  moduleSecurityManager.addAPIPackage("gnu.trove.map");
  moduleSecurityManager.addAPIPackage("gnu.trove.map.hash");
  moduleSecurityManager.addAPIPackage("gnu.trove.map.custom_hash");
  moduleSecurityManager.addAPIPackage("gnu.trove.procedure");
  moduleSecurityManager.addAPIPackage("gnu.trove.procedure.array");
  moduleSecurityManager.addAPIPackage("gnu.trove.queue");
  moduleSecurityManager.addAPIPackage("gnu.trove.set");
  moduleSecurityManager.addAPIPackage("gnu.trove.set.hash");
  moduleSecurityManager.addAPIPackage("gnu.trove.stack");
  moduleSecurityManager.addAPIPackage("gnu.trove.stack.array");
  moduleSecurityManager.addAPIPackage("gnu.trove.strategy");
  moduleSecurityManager.addAPIPackage("javax.vecmath");
  moduleSecurityManager.addAPIPackage("com.yourkit.runtime");
  moduleSecurityManager.addAPIClass(com.esotericsoftware.reflectasm.MethodAccess.class);
  moduleSecurityManager.addAPIClass(Joiner.class);
  moduleSecurityManager.addAPIClass(IOException.class);
  moduleSecurityManager.addAPIClass(InvocationTargetException.class);
  moduleSecurityManager.addAPIClass(LoggerFactory.class);
  moduleSecurityManager.addAPIClass(Logger.class);
  for (  Class<?> apiClass : moduleManager.getActiveModuleReflections().getTypesAnnotatedWith(API.class)) {
    if (apiClass.isSynthetic()) {
      moduleSecurityManager.addAPIPackage(apiClass.getPackage().getName());
    }
 else {
      moduleSecurityManager.addAPIClass(apiClass);
    }
  }
  moduleSecurityManager.addAllowedPermission(LoggingPermission.class);
  moduleSecurityManager.addAllowedPermission(ClassLoader.class,FilePermission.class);
  moduleSecurityManager.addAllowedPermission(new AWTPermission("accessClipboard"));
  moduleSecurityManager.addAllowedPermission(EventSystemImpl.class,new RuntimePermission("createClassLoader"));
  moduleSecurityManager.addAllowedPermission(EventSystemImpl.class,ReflectPermission.class);
  moduleSecurityManager.addAllowedPermission(EventSystemImpl.class,new RuntimePermission("accessClassInPackage.sun.reflect"));
  moduleSecurityManager.addAllowedPermission(PojoEntityManager.class,new RuntimePermission("createClassLoader"));
  moduleSecurityManager.addAllowedPermission(PojoEntityManager.class,ReflectPermission.class);
  moduleSecurityManager.addAllowedPermission(AssetManager.class,FilePermission.class);
  moduleSecurityManager.addAllowedPermission(EnumMap.class,ReflectPermission.class);
  moduleSecurityManager.addAllowedPermission(WorldGeneratorPluginLibrary.class,new RuntimePermission("accessDeclaredMembers"));
  moduleSecurityManager.addAllowedPermission(ClassMetadata.class,new RuntimePermission("createClassLoader"));
  moduleSecurityManager.addAllowedPermission(ClassMetadata.class,new RuntimePermission("accessClassInPackage.sun.reflect"));
  moduleSecurityManager.addAllowedPermission(ClassMetadata.class,ReflectPermission.class);
  moduleSecurityManager.addAllowedPermission(FieldMetadata.class,new RuntimePermission("createClassLoader"));
  moduleSecurityManager.addAllowedPermission(FieldMetadata.class,new RuntimePermission("accessClassInPackage.sun.reflect"));
  moduleSecurityManager.addAllowedPermission(FieldMetadata.class,ReflectPermission.class);
  moduleSecurityManager.addAllowedPermission(InjectionHelper.class,new RuntimePermission("accessDeclaredMembers"));
  moduleSecurityManager.addAllowedPermission("java.awt",new RuntimePermission("loadLibrary.dcpr"));
  moduleSecurityManager.addAllowedPermission(GUIManagerLwjgl.class,ReflectPermission.class);
  System.setSecurityManager(moduleSecurityManager);
  return moduleManager;
}
