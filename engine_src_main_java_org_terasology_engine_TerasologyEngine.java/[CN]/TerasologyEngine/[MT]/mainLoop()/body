{
  PerformanceMonitor.startActivity("Other");
  while (!shutdownRequested) {
    assetTypeManager.reloadChangedOnDisk();
    processPendingState();
    if (currentState == null) {
      shutdown();
      break;
    }
    Iterator<Float> updateCycles=timeSubsystem.getEngineTime().tick();
    for (    EngineSubsystem subsystem : allSubsystems) {
      try (Activity ignored=PerformanceMonitor.startActivity(subsystem.getName() + " PreUpdate")){
        subsystem.preUpdate(currentState,timeSubsystem.getEngineTime().getRealDelta());
      }
     }
    while (updateCycles.hasNext()) {
      float updateDelta=updateCycles.next();
      try (Activity ignored=PerformanceMonitor.startActivity("Main Update")){
        currentState.update(updateDelta);
      }
     }
    GameThread.processWaitingProcesses();
    for (    EngineSubsystem subsystem : getSubsystems()) {
      try (Activity ignored=PerformanceMonitor.startActivity(subsystem.getName() + " Subsystem postUpdate")){
        subsystem.postUpdate(currentState,timeSubsystem.getEngineTime().getRealDelta());
      }
     }
    assetTypeManager.disposedUnusedAssets();
    PerformanceMonitor.rollCycle();
    PerformanceMonitor.startActivity("Other");
  }
  PerformanceMonitor.endActivity();
}
