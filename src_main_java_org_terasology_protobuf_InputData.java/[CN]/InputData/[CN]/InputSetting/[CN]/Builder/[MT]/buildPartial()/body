{
  org.terasology.protobuf.InputData.InputSetting result=new org.terasology.protobuf.InputData.InputSetting(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.enableMusic_=enableMusic_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.enableSound_=enableSound_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.keyForward_=keyForward_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  result.keyBackward_=keyBackward_;
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000010;
  }
  result.keyLeft_=keyLeft_;
  if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
    to_bitField0_|=0x00000020;
  }
  result.keyRight_=keyRight_;
  if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
    to_bitField0_|=0x00000040;
  }
  result.keyJump_=keyJump_;
  if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
    to_bitField0_|=0x00000080;
  }
  result.keyConsole_=keyConsole_;
  if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
    to_bitField0_|=0x00000100;
  }
  result.keyInventory_=keyInventory_;
  if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
    to_bitField0_|=0x00000200;
  }
  result.keyCrouch_=keyCrouch_;
  if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
    to_bitField0_|=0x00000400;
  }
  result.keyRun_=keyRun_;
  if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
    to_bitField0_|=0x00000800;
  }
  result.keyAttack_=keyAttack_;
  if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
    to_bitField0_|=0x00001000;
  }
  result.keyUsehelditem_=keyUsehelditem_;
  if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
    to_bitField0_|=0x00002000;
  }
  result.keyFrob_=keyFrob_;
  if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
    to_bitField0_|=0x00004000;
  }
  result.keyToolnext_=keyToolnext_;
  if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
    to_bitField0_|=0x00008000;
  }
  result.keyToolprev_=keyToolprev_;
  if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
    to_bitField0_|=0x00010000;
  }
  result.keyToolslot1_=keyToolslot1_;
  if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
    to_bitField0_|=0x00020000;
  }
  result.keyToolslot2_=keyToolslot2_;
  if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
    to_bitField0_|=0x00040000;
  }
  result.keyToolslot3_=keyToolslot3_;
  if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
    to_bitField0_|=0x00080000;
  }
  result.keyToolslot4_=keyToolslot4_;
  if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
    to_bitField0_|=0x00100000;
  }
  result.keyToolslot5_=keyToolslot5_;
  if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
    to_bitField0_|=0x00200000;
  }
  result.keyToolslot6_=keyToolslot6_;
  if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
    to_bitField0_|=0x00400000;
  }
  result.keyToolslot7_=keyToolslot7_;
  if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
    to_bitField0_|=0x00800000;
  }
  result.keyToolslot8_=keyToolslot8_;
  if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
    to_bitField0_|=0x01000000;
  }
  result.keyToolslot9_=keyToolslot9_;
  if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
    to_bitField0_|=0x02000000;
  }
  result.keyMinionmode_=keyMinionmode_;
  if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
    to_bitField0_|=0x04000000;
  }
  result.keyHidegui_=keyHidegui_;
  if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
    to_bitField0_|=0x08000000;
  }
  result.keyPauze_=keyPauze_;
  if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
    to_bitField0_|=0x10000000;
  }
  result.jumpbehaviour_=jumpbehaviour_;
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
