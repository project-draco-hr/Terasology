{
  CacheRegion region=new CacheRegion(entity,distance);
  region.setListener(listener);
  regionLock.writeLock().lock();
  try {
    regions.remove(region);
    regions.add(region);
  }
  finally {
    regionLock.writeLock().unlock();
  }
  if (listener != null) {
    for (    Vector3i pos : region.getRegion()) {
      if (isChunkReady(pos)) {
        logger.info("Notifying chunk ready {}",pos);
        listener.onChunkReady(pos,getChunk(pos));
      }
    }
  }
  reviewChunkQueue.offer(new ChunkRequest(ChunkRequest.RequestType.PRODUCE,region.getRegion().expand(new Vector3i(2,0,2))));
}
