{
  Chunk chunk=nearCache.get(chunkPos);
  if (chunk == null) {
    PerformanceMonitor.startActivity("Check chunk in cache");
    if (preparingChunks.add(chunkPos)) {
      if (nearCache.get(chunkPos) != null) {
        preparingChunks.remove(chunkPos);
      }
 else       if (storageManager.containsChunkStoreFor(chunkPos)) {
        pipeline.doTask(new AbstractChunkTask(pipeline,chunkPos,this){
          @Override public String getName(){
            return "Load Chunk";
          }
          @Override public void enact(){
            ChunkStore chunkStore=storageManager.loadChunkStore(getPosition());
            Chunk chunk=chunkStore.getChunk();
            if (nearCache.putIfAbsent(getPosition(),chunkStore.getChunk()) != null) {
              logger.warn("Chunk {} is already in the near cache",getPosition());
            }
            preparingChunks.remove(getPosition());
            if (chunk.getChunkState() == Chunk.State.COMPLETE) {
              readyChunks.offer(new ReadyChunkInfo(chunk.getPos(),createBatchBlockEventMappings(chunk),chunkStore));
            }
 else {
              pipeline.requestReview(Region3i.createFromCenterExtents(getPosition(),ChunkConstants.LOCAL_REGION_EXTENTS));
            }
          }
        }
);
      }
 else {
        pipeline.doTask(new AbstractChunkTask(pipeline,chunkPos,this){
          @Override public String getName(){
            return "Generate Chunk";
          }
          @Override public void enact(){
            Chunk chunk=generator.createChunk(getPosition());
            if (nearCache.putIfAbsent(getPosition(),chunk) != null) {
              logger.warn("Chunk {} is already in the near cache",getPosition());
            }
            preparingChunks.remove(getPosition());
            pipeline.requestReview(Region3i.createFromCenterExtents(getPosition(),ChunkConstants.LOCAL_REGION_EXTENTS));
          }
        }
);
      }
    }
    PerformanceMonitor.endActivity();
  }
}
