{
  BlockDamageModifierComponent blockDamageModifierComponent=event.getDamageType().getComponent(BlockDamageModifierComponent.class);
  float chanceOfBlockDrop=1;
  if (blockDamageModifierComponent != null) {
    chanceOfBlockDrop=1 - blockDamageModifierComponent.blockAnnihilationChance;
  }
  if (random.nextFloat() < chanceOfBlockDrop) {
    List<String> blockDrops=blockDrop.blockDrops;
    List<String> itemDrops=blockDrop.itemDrops;
    if (blockDamageModifierComponent != null && blockDrop.droppedWithTool != null) {
      for (      String toolType : blockDamageModifierComponent.materialDamageMultiplier.keySet()) {
        if (blockDrop.droppedWithTool.containsKey(toolType)) {
          BlockDropGrammarComponent.DropDefinition dropDefinition=blockDrop.droppedWithTool.get(toolType);
          blockDrops=dropDefinition.blockDrops;
          itemDrops=dropDefinition.itemDrops;
          break;
        }
      }
    }
    if (blockDrops != null) {
      for (      String drop : blockDrops) {
        String dropResult=drop;
        boolean dropping=true;
        int pipeIndex=dropResult.indexOf('|');
        if (pipeIndex > -1) {
          float chance=Float.parseFloat(dropResult.substring(0,pipeIndex));
          if (random.nextFloat() >= chance) {
            dropping=false;
          }
          dropResult=dropResult.substring(pipeIndex + 1);
        }
        if (dropping) {
          DropParser dropParser=new DropParser(random,dropResult).invoke();
          EntityRef dropItem=blockItemFactory.newInstance(blockManager.getBlockFamily(dropParser.getDrop()),dropParser.getCount());
          if (shouldDropToWorld(event,blockDamageModifierComponent,dropItem)) {
            createDrop(dropItem,locationComp.getWorldPosition(),true);
          }
        }
      }
    }
    if (itemDrops != null) {
      for (      String drop : itemDrops) {
        String dropResult=drop;
        boolean dropping=true;
        int pipeIndex=dropResult.indexOf('|');
        if (pipeIndex > -1) {
          float chance=Float.parseFloat(dropResult.substring(0,pipeIndex));
          if (random.nextFloat() >= chance) {
            dropping=false;
          }
          dropResult=dropResult.substring(pipeIndex + 1);
        }
        if (dropping) {
          DropParser dropParser=new DropParser(random,dropResult).invoke();
          EntityBuilder dropEntity=entityManager.newBuilder(dropParser.getDrop());
          if (dropParser.getCount() > 1) {
            ItemComponent itemComponent=dropEntity.getComponent(ItemComponent.class);
            itemComponent.stackCount=(byte)dropParser.getCount();
          }
          EntityRef dropItem=dropEntity.build();
          if (shouldDropToWorld(event,blockDamageModifierComponent,dropItem)) {
            createDrop(dropItem,locationComp.getWorldPosition(),false);
          }
        }
      }
    }
  }
}
