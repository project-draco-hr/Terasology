{
  sounds.addAll(assetManager.getAvailableAssets(StaticSound.class).stream().collect(Collectors.toList()));
  music.addAll(assetManager.getAvailableAssets(StreamingSound.class).stream().collect(Collectors.toList()));
  providerFactory.register("sounds",new ReadOnlyBinding<List<ResourceUrn>>(){
    @Override public List<ResourceUrn> get(){
      return sounds;
    }
  }
,new StringTextRenderer<ResourceUrn>(){
    @Override public String getString(    ResourceUrn value){
      return value.getResourceName().toString();
    }
  }
);
  providerFactory.register("music",new ReadOnlyBinding<List<ResourceUrn>>(){
    @Override public List<ResourceUrn> get(){
      return music;
    }
  }
,new StringTextRenderer<ResourceUrn>(){
    @Override public String getString(    ResourceUrn value){
      return value.getResourceName().toString();
    }
  }
);
  providerFactory.register("animations",new AnimationPoolUriBinding(),new StringTextRenderer<ComponentFieldUri>(){
    @Override public String getString(    ComponentFieldUri value){
      return value.toString();
    }
  }
);
  refreshPrefabs();
  sortLibrary();
}
