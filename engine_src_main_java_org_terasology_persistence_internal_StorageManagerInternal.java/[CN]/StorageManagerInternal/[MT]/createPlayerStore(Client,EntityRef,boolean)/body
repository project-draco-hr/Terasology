{
  String playerId=client.getId();
  PlayerStore playerStore=new PlayerStoreInternal(playerId,this,entityManager);
  if (character.exists()) {
    playerStore.setCharacter(character);
  }
  boolean hasCharacter=character.exists();
  LocationComponent location=character.getComponent(LocationComponent.class);
  Vector3f relevanceLocation;
  if (location != null) {
    relevanceLocation=location.getWorldPosition();
  }
 else {
    relevanceLocation=new Vector3f();
  }
  EntityData.PlayerStore.Builder playerEntityStore=EntityData.PlayerStore.newBuilder();
  playerEntityStore.setCharacterPosX(relevanceLocation.x);
  playerEntityStore.setCharacterPosY(relevanceLocation.y);
  playerEntityStore.setCharacterPosZ(relevanceLocation.z);
  playerEntityStore.setHasCharacter(hasCharacter);
  EntityStorer storer=new EntityStorer(entityManager);
  storer.store(character,PlayerStoreInternal.CHARACTER,deactivate);
  playerEntityStore.setStore(storer.finaliseStore());
  TLongSet externalReference=storer.getExternalReferences();
  if (externalReference.size() > 0) {
    StoreMetadata metadata=new StoreMetadata(new PlayerStoreId(playerId),externalReference);
    indexStoreMetadata(metadata);
  }
  return playerEntityStore.build();
}
