{
  if (other == org.terasology.protobuf.NetData.ServerInfoMessage.getDefaultInstance())   return this;
  if (moduleBuilder_ == null) {
    if (!other.module_.isEmpty()) {
      if (module_.isEmpty()) {
        module_=other.module_;
        bitField0_=(bitField0_ & ~0x00000001);
      }
 else {
        ensureModuleIsMutable();
        module_.addAll(other.module_);
      }
      onChanged();
    }
  }
 else {
    if (!other.module_.isEmpty()) {
      if (moduleBuilder_.isEmpty()) {
        moduleBuilder_.dispose();
        moduleBuilder_=null;
        module_=other.module_;
        bitField0_=(bitField0_ & ~0x00000001);
        moduleBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getModuleFieldBuilder() : null;
      }
 else {
        moduleBuilder_.addAllMessages(other.module_);
      }
    }
  }
  if (blockMappingBuilder_ == null) {
    if (!other.blockMapping_.isEmpty()) {
      if (blockMapping_.isEmpty()) {
        blockMapping_=other.blockMapping_;
        bitField0_=(bitField0_ & ~0x00000002);
      }
 else {
        ensureBlockMappingIsMutable();
        blockMapping_.addAll(other.blockMapping_);
      }
      onChanged();
    }
  }
 else {
    if (!other.blockMapping_.isEmpty()) {
      if (blockMappingBuilder_.isEmpty()) {
        blockMappingBuilder_.dispose();
        blockMappingBuilder_=null;
        blockMapping_=other.blockMapping_;
        bitField0_=(bitField0_ & ~0x00000002);
        blockMappingBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getBlockMappingFieldBuilder() : null;
      }
 else {
        blockMappingBuilder_.addAllMessages(other.blockMapping_);
      }
    }
  }
  if (other.hasTime()) {
    setTime(other.getTime());
  }
  if (other.hasVersion()) {
    setVersion(other.getVersion());
  }
  if (other.hasWorldName()) {
    setWorldName(other.getWorldName());
  }
  if (other.hasClientId()) {
    setClientId(other.getClientId());
  }
  this.mergeExtensionFields(other);
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
