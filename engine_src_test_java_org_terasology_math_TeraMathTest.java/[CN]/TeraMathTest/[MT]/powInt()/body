{
  for (int exp=-2; exp <= 8; exp++) {
    for (int base=-8; base <= 8; base++) {
      long javaMathResult=9001;
      boolean exception=false;
      try {
        javaMathResult=longPow(base,exp);
      }
 catch (      ArithmeticException e) {
        exception=true;
      }
      try {
        int result=TeraMath.pow(base,exp);
        assertFalse("(int)" + base + "^"+ exp+ " did not throw an exception as expected",exception);
        assertEquals(base + "^" + exp,javaMathResult,(long)result);
      }
 catch (      ArithmeticException e) {
        assertTrue("(int)" + base + "^"+ exp+ " threw an unexpected exception",exception);
      }
      try {
        long result=TeraMath.pow((long)base,exp);
        assertFalse("(long)" + base + "^"+ exp+ " did not throw an exception as expected",exception);
        assertEquals(base + "^" + exp,javaMathResult,result);
      }
 catch (      ArithmeticException e) {
        assertTrue("(long)" + base + "^"+ exp+ " threw an unexpected exception",exception);
      }
    }
  }
}
