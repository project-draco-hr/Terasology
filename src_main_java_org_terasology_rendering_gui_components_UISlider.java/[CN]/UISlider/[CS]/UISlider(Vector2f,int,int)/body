{
  setSize(size);
  _min=min;
  _max=max;
  _currentValue=Integer.MAX_VALUE;
  setBackgroundImage("engine:gui_menu");
  setBackgroundImageSource(new Vector2f(0f,0f),new Vector2f(256f,30f));
  setBackgroundImageTarget(new Vector2f(0f,0f),size);
  addMouseMoveListener(new MouseMoveListener(){
    @Override public void leave(    UIDisplayElement element){
      setBackgroundImageSource(new Vector2f(0f,0f),new Vector2f(256f,30f));
    }
    @Override public void hover(    UIDisplayElement element){
    }
    @Override public void enter(    UIDisplayElement element){
      AudioManager.play(new AssetUri(AssetType.SOUND,"engine:click"),1.0f);
      setBackgroundImageSource(new Vector2f(0f,30f),null);
    }
    @Override public void move(    UIDisplayElement element){
      if (isFocused()) {
        changeSlider(new Vector2f(Mouse.getX(),Display.getHeight() - Mouse.getY()).x);
      }
    }
  }
);
  addMouseButtonListener(new MouseButtonListener(){
    @Override public void up(    UIDisplayElement element,    int button,    boolean intersect){
      setBackgroundImageSource(new Vector2f(0f,0f),null);
    }
    @Override public void down(    UIDisplayElement element,    int button,    boolean intersect){
      if (intersect)       changeSlider(new Vector2f(Mouse.getX(),Display.getHeight() - Mouse.getY()).x);
    }
    @Override public void wheel(    UIDisplayElement element,    int wheel,    boolean intersect){
    }
  }
);
  _slider=new UIGraphicsElement(AssetManager.loadTexture("engine:gui_menu"));
  _slider.setParent(this);
  _slider.setVisible(true);
  _slider.setPosition(new Vector2f(0,0));
  _slider.setTextureOrigin(new Vector2f(0f,60f));
  _slider.setTextureSize(new Vector2f(256f,30f));
  _slider.setSize(new Vector2f(16f,getSize().y));
  _slider.addMouseButtonListener(new MouseButtonListener(){
    @Override public void up(    UIDisplayElement element,    int button,    boolean intersect){
      setFocus(null);
    }
    @Override public void down(    UIDisplayElement element,    int button,    boolean intersect){
      if (!isFocused() && intersect) {
        setFocus(UISlider.this);
      }
    }
    @Override public void wheel(    UIDisplayElement element,    int wheel,    boolean intersect){
    }
  }
);
  _label=new UIText("");
  _label.setVisible(true);
  addDisplayElement(_slider);
  addDisplayElement(_label);
  calcRange();
}
