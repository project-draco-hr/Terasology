{
  if (event.isDown() && lastFont != null) {
    String fullText=text.get();
    cursorPosition=TeraMath.clamp(cursorPosition,0,fullText.length());
switch (event.getKey().getId()) {
case Keyboard.KeyId.BACKSPACE:
{
        if (cursorPosition > 0) {
          String before=fullText.substring(0,cursorPosition - 1);
          String after=fullText.substring(cursorPosition);
          setText(before + after);
          cursorPosition--;
        }
        break;
      }
case Keyboard.KeyId.DELETE:
{
      if (cursorPosition < fullText.length()) {
        String before=fullText.substring(0,cursorPosition);
        String after=fullText.substring(cursorPosition + 1);
        setText(before + after);
      }
      break;
    }
case Keyboard.KeyId.LEFT:
{
    if (cursorPosition > 0) {
      cursorPosition--;
    }
    break;
  }
case Keyboard.KeyId.RIGHT:
{
  if (cursorPosition < fullText.length()) {
    cursorPosition++;
  }
  break;
}
case Keyboard.KeyId.HOME:
{
cursorPosition=0;
break;
}
case Keyboard.KeyId.END:
{
cursorPosition=fullText.length();
break;
}
case Keyboard.KeyId.ENTER:
{
for (TextEventListener listener : listeners) {
listener.onEnterPressed(this);
}
break;
}
default :
{
if (org.terasology.input.Keyboard.isKeyDown(Keyboard.KeyId.LEFT_CTRL) || org.terasology.input.Keyboard.isKeyDown(Keyboard.KeyId.RIGHT_CTRL)) {
if (event.getKey() == Keyboard.Key.V) {
paste();
break;
}
}
if (event.getKeyCharacter() != 0 && lastFont.hasCharacter(event.getKeyCharacter())) {
String before=fullText.substring(0,cursorPosition);
String after=fullText.substring(cursorPosition);
setText(before + event.getKeyCharacter() + after);
cursorPosition++;
}
break;
}
}
}
}
