{
  while (Mouse.next()) {
    if (Mouse.getEventButton() != -1) {
      int button=Mouse.getEventButton();
      boolean buttonDown=Mouse.getEventButtonState();
      boolean consumed=sendMouseEvent(button,buttonDown,delta);
      BindableButtonImpl bind=mouseButtonBinds.get(button);
      if (bind != null) {
        bind.updateBindState(buttonDown,delta,getInputEntities(),cameraTargetSystem.getTarget(),cameraTargetSystem.getTargetBlockPosition(),cameraTargetSystem.getHitPosition(),cameraTargetSystem.getHitNormal(),consumed,guiManager.isConsumingInput());
      }
    }
 else     if (Mouse.getEventDWheel() != 0) {
      int wheelMoved=Mouse.getEventDWheel();
      boolean consumed=sendMouseWheelEvent(wheelMoved / 120,delta);
      BindableButtonImpl bind=(wheelMoved > 0) ? mouseWheelUpBind : mouseWheelDownBind;
      if (bind != null) {
        bind.updateBindState(true,delta,getInputEntities(),cameraTargetSystem.getTarget(),cameraTargetSystem.getTargetBlockPosition(),cameraTargetSystem.getHitPosition(),cameraTargetSystem.getHitNormal(),consumed,guiManager.isConsumingInput());
        bind.updateBindState(false,delta,getInputEntities(),cameraTargetSystem.getTarget(),cameraTargetSystem.getTargetBlockPosition(),cameraTargetSystem.getHitPosition(),cameraTargetSystem.getHitNormal(),consumed,guiManager.isConsumingInput());
      }
    }
  }
  int deltaX=Mouse.getDX();
  if (deltaX != 0) {
    MouseAxisEvent event=new MouseXAxisEvent(deltaX * config.getInput().getMouseSensitivity(),delta);
    setupTarget(event);
    for (    EntityRef entity : getInputEntities()) {
      entity.send(event);
      if (event.isConsumed()) {
        break;
      }
    }
  }
  int deltaY=Mouse.getDY();
  if (deltaY != 0) {
    MouseAxisEvent event=new MouseYAxisEvent(deltaY * config.getInput().getMouseSensitivity(),delta);
    setupTarget(event);
    for (    EntityRef entity : getInputEntities()) {
      entity.send(event);
      if (event.isConsumed()) {
        break;
      }
    }
  }
}
