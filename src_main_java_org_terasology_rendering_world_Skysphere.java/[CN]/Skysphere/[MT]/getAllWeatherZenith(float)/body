{
  thetaSun=(float)java.lang.Math.acos(thetaSun);
  Vector4f cx1=new Vector4f(0.0f,0.00209f,-0.00375f,0.00165f);
  Vector4f cx2=new Vector4f(0.00394f,-0.03202f,0.06377f,-0.02903f);
  Vector4f cx3=new Vector4f(0.25886f,0.06052f,-0.21196f,0.11693f);
  Vector4f cy1=new Vector4f(0.0f,0.00317f,-0.00610f,0.00275f);
  Vector4f cy2=new Vector4f(0.00516f,-0.04153f,0.08970f,-0.04214f);
  Vector4f cy3=new Vector4f(0.26688f,0.06670f,-0.26756f,0.15346f);
  double t2=(float)java.lang.Math.pow(turbidity,2);
  double chi=(4.0f / 9.0f - turbidity / 120.0f) * (PI - 2.0f * thetaSun);
  Vector4f theta=new Vector4f(1,thetaSun,(float)java.lang.Math.pow(thetaSun,2),(float)java.lang.Math.pow(thetaSun,3));
  double Y=(4.0453f * turbidity - 4.9710f) * (float)java.lang.Math.tan(chi) - 0.2155f * turbidity + 2.4192f;
  double x=t2 * cx1.dot(theta) + turbidity * cx2.dot(theta) + cx3.dot(theta);
  double y=t2 * cy1.dot(theta) + turbidity * cy2.dot(theta) + cy3.dot(theta);
  return new Vector3d(Y,x,y);
}
