{
  Vector3i aboveBlockPos=new Vector3i(blockPos.x,blockPos.y + 1,blockPos.z);
  Block aboveType=world.getBlock(aboveBlockPos);
  if (aboveType.isLiquid()) {
    return aboveType;
  }
  TObjectIntMap<Block> adjacencyMap=new TObjectIntHashMap<Block>();
  int gaps=0;
  for (  Side side : Side.horizontalSides()) {
    Vector3i adjPos=new Vector3i(blockPos);
    adjPos.add(side.getVector3i());
    Block adjType=world.getBlock(adjPos);
    if (adjType.isLiquid()) {
      adjPos.y-=1;
      Block adjSupport=world.getBlock(adjPos);
      if (!(adjSupport.isLiquid() || adjSupport.equals(air))) {
        adjacencyMap.adjustOrPutValue(adjType,1,1);
      }
    }
 else     if (adjType.equals(air) || adjType.getBlockForm() == Block.BLOCK_FORM.BILLBOARD) {
      gaps++;
    }
  }
  if (adjacencyMap.size() > 0) {
    Block adjType=air;
    int count=0;
    for (    Block block : adjacencyMap.keySet()) {
      if (adjacencyMap.get(block) > count) {
        adjType=block;
        count=adjacencyMap.get(block);
      }
    }
    if (count > 1 || (count == 1 && gaps <= 1)) {
      return adjType;
    }
  }
  return air;
}
