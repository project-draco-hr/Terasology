{
  setId("main");
  setBackgroundImage("engine:menubackground");
  setModal(true);
  maximize();
  title=new UIImage(Assets.getTexture("engine:terasology"));
  title.setSize(new Vector2f(512f,128f));
  title.setHorizontalAlign(EHorizontalAlign.CENTER);
  title.setPosition(new Vector2f(0f,128f));
  title.setVisible(true);
  version=new UILabel("Pre Alpha");
  version.setHorizontalAlign(EHorizontalAlign.CENTER);
  version.setPosition(new Vector2f(0f,230f));
  version.setVisible(true);
  version.setTextShadow(true);
  exitButton=new UIButton(new Vector2f(256f,32f),UIButton.ButtonType.NORMAL);
  exitButton.getLabel().setText("Exit Terasology");
  exitButton.addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      CoreRegistry.get(GameEngine.class).shutdown();
    }
  }
);
  exitButton.setHorizontalAlign(EHorizontalAlign.CENTER);
  exitButton.setPosition(new Vector2f(0f,300f + 6 * 40f));
  exitButton.setVisible(true);
  configButton=new UIButton(new Vector2f(256f,32f),UIButton.ButtonType.NORMAL);
  configButton.getLabel().setText("Settings");
  configButton.addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      getGUIManager().openWindow("config");
    }
  }
);
  configButton.setHorizontalAlign(EHorizontalAlign.CENTER);
  configButton.setPosition(new Vector2f(0f,300f + 4 * 40f));
  configButton.setVisible(true);
  singlePlayerButton=new UIButton(new Vector2f(256f,32f),UIButton.ButtonType.NORMAL);
  singlePlayerButton.getLabel().setText("Single player");
  singlePlayerButton.addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      getGUIManager().openWindow("selectworld");
      ((UIMenuSelectWorld)getGUIManager().getWindowById("selectworld")).setCreateServerGame(false);
    }
  }
);
  singlePlayerButton.setHorizontalAlign(EHorizontalAlign.CENTER);
  singlePlayerButton.setPosition(new Vector2f(0f,300f + 40f));
  singlePlayerButton.setVisible(true);
  multiplayerButton=new UIButton(new Vector2f(256f,32f),UIButton.ButtonType.NORMAL);
  multiplayerButton.getLabel().setText("Host Game");
  multiplayerButton.addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      getGUIManager().openWindow("selectworld");
      ((UIMenuSelectWorld)getGUIManager().getWindowById("selectworld")).setCreateServerGame(true);
    }
  }
);
  multiplayerButton.setHorizontalAlign(EHorizontalAlign.CENTER);
  multiplayerButton.setPosition(new Vector2f(0f,300f + 2 * 40f));
  multiplayerButton.setVisible(true);
  joinButton=new UIButton(new Vector2f(256f,32f),UIButton.ButtonType.NORMAL);
  joinButton.getLabel().setText("Join Game");
  joinButton.setHorizontalAlign(EHorizontalAlign.CENTER);
  joinButton.setPosition(new Vector2f(0f,300f + 3 * 40f));
  joinButton.setVisible(true);
  joinButton.addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      getGUIManager().openWindow("joinserver");
    }
  }
);
  addDisplayElement(title);
  addDisplayElement(version);
  addDisplayElement(configButton);
  addDisplayElement(exitButton);
  addDisplayElement(singlePlayerButton);
  addDisplayElement(multiplayerButton);
  addDisplayElement(joinButton);
}
