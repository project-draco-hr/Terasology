{
  Interpreter interpreter=new Interpreter(null);
  ParallelNode parallel=new ParallelNode(ParallelNode.Policy.RequireAll,ParallelNode.Policy.RequireOne);
  Node one=create(new Mocker(){
    @Override public void mock(    Task spy){
      when(spy.update(anyInt())).thenReturn(Status.RUNNING,Status.FAILURE);
    }
  }
);
  Node two=create(new Mocker(){
    @Override public void mock(    Task spy){
      when(spy.update(anyInt())).thenReturn(Status.RUNNING,Status.RUNNING);
    }
  }
);
  parallel.children().add(one);
  parallel.children().add(two);
  ParallelNode.ParallelTask behavior=parallel.create();
  interpreter.start(behavior);
  interpreter.tick(0);
  Assert.assertEquals(Status.RUNNING,behavior.getStatus());
  interpreter.tick(0);
  Assert.assertEquals(Status.FAILURE,behavior.getStatus());
}
