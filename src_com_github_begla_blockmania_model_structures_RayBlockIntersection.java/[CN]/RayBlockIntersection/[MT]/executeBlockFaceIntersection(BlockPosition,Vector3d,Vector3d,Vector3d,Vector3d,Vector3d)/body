{
  Vector3d a=new Vector3d();
  a.sub(v1,v0);
  Vector3d b=new Vector3d();
  b.sub(v2,v0);
  Vector3d norm=new Vector3d();
  norm.cross(a,b);
  double d=-(norm.x * v0.x + norm.y * v0.y + norm.z * v0.z);
  double t=-(norm.x * origin.x + norm.y * origin.y + norm.z * origin.z + d) / ray.dot(norm);
  if (t < 0)   return null;
  Vector3d intersectPoint=new Vector3d(ray.x * t,ray.y * t,ray.z * t);
  intersectPoint.add(intersectPoint,origin);
  if (intersectPoint.x >= v0.x && intersectPoint.x <= Math.max(v1.x,v2.x) && intersectPoint.y >= v0.y && intersectPoint.y <= Math.max(v1.y,v2.y) && intersectPoint.z >= v0.z && intersectPoint.z <= Math.max(v1.z,v2.z)) {
    return new Intersection(blockPos,norm,d,t,origin,ray,intersectPoint);
  }
  return null;
}
