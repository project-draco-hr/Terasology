{
  double height=calcBaseTerrain(x,z);
  double ocean=calcOceanTerrain(x,z);
  double river=calcRiverTerrain(x,z);
  float temp=biomeProvider.getTemperatureAt(x,z);
  float humidity=biomeProvider.getHumidityAt(x,z) * temp;
  Vector2f distanceToMountainBiome=new Vector2f(temp - 0.25f,humidity - 0.35f);
  double mIntens=TeraMath.clamp(1.0 - distanceToMountainBiome.length() * 3.0);
  double densityMountains=calcMountainDensity(x,y,z) * mIntens;
  double densityHills=calcHillDensity(x,y,z) * (1.0 - mIntens);
  double plateauArea;
  double flatten, f1, f2;
  double ratio=(counter / maxInt);
  if (ratio == 0 || ratio == -1)   ratio+=0.000000001;
 else   if (ratio == 1)   ratio-=0.000000001;
  plateauArea=Chunk.SIZE_Y - Chunk.SIZE_Y / (10 * ((TeraMath.fastAbs(ratio)) * 8));
  f1=(1.0 / (plateauArea * plateauArea)) * (y - plateauArea) * (y - plateauArea);
  plateauArea=(int)(Chunk.SIZE_Y * 0.10);
  f2=TeraMath.clamp(((Chunk.SIZE_Y - 16) - y) / plateauArea);
  if (ratio < 0)   flatten=f1 * (1 + ratio) + f2 * -ratio;
 else   flatten=f1 * (1 - ratio) + f2 * ratio;
  counter++;
  return -y + (((32.0 + height * 32.0) * TeraMath.clamp(river + 0.25) * TeraMath.clamp(ocean + 0.25)) + densityMountains * 1024.0 + densityHills * 128.0) * flatten;
}
