{
  nameText=find("name",UIText.class);
  ownerText=find("owner",UIText.class);
  addressText=find("address",UIText.class);
  portText=find("port",UIText.class);
  okButton=find("ok",UIButton.class);
  cancelButton=find("cancel",UIButton.class);
  okButton.subscribe(new ActivateEventListener(){
    @Override public void onActivated(    UIWidget button){
      String name=nameText.getText();
      String owner=ownerText.getText();
      String address=addressText.getText();
      Integer portBoxed=Ints.tryParse(portText.getText());
      int port=(portBoxed != null) ? portBoxed.intValue() : TerasologyConstants.DEFAULT_PORT;
      if (serverInfo == null) {
        serverInfo=new ServerInfo(name,address,port);
        serverInfo.setOwner(owner);
      }
 else {
        serverInfo.setName(name);
        serverInfo.setAddress(address);
        serverInfo.setPort(port);
        serverInfo.setOwner(owner);
      }
      if (successFunc != null) {
        successFunc.accept(serverInfo);
      }
      getManager().popScreen();
    }
  }
);
  okButton.bindEnabled(new ReadOnlyBinding<Boolean>(){
    @Override public Boolean get(){
      return !nameText.getText().isEmpty() && !addressText.getText().isEmpty() && Ints.tryParse(portText.getText()) != null;
    }
  }
);
  cancelButton.subscribe(new ActivateEventListener(){
    @Override public void onActivated(    UIWidget button){
      getManager().popScreen();
    }
  }
);
  nameText.subscribe(new ActivateEventListener(){
    @Override public void onActivated(    UIWidget widget){
      if (addressText.getText().isEmpty()) {
        addressText.setText(nameText.getText());
        addressText.setCursorPosition(addressText.getText().length());
      }
      getManager().setFocus(addressText);
    }
  }
);
  addressText.subscribe(new ActivateEventListener(){
    @Override public void onActivated(    UIWidget widget){
      getManager().setFocus(portText);
    }
  }
);
}
