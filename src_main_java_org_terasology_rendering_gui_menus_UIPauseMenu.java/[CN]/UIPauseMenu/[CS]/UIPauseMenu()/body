{
  _title=new UIGraphicsElement(AssetManager.loadTexture("engine:terasology"));
  _title.setVisible(true);
  _title.setSize(new Vector2f(512f,128f));
  _version=new UIText("Pre Alpha");
  _version.setVisible(true);
  _exitButton=new UIButton(new Vector2f(256f,32f));
  _exitButton.getLabel().setText("Exit Terasology");
  _exitButton.setVisible(true);
  _exitButton.addClickListener(new IClickListener(){
    public void clicked(    UIDisplayElement element){
      CoreRegistry.get(GameEngine.class).shutdown();
    }
  }
);
  _respawnButton=new UIButton(new Vector2f(256f,32f));
  _respawnButton.getLabel().setText("Respawn");
  _respawnButton.setVisible(true);
  _respawnButton.addClickListener(new IClickListener(){
    public void clicked(    UIDisplayElement element){
      setVisible(false);
      EntityRef playerEntity=CoreRegistry.get(LocalPlayer.class).getEntity();
      LocalPlayerComponent localPlayerComponent=playerEntity.getComponent(LocalPlayerComponent.class);
      if (localPlayerComponent.isDead) {
        localPlayerComponent.isDead=false;
        playerEntity.saveComponent(localPlayerComponent);
      }
      LocationComponent locationComponent=playerEntity.getComponent(LocationComponent.class);
      PlayerComponent playerComponent=playerEntity.getComponent(PlayerComponent.class);
      if (playerComponent != null && locationComponent != null) {
        locationComponent.setWorldPosition(playerComponent.spawnPosition);
        playerEntity.saveComponent(locationComponent);
      }
      HealthComponent healthComponent=playerEntity.getComponent(HealthComponent.class);
      if (healthComponent != null) {
        healthComponent.currentHealth=healthComponent.maxHealth;
        playerEntity.saveComponent(healthComponent);
      }
      CharacterMovementComponent characterMovementComponent=playerEntity.getComponent(CharacterMovementComponent.class);
      if (characterMovementComponent != null) {
        characterMovementComponent.setVelocity(new Vector3f(0,0,0));
        playerEntity.saveComponent(characterMovementComponent);
      }
    }
  }
);
  _mainMenuButton=new UIButton(new Vector2f(256f,32f));
  _mainMenuButton.getLabel().setText("Return to Main Menu");
  _mainMenuButton.setVisible(true);
  _mainMenuButton.addClickListener(new IClickListener(){
    public void clicked(    UIDisplayElement element){
      setVisible(false);
      CoreRegistry.get(GameEngine.class).changeState(new StateMainMenu());
    }
  }
);
  _overlay=new UITransparentOverlay();
  _overlay.setVisible(true);
  _backToGameButton=new UIButton(new Vector2f(256f,32f));
  _backToGameButton.getLabel().setText("Back to game");
  _backToGameButton.setVisible(true);
  _backToGameButton.addClickListener(new IClickListener(){
    public void clicked(    UIDisplayElement element){
      setVisible(false);
    }
  }
);
  addDisplayElement(_overlay);
  addDisplayElement(_title);
  addDisplayElement(_version);
  addDisplayElement(_exitButton);
  addDisplayElement(_respawnButton);
  addDisplayElement(_mainMenuButton);
  addDisplayElement(_backToGameButton);
  setModal(true);
  layout();
}
