{
  int blockPosX=getBlockWorldPosX(x);
  int blockPosZ=getBlockWorldPosZ(z);
  getParent().setLight(blockPosX,y,blockPosZ,(byte)0x0,type);
  for (int i=0; i < 6; i++) {
    byte neighborValue=getParent().getLight(blockPosX + (int)LIGHT_DIRECTIONS[i].x,y + (int)LIGHT_DIRECTIONS[i].y,blockPosZ + (int)LIGHT_DIRECTIONS[i].z,type);
    byte neighborType=getParent().getBlock(blockPosX + (int)LIGHT_DIRECTIONS[i].x,y + (int)LIGHT_DIRECTIONS[i].y,blockPosZ + (int)LIGHT_DIRECTIONS[i].z);
    if (neighborValue < lightValue && neighborValue > 0 && BlockManager.getInstance().getBlock(neighborType).isTranslucent()) {
      getParent().unspreadLight(blockPosX + (int)LIGHT_DIRECTIONS[i].x,y + (int)LIGHT_DIRECTIONS[i].y,blockPosZ + (int)LIGHT_DIRECTIONS[i].z,(byte)(lightValue - 1),depth + 1,type,brightSpots);
    }
 else     if (neighborValue >= lightValue) {
      brightSpots.add(new Vector3f(blockPosX + (int)LIGHT_DIRECTIONS[i].x,y + (int)LIGHT_DIRECTIONS[i].y,blockPosZ + (int)LIGHT_DIRECTIONS[i].z));
    }
  }
}
