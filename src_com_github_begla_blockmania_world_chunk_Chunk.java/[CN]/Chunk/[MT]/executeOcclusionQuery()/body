{
  GL11.glColorMask(false,false,false,false);
  GL11.glDepthMask(false);
  if (_activeMeshes != null) {
    for (int j=0; j < VERTICAL_SEGMENTS; j++) {
      if (!isSubMeshEmpty(j)) {
        if (_queries[j] == 0) {
          _queries[j]=GL15.glGenQueries();
          GL15.glBeginQuery(GL15.GL_SAMPLES_PASSED,_queries[j]);
          getSubMeshAABB(j).renderSolid();
          GL15.glEndQuery(GL15.GL_SAMPLES_PASSED);
        }
      }
    }
  }
  GL11.glColorMask(true,true,true,true);
  GL11.glDepthMask(true);
}
