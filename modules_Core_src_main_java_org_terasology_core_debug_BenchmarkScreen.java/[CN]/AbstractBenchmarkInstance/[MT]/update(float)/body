{
  if (runningBenchmark == null) {
    return;
  }
  long startNs=System.nanoTime();
  runningBenchmark.runStep();
  long endNs=System.nanoTime();
  long durationInNs=endNs - startNs;
  double durationInMs=durationInNs / 1000000.0;
  iterationsDone+=1;
  sortedDurations.add(durationInMs);
  Collections.sort(sortedDurations);
  double median=sortedDurations.get(sortedDurations.size() / 2);
  sum+=durationInMs;
  min=Math.min(min,durationInMs);
  max=Math.max(max,durationInMs);
  double avgMs=sum / iterationsDone;
  StringBuilder sb=new StringBuilder();
  sb.append("benchmark: ");
  sb.append(selectedBenchmarkType.getTitle());
  sb.append("\n");
  sb.append("iteration:  ");
  sb.append(Long.toString(iterationsDone));
  sb.append(" / ");
  sb.append(selectedBenchmarkType.getMaxIterations());
  sb.append("\n");
  sb.append("last duration:  ");
  sb.append(String.format("%.1f",durationInMs));
  sb.append(" ms\n");
  sb.append("min duration:  ");
  sb.append(String.format("%.1f",min));
  sb.append(" ms\n");
  sb.append("median duration:  ");
  sb.append(String.format("%.1f",median));
  sb.append(" ms\n");
  sb.append("avg duration:  ");
  sb.append(String.format("%.1f",avgMs));
  sb.append(" ms\n");
  sb.append("max duration:  ");
  sb.append(String.format("%.1f",max));
  sb.append(" ms\n");
  if (textArea != null) {
    textArea.setText(sb.toString());
  }
  if (iterationsDone >= selectedBenchmarkType.getMaxIterations()) {
    handleBenchmarkEnd();
  }
}
