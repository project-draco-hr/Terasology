{
  glMatrixMode(GL_PROJECTION);
  glPushMatrix();
  glLoadIdentity();
  glOrtho(0,Display.getDisplayMode().getWidth(),Display.getDisplayMode().getHeight(),0,-1,1);
  glMatrixMode(GL_MODELVIEW);
  glPushMatrix();
  glLoadIdentity();
  glDisable(GL_DEPTH_TEST);
  glDisable(GL_FOG);
  glEnable(GL_BLEND);
  glEnable(GL_TEXTURE_2D);
  if (Configuration.getSettingBoolean("SHOW_DEBUG_INFORMATION")) {
    _font1.drawString(4,4,String.format("%s (fps: %.2f, mem usage: %.2f MB)",Configuration.GAME_TITLE,_meanFps,_memoryUsage,Color.white));
    _font1.drawString(4,22,String.format("%s",_player,Color.white));
    _font1.drawString(4,38,String.format("%s",_world,Color.white));
    _font1.drawString(4,54,String.format("total vus: %s",Chunk.getVertexArrayUpdateCount(),Color.white));
  }
  if (_pauseGame) {
    _font1.drawString(4,Display.getDisplayMode().getHeight() - 16 - 4,String.format("%s_",_consoleInput),Color.red);
  }
  glDisable(GL_TEXTURE_2D);
  glColor3f(1f,1f,1f);
  glLineWidth(2f);
  if (Configuration.getSettingBoolean("SHOW_CROSSHAIR")) {
    glBegin(GL_LINES);
    glVertex2d(Display.getDisplayMode().getWidth() / 2f - 8f,Display.getDisplayMode().getHeight() / 2f);
    glVertex2d(Display.getDisplayMode().getWidth() / 2f + 8f,Display.getDisplayMode().getHeight() / 2f);
    glVertex2d(Display.getDisplayMode().getWidth() / 2f,Display.getDisplayMode().getHeight() / 2f - 8f);
    glVertex2d(Display.getDisplayMode().getWidth() / 2f,Display.getDisplayMode().getHeight() / 2f + 8f);
    glEnd();
  }
  glDisable(GL_BLEND);
  glEnable(GL_FOG);
  glEnable(GL_DEPTH_TEST);
  glMatrixMode(GL_PROJECTION);
  glPopMatrix();
  glMatrixMode(GL_MODELVIEW);
  glPopMatrix();
  glLoadIdentity();
}
