{
  boolean success=false;
  ArrayList<String> parsingResult=new ArrayList<String>();
  String temp="";
  for (int i=0; i < _consoleString.length(); i++) {
    char c=_consoleString.charAt(i);
    if (c != ' ') {
      temp=temp.concat(String.valueOf(c));
    }
    if (c == ' ' || i == _consoleString.length() - 1) {
      parsingResult.add(temp);
      temp="";
    }
  }
  try {
    if (parsingResult.get(0).equals("place")) {
      if (parsingResult.get(1).equals("tree")) {
        _player.plantTree(Integer.parseInt(parsingResult.get(2)));
        success=true;
      }
    }
 else     if (parsingResult.get(0).equals("set")) {
      if (parsingResult.get(1).equals("time")) {
        _world.setDaytime(Short.parseShort(parsingResult.get(2)));
        success=true;
      }
 else       if (parsingResult.get(1).equals("god_mode")) {
        Configuration.GOD_MODE=Boolean.parseBoolean(parsingResult.get(2));
        success=true;
      }
 else       if (parsingResult.get(1).equals("demo_flight")) {
        Configuration.DEMO_FLIGHT=Boolean.parseBoolean(parsingResult.get(2));
        success=true;
      }
 else       if (parsingResult.get(1).equals("hud")) {
        Configuration.SHOW_HUD=Boolean.parseBoolean(parsingResult.get(2));
        success=true;
      }
 else       if (parsingResult.get(1).equals("placing_box")) {
        Configuration.SHOW_PLACING_BOX=Boolean.parseBoolean(parsingResult.get(2));
        success=true;
      }
 else       if (parsingResult.get(1).equals("chunk_outlines")) {
        Configuration.SHOW_CHUNK_OUTLINES=Boolean.parseBoolean(parsingResult.get(2));
        success=true;
      }
 else       if (parsingResult.get(1).equals("g_force")) {
        Configuration.G_FORCE=Float.parseFloat(parsingResult.get(2));
        success=true;
      }
 else       if (parsingResult.get(1).equals("jump_intens")) {
        Configuration.JUMP_INTENSITY=Float.parseFloat(parsingResult.get(2));
        success=true;
      }
 else       if (parsingResult.get(1).equals("walking_speed")) {
        Configuration.WALKING_SPEED=Float.parseFloat(parsingResult.get(2));
        success=true;
      }
    }
 else     if (parsingResult.get(0).equals("reset_player")) {
      _player.resetPlayer();
    }
  }
 catch (  Exception e) {
  }
  if (success) {
    _logger.log(Level.INFO,"Console command \"{0}\" accepted.",_consoleString);
  }
 else {
    _logger.log(Level.WARNING,"Console command \"{0}\" is invalid.",_consoleString);
  }
  toggleDebugConsole();
}
