{
  PerformanceMonitor.startActivity("GenerateBlock");
  byte blockId=_chunk.getBlock(x,y,z);
  Block block=BlockManager.getInstance().getBlock(blockId);
  ChunkMesh.RENDER_TYPE renderType=ChunkMesh.RENDER_TYPE.BILLBOARD_AND_TRANSLUCENT;
  if (!block.isTranslucent())   renderType=ChunkMesh.RENDER_TYPE.OPAQUE;
  if (block.getTitle().equals("Water") || block.getTitle().equals("Ice"))   renderType=ChunkMesh.RENDER_TYPE.WATER_AND_ICE;
  Block.BLOCK_FORM blockForm=block.getBlockForm();
  if (block.getCenterMesh() != null) {
    Vector4f colorOffset=block.calcColorOffsetFor(Block.SIDE.TOP,temp,hum);
    generateVerticesForBlockSide(mesh,x,y,z,colorOffset,block.getCenterMesh(),renderType,blockForm);
  }
  boolean drawFront, drawBack, drawLeft, drawRight, drawTop, drawBottom;
  byte blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x),y + 1,_chunk.getBlockWorldPosZ(z));
  drawTop=isSideVisibleForBlockTypes(blockToCheckId,blockId,Block.SIDE.TOP);
  blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x),y,_chunk.getBlockWorldPosZ(z - 1));
  drawFront=isSideVisibleForBlockTypes(blockToCheckId,blockId,Block.SIDE.FRONT);
  blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x),y,_chunk.getBlockWorldPosZ(z + 1));
  drawBack=isSideVisibleForBlockTypes(blockToCheckId,blockId,Block.SIDE.BACK);
  blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x - 1),y,_chunk.getBlockWorldPosZ(z));
  drawLeft=isSideVisibleForBlockTypes(blockToCheckId,blockId,Block.SIDE.LEFT);
  blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x + 1),y,_chunk.getBlockWorldPosZ(z));
  drawRight=isSideVisibleForBlockTypes(blockToCheckId,blockId,Block.SIDE.RIGHT);
  if (y > 0) {
    blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x),y - 1,_chunk.getBlockWorldPosZ(z));
    drawBottom=isSideVisibleForBlockTypes(blockToCheckId,blockId,Block.SIDE.BOTTOM);
  }
 else {
    drawBottom=false;
  }
  if (blockForm == Block.BLOCK_FORM.LOWERED_BLOCK) {
    blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x),y - 1,_chunk.getBlockWorldPosZ(z - 1));
    drawFront=isSideVisibleForBlockTypes(blockToCheckId,blockId,Block.SIDE.FRONT) || drawFront;
    blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x),y - 1,_chunk.getBlockWorldPosZ(z + 1));
    drawBack=isSideVisibleForBlockTypes(blockToCheckId,blockId,Block.SIDE.BACK) || drawBack;
    blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x - 1),y - 1,_chunk.getBlockWorldPosZ(z));
    drawLeft=isSideVisibleForBlockTypes(blockToCheckId,blockId,Block.SIDE.LEFT) || drawLeft;
    blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x + 1),y - 1,_chunk.getBlockWorldPosZ(z));
    drawRight=isSideVisibleForBlockTypes(blockToCheckId,blockId,Block.SIDE.RIGHT) || drawRight;
    blockToCheckId=_chunk.getParent().getBlock(_chunk.getBlockWorldPosX(x),y + 1,_chunk.getBlockWorldPosZ(z));
    drawTop=(BlockManager.getInstance().getBlock(blockToCheckId).getBlockForm() != Block.BLOCK_FORM.LOWERED_BLOCK) || drawTop;
  }
  if (drawTop) {
    Vector4f colorOffset=block.calcColorOffsetFor(Block.SIDE.FRONT,temp,hum);
    generateVerticesForBlockSide(mesh,x,y,z,colorOffset,block.getSideMesh(Block.SIDE.TOP),renderType,blockForm);
  }
  if (drawFront) {
    Vector4f colorOffset=block.calcColorOffsetFor(Block.SIDE.FRONT,temp,hum);
    generateVerticesForBlockSide(mesh,x,y,z,colorOffset,block.getSideMesh(Block.SIDE.FRONT),renderType,blockForm);
  }
  if (drawBack) {
    Vector4f colorOffset=block.calcColorOffsetFor(Block.SIDE.FRONT,temp,hum);
    generateVerticesForBlockSide(mesh,x,y,z,colorOffset,block.getSideMesh(Block.SIDE.BACK),renderType,blockForm);
  }
  if (drawLeft) {
    Vector4f colorOffset=block.calcColorOffsetFor(Block.SIDE.FRONT,temp,hum);
    generateVerticesForBlockSide(mesh,x,y,z,colorOffset,block.getSideMesh(Block.SIDE.LEFT),renderType,blockForm);
  }
  if (drawRight) {
    Vector4f colorOffset=block.calcColorOffsetFor(Block.SIDE.FRONT,temp,hum);
    generateVerticesForBlockSide(mesh,x,y,z,colorOffset,block.getSideMesh(Block.SIDE.RIGHT),renderType,blockForm);
  }
  if (drawBottom) {
    Vector4f colorOffset=block.calcColorOffsetFor(Block.SIDE.FRONT,temp,hum);
    generateVerticesForBlockSide(mesh,x,y,z,colorOffset,block.getSideMesh(Block.SIDE.BOTTOM),renderType,blockForm);
  }
  PerformanceMonitor.endActivity();
}
