{
  List<PersistedData> result=Lists.newArrayList();
  if (data.getValueCount() > 0) {
    for (    EntityData.Value val : data.getValueList()) {
      result.add(new ProtobufPersistedData(val));
    }
  }
 else   if (data.getFloatCount() > 0) {
    for (int i=0; i < data.getFloatCount(); ++i) {
      result.add(new PersistedFloat(data.getFloat(i)));
    }
  }
 else   if (data.getIntegerCount() > 0) {
    for (int i=0; i < data.getIntegerCount(); ++i) {
      result.add(new PersistedInteger(data.getInteger(i)));
    }
  }
 else   if (data.getDoubleCount() > 0) {
    for (int i=0; i < data.getDoubleCount(); ++i) {
      result.add(new PersistedDouble(data.getDouble(i)));
    }
  }
 else   if (data.getBooleanCount() > 0) {
    for (int i=0; i < data.getBooleanCount(); ++i) {
      result.add(new PersistedBoolean(data.getBoolean(i)));
    }
  }
 else   if (data.getLongCount() > 0) {
    for (int i=0; i < data.getLongCount(); ++i) {
      result.add(new PersistedLong(data.getLong(i)));
    }
  }
 else   if (data.getStringCount() > 0) {
    for (int i=0; i < data.getStringCount(); ++i) {
      result.add(new PersistedString(data.getString(i)));
    }
  }
 else   if (data.getNameValueCount() > 0) {
    result.add(new ProtobufPersistedData(data));
  }
 else   if (data.hasBytes()) {
    throw new IllegalStateException("Data is not an array");
  }
  return result;
}
