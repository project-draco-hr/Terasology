{
  float n0;
  float n1;
  float n2;
  float s=(xin + yin) * F2;
  int i=TeraMath.floorToInt(xin + s);
  int j=TeraMath.floorToInt(yin + s);
  float t=(i + j) * G2;
  float xo0=i - t;
  float yo0=j - t;
  float x0=xin - xo0;
  float y0=yin - yo0;
  int i1;
  int j1;
  if (x0 > y0) {
    i1=1;
    j1=0;
  }
 else {
    i1=0;
    j1=1;
  }
  float x1=x0 - i1 + G2;
  float y1=y0 - j1 + G2;
  float x2=x0 - 1.0f + 2.0f * G2;
  float y2=y0 - 1.0f + 2.0f * G2;
  int ii=i & 255;
  int jj=j & 255;
  int gi0=permMod12[ii + perm[jj]];
  int gi1=permMod12[ii + i1 + perm[jj + j1]];
  int gi2=permMod12[ii + 1 + perm[jj + 1]];
  float t0=0.5f - x0 * x0 - y0 * y0;
  if (t0 < 0) {
    n0=0.0f;
  }
 else {
    t0*=t0;
    n0=t0 * t0 * dot(grad3[gi0],x0,y0);
  }
  float t1=0.5f - x1 * x1 - y1 * y1;
  if (t1 < 0) {
    n1=0.0f;
  }
 else {
    t1*=t1;
    n1=t1 * t1 * dot(grad3[gi1],x1,y1);
  }
  float t2=0.5f - x2 * x2 - y2 * y2;
  if (t2 < 0) {
    n2=0.0f;
  }
 else {
    t2*=t2;
    n2=t2 * t2 * dot(grad3[gi2],x2,y2);
  }
  return 70.0f * (n0 + n1 + n2);
}
