{
  Map<Byte,BlockDefinition>[] basicBlocks=new Map[7];
  Map<Byte,Block> blocksForConnections=Maps.newHashMap();
  basicBlocks[0]=Maps.newHashMap();
  basicBlocks[0].put((byte)0,getBlockDefinition(NO_CONNECTIONS,blockBuilder,blockDefJson));
  basicBlocks[1]=Maps.newHashMap();
  basicBlocks[1].put(DirectionsUtil.getDirections(Direction.FORWARD),getBlockDefinition(ONE_CONNECTION,blockBuilder,blockDefJson));
  basicBlocks[2]=Maps.newHashMap();
  basicBlocks[2].put(DirectionsUtil.getDirections(Direction.FORWARD,Direction.BACKWARD),getBlockDefinition(TWO_CONNECTIONS_LINE,blockBuilder,blockDefJson));
  basicBlocks[2].put(DirectionsUtil.getDirections(Direction.RIGHT,Direction.FORWARD),getBlockDefinition(TWO_CONNECTIONS_CORNER,blockBuilder,blockDefJson));
  basicBlocks[3]=Maps.newHashMap();
  basicBlocks[3].put(DirectionsUtil.getDirections(Direction.RIGHT,Direction.FORWARD,Direction.UP),getBlockDefinition(THREE_CONNECTIONS_CORNER,blockBuilder,blockDefJson));
  basicBlocks[3].put(DirectionsUtil.getDirections(Direction.RIGHT,Direction.FORWARD,Direction.BACKWARD),getBlockDefinition(THREE_CONNECTIONS_T,blockBuilder,blockDefJson));
  basicBlocks[4]=Maps.newHashMap();
  basicBlocks[4].put(DirectionsUtil.getDirections(Direction.LEFT,Direction.RIGHT,Direction.FORWARD,Direction.BACKWARD),getBlockDefinition(FOUR_CONNECTIONS_CROSS,blockBuilder,blockDefJson));
  basicBlocks[4].put(DirectionsUtil.getDirections(Direction.RIGHT,Direction.FORWARD,Direction.BACKWARD,Direction.UP),getBlockDefinition(FOUR_CONNECTIONS_SIDE,blockBuilder,blockDefJson));
  basicBlocks[5]=Maps.newHashMap();
  basicBlocks[5].put(DirectionsUtil.getDirections(Direction.RIGHT,Direction.FORWARD,Direction.BACKWARD,Direction.UP,Direction.DOWN),getBlockDefinition(FIVE_CONNECTIONS,blockBuilder,blockDefJson));
  basicBlocks[6]=Maps.newHashMap();
  basicBlocks[6].put((byte)63,getBlockDefinition(SIX_CONNECTIONS,blockBuilder,blockDefJson));
  BlockUri blockUri=new BlockUri(blockDefUri.getPackage(),blockDefUri.getAssetName());
  for (byte connections=0; connections < 64; connections++) {
    Block block=constructBlockForConnections(connections,blockBuilder,blockDefUri,basicBlocks);
    if (block == null)     throw new IllegalStateException("Unable to find correct block definition for connections: " + connections);
    block.setUri(new BlockUri(blockUri,String.valueOf(connections)));
    blocksForConnections.put(connections,block);
  }
  final Block archetypeBlock=blocksForConnections.get(DirectionsUtil.getDirections(Direction.LEFT,Direction.RIGHT));
  return new ConnectToSixSidesFamily(connectionCondition,blockUri,blockDefinition.categories,archetypeBlock,blocksForConnections);
}
