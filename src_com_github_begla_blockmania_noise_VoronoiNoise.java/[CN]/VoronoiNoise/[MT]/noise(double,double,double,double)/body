{
  TDoubleArrayList candidates=new TDoubleArrayList();
  x*=_frequency;
  y*=_frequency;
  z*=_frequency;
  for (int zCubePos=(int)z - 1; zCubePos <= (int)z + 1; zCubePos++) {
    for (int yCubePos=(int)y - 1; yCubePos <= (int)y + 1; yCubePos++) {
      for (int xCubePos=(int)x - 1; xCubePos <= (int)x + 1; xCubePos++) {
        double candidateX=(xCubePos + (FastRandom.randomNoise(xCubePos,yCubePos,zCubePos,_seed) + 1.0) / 2.0);
        double candidateY=(yCubePos + (FastRandom.randomNoise(xCubePos,yCubePos,zCubePos,_seed + 1) + 1.0) / 2.0);
        double candidateZ=(zCubePos + (FastRandom.randomNoise(xCubePos,yCubePos,zCubePos,_seed + 2) + 1) / 2.0);
        double distX=candidateX - x;
        double distY=candidateY - y;
        double distZ=candidateZ - z;
        double candidateDistance=distX * distX + distY * distY + distZ * distZ;
        candidates.add(candidateDistance);
      }
    }
  }
  candidates.sort();
  double dist=-1 * candidates.get(0) + candidates.get(1);
  return (dist + 1) / 2;
}
