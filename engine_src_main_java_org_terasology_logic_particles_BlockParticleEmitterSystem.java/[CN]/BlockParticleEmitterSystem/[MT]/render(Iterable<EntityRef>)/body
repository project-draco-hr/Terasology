{
  Assets.getMaterial("engine:prog.particle").get().enable();
  glDisable(GL11.GL_CULL_FACE);
  Vector3f cameraPosition=worldRenderer.getActiveCamera().getPosition();
  for (  EntityRef entity : particleEntities) {
    LocationComponent location=entity.getComponent(LocationComponent.class);
    if (null == location) {
      continue;
    }
    Vector3f worldPos=location.getWorldPosition();
    if (!worldProvider.isBlockRelevant(worldPos)) {
      continue;
    }
    BlockParticleEffectComponent particleEffect=entity.getComponent(BlockParticleEffectComponent.class);
    if (particleEffect.texture == null) {
      Texture terrainTex=Assets.getTexture("engine:terrain").get();
      if (terrainTex == null || !terrainTex.isLoaded()) {
        return;
      }
      GL13.glActiveTexture(GL13.GL_TEXTURE0);
      glBindTexture(GL11.GL_TEXTURE_2D,terrainTex.getId());
    }
 else     if (particleEffect.texture.isLoaded()) {
      GL13.glActiveTexture(GL13.GL_TEXTURE0);
      glBindTexture(GL11.GL_TEXTURE_2D,particleEffect.texture.getId());
    }
 else {
      return;
    }
    if (particleEffect.blendMode == BlockParticleEffectComponent.ParticleBlendMode.ADD) {
      glBlendFunc(GL_ONE,GL_ONE);
    }
    if (particleEffect.blockType != null) {
      renderBlockParticles(worldPos,cameraPosition,particleEffect);
    }
 else {
      renderParticles(worldPos,cameraPosition,particleEffect);
    }
    if (particleEffect.blendMode == BlockParticleEffectComponent.ParticleBlendMode.ADD) {
      glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
    }
  }
  glEnable(GL11.GL_CULL_FACE);
}
