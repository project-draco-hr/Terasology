{
  Block activeBlock=_blockGroup.getArchetypeBlock();
  ShaderProgram shader=ShaderManager.getInstance().getShaderProgram("block");
  shader.enable();
  Vector4f color=activeBlock.calcColorOffsetFor(Side.FRONT,Terasology.getInstance().getActiveWorldRenderer().getActiveTemperature(player.getPosition()),Terasology.getInstance().getActiveWorldRenderer().getActiveTemperature(player.getPosition()));
  shader.setFloat3("colorOffset",color.x,color.y,color.z);
  glEnable(GL11.GL_BLEND);
  glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
  glAlphaFunc(GL_GREATER,0.1f);
  if (activeBlock.isTranslucent()) {
    glEnable(GL11.GL_ALPHA_TEST);
  }
  glPushMatrix();
  glTranslatef(1.0f,-1.3f + (float)player.calcBobbingOffset((float)Math.PI / 8f,0.05f,2.5f) - player.getHandMovementAnimationOffset() * 0.5f,-1.5f - player.getHandMovementAnimationOffset() * 0.5f);
  glRotatef(-25f - player.getHandMovementAnimationOffset() * 64.0f,1.0f,0.0f,0.0f);
  glRotatef(35f,0.0f,1.0f,0.0f);
  glTranslatef(0f,0.25f,0f);
  activeBlock.renderWithLightValue(Terasology.getInstance().getActiveWorldRenderer().getRenderingLightValue());
  glPopMatrix();
  if (activeBlock.isTranslucent()) {
    glDisable(GL11.GL_ALPHA_TEST);
  }
  glDisable(GL11.GL_BLEND);
}
