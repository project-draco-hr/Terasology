{
  return new Float3DIterator(){
    private Vector3i position=new Vector3i(-1,0,0);
    private int index;
    @Override public Vector3i currentPosition(){
      return position;
    }
    @Override public Vector2i current2DPos(){
      return new Vector2i(position.getX(),position.getZ());
    }
    @Override public void setLast(    float newValue){
      data[index - 1]=newValue;
    }
    @Override public float next(){
      position.x++;
      if (position.x == size.x) {
        position.x=0;
        position.y++;
        if (position.y == size.y) {
          position.y=0;
          position.z++;
        }
      }
      return data[index++];
    }
    @Override public boolean hasNext(){
      return index < data.length;
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
