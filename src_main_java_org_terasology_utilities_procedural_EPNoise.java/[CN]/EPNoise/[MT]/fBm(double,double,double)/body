{
  double result=0.0;
  if (on) {
    if (recomputeSpectralWeights) {
      spectralWeights=new double[octaves];
      for (int i=0; i < octaves; i++) {
        spectralWeights[i]=java.lang.Math.pow(LACUNARITY,-H * i);
      }
      recomputeSpectralWeights=false;
    }
    for (int i=0; i < octaves; i++) {
      result+=noise(x,y,z) * spectralWeights[i];
      x*=LACUNARITY;
      y*=LACUNARITY;
      z*=LACUNARITY;
    }
  }
  return result;
}
