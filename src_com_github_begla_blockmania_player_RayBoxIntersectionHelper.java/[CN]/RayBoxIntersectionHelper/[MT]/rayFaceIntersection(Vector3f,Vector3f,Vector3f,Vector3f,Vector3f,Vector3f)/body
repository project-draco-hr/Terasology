{
  Vector3f a=VectorPool.getVector();
  Vector3f.sub(v1,v0,a);
  Vector3f b=VectorPool.getVector();
  Vector3f.sub(v2,v0,b);
  Vector3f norm=VectorPool.getVector();
  Vector3f.cross(a,b,norm);
  VectorPool.putVector(a);
  VectorPool.putVector(b);
  float d=-(norm.x * v0.x + norm.y * v0.y + norm.z * v0.z);
  float t=-(norm.x * origin.x + norm.y * origin.y + norm.z * origin.z + d) / (Vector3f.dot(ray,norm));
  if (t < 0)   return null;
  Vector3f intersectPoint=VectorPool.getVector(ray.x * t,ray.y * t,ray.z * t);
  Vector3f.add(intersectPoint,origin,intersectPoint);
  if (intersectPoint.x >= v0.x && intersectPoint.x <= v2.x && intersectPoint.y >= v0.y && intersectPoint.y <= v2.y && intersectPoint.z >= v0.z && intersectPoint.z <= v2.z) {
    return new RayBoxIntersection(blockPos,v0,v1,v2,d,t,origin,ray,intersectPoint);
  }
  VectorPool.putVector(intersectPoint);
  VectorPool.putVector(norm);
  return null;
}
