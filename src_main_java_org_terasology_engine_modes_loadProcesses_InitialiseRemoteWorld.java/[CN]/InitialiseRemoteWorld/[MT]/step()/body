{
  CoreRegistry.put(LocalPlayer.class,new LocalPlayer());
  RemoteChunkProvider chunkProvider=new RemoteChunkProvider();
  WorldProviderCoreImpl worldProviderCore=new WorldProviderCoreImpl(gameManifest.getWorldInfo(TerasologyConstants.MAIN_WORLD),chunkProvider);
  EntityAwareWorldProvider entityWorldProvider=new EntityAwareWorldProvider(worldProviderCore);
  WorldProvider worldProvider=new WorldProviderWrapper(entityWorldProvider);
  CoreRegistry.put(WorldProvider.class,worldProvider);
  CoreRegistry.put(BlockEntityRegistry.class,entityWorldProvider);
  CoreRegistry.get(ComponentSystemManager.class).register(entityWorldProvider,"engine:BlockEntityRegistry");
  WorldRenderer worldRenderer=new WorldRenderer(worldProvider,chunkProvider,CoreRegistry.get(LocalPlayerSystem.class));
  CoreRegistry.put(WorldRenderer.class,worldRenderer);
  CoreRegistry.put(Camera.class,worldRenderer.getActiveCamera());
  CoreRegistry.put(PhysicsEngine.class,worldRenderer.getBulletRenderer());
  CoreRegistry.get(NetworkSystem.class).setRemoteWorldProvider(chunkProvider);
  return true;
}
