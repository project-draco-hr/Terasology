{
  EntityRef minion=getSelectedMinion(player);
  MinionComponent minionComp=minion.getComponent(MinionComponent.class);
  if (minionComp == null) {
    return;
  }
switch (minionComp.minionBehaviour) {
case Clear:
{
      SimpleMinionAIComponent minionai=minion.getComponent(SimpleMinionAIComponent.class);
      if (minionai == null) {
        return;
      }
      minionai.ClearCommands();
      minionComp.minionBehaviour=MinionBehaviour.Stay;
      minion.saveComponent(minionai);
      minion.saveComponent(minionComp);
      break;
    }
case Inventory:
{
    minion.send(new ActivateEvent(minion,player));
    minionComp.minionBehaviour=MinionBehaviour.Stay;
    minion.saveComponent(minionComp);
    break;
  }
case Test:
{
  LocalPlayer localPlayer=CoreRegistry.get(LocalPlayer.class);
  if (localPlayer == null)   return;
  MinionMessage messagetosend=new MinionMessage(MinionMessagePriority.Debug,"test","testdesc","testcont",minion,localPlayer.getEntity());
  minion.send(new MinionMessageEvent(messagetosend));
  break;
}
case Disappear:
{
minion.destroy();
break;
}
default :
break;
}
}
