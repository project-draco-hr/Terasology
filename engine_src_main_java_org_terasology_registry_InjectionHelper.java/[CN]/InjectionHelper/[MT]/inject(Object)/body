{
  AccessController.doPrivileged(new PrivilegedAction<Object>(){
    @Override public Object run(){
      for (      Field field : ReflectionUtils.getAllFields(object.getClass(),ReflectionUtils.withAnnotation(In.class))) {
        Object value=CoreRegistry.get(field.getType());
        if (value != null) {
          try {
            field.setAccessible(true);
            field.set(object,value);
          }
 catch (          IllegalAccessException e) {
            logger.error("Failed to inject value {} into field {} of {}",value,field,object,e);
          }
        }
      }
      for (      Field field : ReflectionUtils.getAllFields(object.getClass(),ReflectionUtils.withAnnotation(org.terasology.entitySystem.systems.In.class))) {
        Object value=CoreRegistry.get(field.getType());
        if (value != null) {
          try {
            field.setAccessible(true);
            field.set(object,value);
            logger.warn("Injection into field {} of {} using old @In annotation - please update",field,object);
          }
 catch (          IllegalAccessException e) {
            logger.error("Failed to inject value {} into field {} of {}",value,field,object,e);
          }
        }
      }
      return null;
    }
  }
);
}
