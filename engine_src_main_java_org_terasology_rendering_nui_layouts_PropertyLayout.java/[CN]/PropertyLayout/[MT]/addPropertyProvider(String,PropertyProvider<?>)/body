{
  if (propertyProvider.getProperties().size() > 0) {
    final UIButton expand=new UIButton("","+");
    expand.setTooltip("Click to expand");
    final UILabel headline=new UILabel(groupLabel);
    final MigLayout layout=new MigLayout();
    layout.setColConstraints("[min][fill]");
    layout.setRowConstraints("[min]");
    expand.subscribe(new ActivateEventListener(){
      @Override public void onActivated(      UIWidget widget){
        UIButton button=(UIButton)widget;
        if ("-".equals(button.getText())) {
          layout.clear();
          invalidate();
          button.setText("+");
          button.setTooltip("Click to expand");
        }
 else {
          List<Property<?,?>> props=Lists.newArrayList(propertyProvider.getProperties());
          Collections.sort(props,propertyComparator);
          for (          Property<?,?> property : props) {
            UILabel label=property.getLabel();
            UIWidget editor=property.getEditor();
            editor.setTooltip(property.getDescription());
            layout.addWidget(label,new CCHint("newline"));
            layout.addWidget(editor,new CCHint());
          }
          invalidate();
          button.setText("-");
          button.setTooltip("Click to contract");
        }
      }
    }
);
    addWidget(expand,new CCHint("newline, w 50!"));
    addWidget(headline,new CCHint());
    addWidget(layout,new CCHint("newline, spanx 2"));
  }
}
