{
  factories.put(Range.class,new RangePropertyFactory());
  factories.put(Checkbox.class,new CheckboxPropertyFactory());
  factories.put(OneOf.List.class,new OneOfListPropertyFactory());
  factories.put(OneOf.Enum.class,new OneOfEnumPropertyFactory());
  factories.put(OneOf.Provider.class,new OneOfProviderPropertyFactory());
  factories.put(TextField.class,new TextPropertyFactory());
  try {
    this.target=target;
    Class<?> type=target.getClass();
    ReflectFactory reflectFactory=CoreRegistry.get(ReflectFactory.class);
    CopyStrategyLibrary copyStrategies=new CopyStrategyLibrary(reflectFactory);
    ClassMetadata<?,?> classMetadata=new DefaultClassMetadata<>(new SimpleUri(),type,reflectFactory,copyStrategies);
    for (    Field field : getAllFields(type)) {
      Annotation annotation=getFactory(field);
      if (annotation != null) {
        FieldMetadata<Object,?> fieldMetadata=(FieldMetadata<Object,?>)classMetadata.getField(field.getName());
        PropertyFactory factory=factories.get(annotation.annotationType());
        Property property=factory.create(fieldMetadata,field.getName(),annotation);
        properties.add(property);
      }
    }
  }
 catch (  NoSuchMethodException e) {
    throw new RuntimeException(e);
  }
}
