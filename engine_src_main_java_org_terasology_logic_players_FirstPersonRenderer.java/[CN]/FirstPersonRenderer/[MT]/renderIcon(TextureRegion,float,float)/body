{
  Material shader=Assets.getMaterial("engine:block");
  shader.activateFeature(ShaderProgramFeature.FEATURE_USE_MATRIX_STACK);
  shader.enable();
  shader.setBoolean("textured",false,true);
  shader.setFloat("sunlight",worldRenderer.getSunlightValue(),true);
  shader.setFloat("blockLight",worldRenderer.getBlockLightValue(),true);
  glPushMatrix();
  glTranslatef(1.0f,-0.7f + bobOffset - handMovementAnimationOffset * 0.5f,-1.5f - handMovementAnimationOffset * 0.5f);
  glRotatef(-handMovementAnimationOffset * 64.0f,1.0f,0.0f,0.0f);
  glRotatef(-20f,1.0f,0.0f,0.0f);
  glRotatef(-80f,0.0f,1.0f,0.0f);
  glRotatef(45f,0.0f,0.0f,1.0f);
  glScalef(0.75f,0.75f,0.75f);
  if (iconTexture instanceof Asset<?>) {
    AssetUri uri=((Asset<?>)iconTexture).getURI();
    Mesh itemMesh=iconMeshes.get(uri.toNormalisedString());
    if (itemMesh == null) {
      itemMesh=MeshFactory.generateItemMesh(new AssetUri(AssetType.MESH,TerasologyConstants.ENGINE_MODULE,"pixelMesh." + uri.getAssetName()),iconTexture);
      iconMeshes.put(uri.toNormalisedString(),itemMesh);
    }
    itemMesh.render();
  }
  glPopMatrix();
  shader.deactivateFeature(ShaderProgramFeature.FEATURE_USE_MATRIX_STACK);
}
