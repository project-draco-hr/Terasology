{
  getSerializedSize();
  com.google.protobuf.GeneratedMessage.ExtendableMessage<org.terasology.protobuf.NetData.ServerInfoMessage>.ExtensionWriter extensionWriter=newExtensionWriter();
  for (int i=0; i < module_.size(); i++) {
    output.writeMessage(1,module_.get(i));
  }
  if (getBlockIdList().size() > 0) {
    output.writeRawVarint32(18);
    output.writeRawVarint32(blockIdMemoizedSerializedSize);
  }
  for (int i=0; i < blockId_.size(); i++) {
    output.writeSInt32NoTag(blockId_.get(i));
  }
  for (int i=0; i < blockName_.size(); i++) {
    output.writeBytes(3,blockName_.getByteString(i));
  }
  for (int i=0; i < component_.size(); i++) {
    output.writeMessage(4,component_.get(i));
  }
  for (int i=0; i < event_.size(); i++) {
    output.writeMessage(5,event_.get(i));
  }
  if (getAssetIdList().size() > 0) {
    output.writeRawVarint32(50);
    output.writeRawVarint32(assetIdMemoizedSerializedSize);
  }
  for (int i=0; i < assetId_.size(); i++) {
    output.writeInt32NoTag(assetId_.get(i));
  }
  for (int i=0; i < assetUri_.size(); i++) {
    output.writeBytes(7,assetUri_.getByteString(i));
  }
  for (int i=0; i < registerBlockFamily_.size(); i++) {
    output.writeBytes(8,registerBlockFamily_.getByteString(i));
  }
  for (int i=0; i < worldInfo_.size(); i++) {
    output.writeMessage(9,worldInfo_.get(i));
  }
  if (getBiomeShortIdList().size() > 0) {
    output.writeRawVarint32(82);
    output.writeRawVarint32(biomeShortIdMemoizedSerializedSize);
  }
  for (int i=0; i < biomeShortId_.size(); i++) {
    output.writeSInt32NoTag(biomeShortId_.get(i));
  }
  for (int i=0; i < biomeId_.size(); i++) {
    output.writeBytes(11,biomeId_.getByteString(i));
  }
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeBytes(15,getVersionBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeBytes(16,getGameNameBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeInt64(17,time_);
  }
  extensionWriter.writeUntil(536870912,output);
  getUnknownFields().writeTo(output);
}
