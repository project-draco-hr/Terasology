{
  boolean found=false;
  String name=null;
  Character arrayDelimiter=null;
  Class<? extends CommandParameterSuggester> suggesterClass=null;
  boolean required=true;
  for (  Annotation annotation : annotations) {
    if (annotation instanceof org.terasology.logic.console.commands.referenced.CommandParameter) {
      org.terasology.logic.console.commands.referenced.CommandParameter parameterAnnotation=(org.terasology.logic.console.commands.referenced.CommandParameter)annotation;
      name=parameterAnnotation.value();
      arrayDelimiter=parameterAnnotation.arrayDelimiter();
      suggesterClass=parameterAnnotation.suggester();
      required=parameterAnnotation.required();
      found=true;
      break;
    }
  }
  if (!found) {
    throw new NullPointerException("CommandParameter annotation not found.");
  }
  CommandParameterSuggester suggester;
  try {
    suggester=suggesterClass.newInstance();
  }
 catch (  InstantiationException|IllegalAccessException e) {
    throw new RuntimeException(e);
  }
  if (type.isArray()) {
    Class<?> childType=type.getComponentType();
    return CommandParameter.array(name,childType,arrayDelimiter,required,suggester);
  }
 else {
    return CommandParameter.single(name,type,required,suggester);
  }
}
