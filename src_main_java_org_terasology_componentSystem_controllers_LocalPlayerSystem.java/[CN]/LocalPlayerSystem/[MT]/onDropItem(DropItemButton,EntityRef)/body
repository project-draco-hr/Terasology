{
  if (event.getState() == ButtonState.DOWN && lastTimeThrowInteraction == 0) {
    lastTimeThrowInteraction=timer.getTimeInMs();
    return;
  }
  float dropPower=(float)Math.floor((timer.getTimeInMs() - lastTimeThrowInteraction) / 1000) * 25f;
  lastTimeThrowInteraction=0;
  if (dropPower > 125f) {
    dropPower=125f;
  }
  LocalPlayerComponent localPlayerComp=entity.getComponent(LocalPlayerComponent.class);
  InventoryComponent inventory=entity.getComponent(InventoryComponent.class);
  if (localPlayerComp.isDead)   return;
  EntityRef selectedItemEntity=inventory.itemSlots.get(localPlayerComp.selectedTool);
  if (selectedItemEntity.hasComponent(BlockItemComponent.class)) {
    BlockItemComponent block=selectedItemEntity.getComponent(BlockItemComponent.class);
    EntityManager entityManager=CoreRegistry.get(EntityManager.class);
    DroppedBlockFactory droppedBlockFactory=new DroppedBlockFactory(entityManager);
    Vector3f newPosition=new Vector3f(playerCamera.getPosition().x + playerCamera.getViewingDirection().x * 2,playerCamera.getPosition().y + playerCamera.getViewingDirection().y * 2,playerCamera.getPosition().z + playerCamera.getViewingDirection().z * 2);
    EntityRef droppedBlock=droppedBlockFactory.newInstance(new Vector3f(newPosition),block.blockFamily,20);
    droppedBlock.send(new ImpulseEvent(new Vector3f(playerCamera.getViewingDirection().x * dropPower,playerCamera.getViewingDirection().y * dropPower,playerCamera.getViewingDirection().z * dropPower)));
    ItemComponent item=selectedItemEntity.getComponent(ItemComponent.class);
    item.stackCount--;
    if (item.stackCount <= 0) {
      selectedItemEntity.destroy();
    }
  }
  localPlayerComp.handAnimation=0.5f;
  entity.saveComponent(localPlayerComp);
  event.consume();
}
