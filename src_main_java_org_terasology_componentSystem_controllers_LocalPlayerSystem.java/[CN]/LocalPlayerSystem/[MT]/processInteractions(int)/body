{
  MinionSystem minionsys=new MinionSystem();
  if (timer.getTimeInMs() - lastInteraction < 200) {
    return;
  }
  EntityRef entity=localPlayer.getEntity();
  LocalPlayerComponent localPlayerComp=entity.getComponent(LocalPlayerComponent.class);
  InventoryComponent inventory=entity.getComponent(InventoryComponent.class);
  if (localPlayerComp.isDead)   return;
  if (minionsys.MinionMode()) {
    if (button == 1) {
      if (minionsys.isMinionSelected()) {
        minionsys.RightMouseDown();
        minionsys.setMinionSelectMode(true);
      }
    }
 else {
      if (Mouse.isButtonDown(0) || button == 0) {
        minionsys.setTarget();
      }
    }
  }
 else {
    EntityRef selectedItemEntity=inventory.itemSlots.get(localPlayerComp.selectedTool);
    if (Mouse.isButtonDown(0) || button == 0) {
      ItemComponent item=selectedItemEntity.getComponent(ItemComponent.class);
      if (item != null && item.usage != ItemComponent.UsageType.None) {
        useItem(entity,selectedItemEntity);
      }
 else {
        attack(entity,selectedItemEntity);
      }
      lastInteraction=timer.getTimeInMs();
      localPlayerComp.handAnimation=0.5f;
      entity.saveComponent(localPlayerComp);
    }
 else     if (Mouse.isButtonDown(1) || button == 1) {
      attack(entity,selectedItemEntity);
      lastInteraction=timer.getTimeInMs();
      localPlayerComp.handAnimation=0.5f;
      entity.saveComponent(localPlayerComp);
    }
  }
}
