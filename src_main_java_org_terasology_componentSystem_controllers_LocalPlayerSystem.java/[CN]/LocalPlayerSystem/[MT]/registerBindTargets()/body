{
  clientController=CoreRegistry.get(ClientController.class);
  clientController.bind(Keyboard.KEY_W,new BindTarget("engine","MoveForward"){
    public void start(){
      goForward=true;
      movementVector.z=goBackward ? 0 : 1;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
    public void end(){
      goForward=false;
      movementVector.z=goBackward ? -1 : 0;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
  }
);
  clientController.bind(Keyboard.KEY_S,new BindTarget("engine","MoveReverse"){
    public void start(){
      goBackward=true;
      movementVector.z=goForward ? 0 : -1;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
    public void end(){
      goBackward=false;
      movementVector.z=goForward ? 1 : 0;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
  }
);
  clientController.bind(Keyboard.KEY_A,new BindTarget("engine","MoveLeft"){
    public void start(){
      goLeft=true;
      movementVector.x=goRight ? 0 : 1;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
    public void end(){
      goLeft=false;
      movementVector.x=goRight ? -1 : 0;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
  }
);
  clientController.bind(Keyboard.KEY_D,new BindTarget("engine","MoveRight"){
    public void start(){
      goRight=true;
      movementVector.x=goLeft ? 0 : -1;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
    public void end(){
      goRight=false;
      movementVector.x=goLeft ? 1 : 0;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
  }
);
  clientController.bind(Keyboard.KEY_SPACE,new BindTarget("engine","MoveUp"){
    public void start(){
      goUp=jump=true;
      movementVector.y=goDown ? 0 : 1;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
    public void end(){
      goUp=jump=false;
      movementVector.y=goDown ? -1 : 0;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
  }
);
  clientController.bind(Keyboard.KEY_C,new BindTarget("engine","MoveDown"){
    public void start(){
      goDown=true;
      movementVector.y=goUp ? 0 : -1;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
    public void end(){
      goDown=false;
      movementVector.y=goUp ? 1 : 0;
      movementContolEvent.reset();
      eventSystem.send(localPlayerRef,movementContolEvent);
    }
  }
);
  clientController.bind(Keyboard.KEY_LSHIFT,new BindTarget("engine","MoveRun"){
    public void start(){
      running=true;
    }
    public void end(){
      running=false;
    }
  }
);
}
