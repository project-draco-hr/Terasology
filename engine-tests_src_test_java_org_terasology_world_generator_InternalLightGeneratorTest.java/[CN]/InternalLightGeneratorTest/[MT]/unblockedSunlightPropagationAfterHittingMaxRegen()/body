{
  ChunkImpl chunk=new ChunkImpl(0,0,0);
  InternalLightProcessor.generateInternalLighting(chunk);
  for (  Vector3i pos : Region3i.createFromMinAndSize(new Vector3i(0,15,0),new Vector3i(ChunkConstants.SIZE_X,ChunkConstants.SIZE_Y - 15,ChunkConstants.SIZE_Z))) {
    assertEquals(0,chunk.getSunlight(pos));
  }
  for (  Vector3i pos : Region3i.createFromMinAndSize(Vector3i.zero(),new Vector3i(ChunkConstants.SIZE_X,ChunkConstants.SIZE_Y - ChunkConstants.MAX_SUNLIGHT_REGEN,ChunkConstants.SIZE_Z))) {
    byte expectedSunlight=(byte)Math.min(ChunkConstants.SIZE_Y - ChunkConstants.SUNLIGHT_REGEN_THRESHOLD - pos.y- 1,ChunkConstants.MAX_SUNLIGHT);
    assertEquals("Incorrect lighting at " + pos,expectedSunlight,chunk.getSunlight(pos));
  }
}
