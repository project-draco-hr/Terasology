{
  ItemComponent itemComp=itemEntity.getComponent(ItemComponent.class);
  if (itemComp == null || !itemComp.pickupPrefab.exists()) {
    return EntityRef.NULL;
  }
  EntityRef pickupItem=itemEntity;
  EntityRef owner=itemEntity.getOwner();
  if (owner.hasComponent(InventoryComponent.class)) {
    if (dropAll) {
      final EntityRef removedItem=inventoryManager.removeItem(owner,EntityRef.NULL,pickupItem,false);
      if (removedItem != null) {
        pickupItem=removedItem;
      }
    }
 else {
      final EntityRef removedItem=inventoryManager.removeItem(owner,EntityRef.NULL,pickupItem,false,1);
      if (removedItem != null) {
        pickupItem=removedItem;
      }
    }
  }
  if (pickupItem.exists()) {
    EntityBuilder builder=entityManager.newBuilder(itemComp.pickupPrefab);
    if (builder.hasComponent(LocationComponent.class)) {
      builder.getComponent(LocationComponent.class).setWorldPosition(pos);
    }
    if (builder.hasComponent(LifespanComponent.class)) {
      builder.getComponent(LifespanComponent.class).lifespan=lifespan;
    }
    boolean destroyItem=false;
    if (builder.hasComponent(PickupComponent.class)) {
      builder.getComponent(PickupComponent.class).itemEntity=pickupItem;
    }
 else {
      destroyItem=true;
    }
    pickupItem.send(new ItemDroppedEvent(builder));
    if (destroyItem) {
      pickupItem.destroy();
    }
    return builder.build();
  }
  return EntityRef.NULL;
}
