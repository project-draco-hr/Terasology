{
  SplashScreen.getInstance().post("Java Runtime " + System.getProperty("java.version") + " loaded");
  handlePrintUsageRequest(args);
  handleLaunchArguments(args);
  setupLogging();
  try (final TerasologyEngine engine=new TerasologyEngine(createSubsystemList())){
    Config config=CoreRegistry.get(Config.class);
    if (!writeSaveGamesEnabled) {
      config.getTransients().setWriteSaveGamesEnabled(writeSaveGamesEnabled);
    }
    if (serverPort != -1) {
      config.getTransients().setServerPort(serverPort);
    }
    if (isHeadless) {
      engine.subscribeToStateChange(new HeadlessStateChangeListener());
      engine.run(new StateHeadlessSetup());
    }
 else {
      if (loadLastGame) {
        engine.submitTask("loadGame",new Runnable(){
          @Override public void run(){
            GameManifest gameManifest=getLatestGameManifest();
            if (gameManifest != null) {
              engine.changeState(new StateLoading(gameManifest,NetworkMode.NONE));
            }
          }
        }
);
      }
      SplashScreen.getInstance().close();
      engine.run(new StateMainMenu());
    }
  }
 catch (  Throwable e) {
    if (!GraphicsEnvironment.isHeadless()) {
      reportException(e);
    }
  }
 finally {
    SplashScreen.getInstance().close();
  }
}
