{
  try {
    boolean isHeadless=false;
    Path homePath=null;
    for (    String arg : args) {
      if (arg.startsWith(HOME_ARG)) {
        homePath=Paths.get(arg.substring(HOME_ARG.length()));
      }
 else       if (arg.equals(LOCAL_ARG)) {
        homePath=Paths.get("");
      }
 else       if (arg.equals(HEADLESS_ARG)) {
        isHeadless=true;
      }
    }
    if (homePath != null) {
      PathManager.getInstance().useOverrideHomePath(homePath);
    }
 else {
      PathManager.getInstance().useDefaultHomePath();
    }
    Deque<EngineSubsystem> subsystemList;
    if (isHeadless) {
      subsystemList=new ArrayDeque<EngineSubsystem>(Arrays.asList(new EngineSubsystem[]{new HeadlessGraphics(),new HeadlessTimer(),new HeadlessAudio(),new HeadlessInput()}));
    }
 else {
      subsystemList=new ArrayDeque<EngineSubsystem>(Arrays.asList(new EngineSubsystem[]{new LwjglGraphics(),new LwjglTimer(),new LwjglAudio(),new LwjglInput()}));
    }
    TerasologyEngine engine=new TerasologyEngine(subsystemList);
    engine.init();
    if (isHeadless) {
      engine.run(new StateHeadlessSetup());
    }
 else {
      engine.run(new StateMainMenu());
    }
    engine.dispose();
  }
 catch (  Throwable t) {
    String text=getNestedMessageText(t);
    JOptionPane.showMessageDialog(null,text,"Fatal Error",JOptionPane.ERROR_MESSAGE);
  }
  System.exit(0);
}
