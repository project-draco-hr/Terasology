{
  Path homePath=null;
  for (  String arg : args) {
    boolean recognized=true;
    if (arg.startsWith(USE_SPECIFIED_DIR_AS_HOME)) {
      homePath=Paths.get(arg.substring(USE_SPECIFIED_DIR_AS_HOME.length()));
    }
 else     if (arg.equals(USE_CURRENT_DIR_AS_HOME)) {
      homePath=Paths.get("");
    }
 else     if (arg.equals(START_HEADLESS)) {
      isHeadless=true;
      crashReportEnabled=false;
      splashEnabled=false;
      soundEnabled=false;
    }
 else     if (arg.equals(NO_SAVE_GAMES)) {
      System.setProperty(SystemConfig.SAVED_GAMES_ENABLED_PROPERTY,"false");
    }
 else     if (arg.equals(NO_CRASH_REPORT)) {
      crashReportEnabled=false;
    }
 else     if (arg.equals(NO_SOUND)) {
      soundEnabled=false;
    }
 else     if (arg.equals(NO_SPLASH)) {
      splashEnabled=false;
    }
 else     if (arg.equals(LOAD_LAST_GAME)) {
      loadLastGame=true;
    }
 else     if (arg.startsWith(SERVER_PORT)) {
      System.setProperty(ConfigurationSubsystem.SERVER_PORT_PROPERTY,arg.substring(SERVER_PORT.length()));
    }
 else     if (arg.startsWith(OVERRIDE_DEFAULT_CONFIG)) {
      System.setProperty(Config.PROPERTY_OVERRIDE_DEFAULT_CONFIG,arg.substring(OVERRIDE_DEFAULT_CONFIG.length()));
    }
 else {
      recognized=false;
    }
    System.out.println((recognized ? "Recognized" : "Invalid") + " argument: " + arg);
  }
  try {
    if (homePath != null) {
      PathManager.getInstance().useOverrideHomePath(homePath);
    }
 else {
      PathManager.getInstance().useDefaultHomePath();
    }
  }
 catch (  IOException e) {
    reportException(e);
    System.exit(0);
  }
}
