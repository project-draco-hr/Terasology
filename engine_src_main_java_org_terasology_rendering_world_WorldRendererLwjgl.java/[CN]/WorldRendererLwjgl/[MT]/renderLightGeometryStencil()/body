{
  DefaultRenderingProcess.getInstance().beginRenderLightGeometryStencilPass();
  DefaultRenderingProcess.getInstance().endRenderLightGeometryStencilPass();
  DefaultRenderingProcess.getInstance().beginRenderLightGeometry();
  Material program=Assets.getMaterial("engine:prog.lightGeometryPass");
  EntityManager entityManager=CoreRegistry.get(EntityManager.class);
  for (  EntityRef entity : entityManager.getEntitiesWith(LightComponent.class,LocationComponent.class)) {
    LocationComponent locationComponent=entity.getComponent(LocationComponent.class);
    LightComponent lightComponent=entity.getComponent(LightComponent.class);
    final Vector3f worldPosition=locationComponent.getWorldPosition();
    renderLightComponent(lightComponent,worldPosition,program,false);
  }
  DefaultRenderingProcess.getInstance().endRenderLightGeometry();
  DefaultRenderingProcess.getInstance().beginRenderDirectionalLights();
  Vector3f sunlightWorldPosition=new Vector3f(skysphere.getSunDirection(true));
  sunlightWorldPosition.scale(50000f);
  sunlightWorldPosition.add(playerCamera.getPosition());
  renderLightComponent(mainDirectionalLight,sunlightWorldPosition,program,false);
  DefaultRenderingProcess.getInstance().endRenderDirectionalLights();
}
