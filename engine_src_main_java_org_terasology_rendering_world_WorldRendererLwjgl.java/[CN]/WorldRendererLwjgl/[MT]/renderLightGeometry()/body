{
  PerformanceMonitor.startActivity("Render Light Geometry");
  DefaultRenderingProcess.getInstance().beginRenderLightGeometry();
  EntityManager entityManager=CoreRegistry.get(EntityManager.class);
  for (  EntityRef entity : entityManager.getEntitiesWith(LightComponent.class,LocationComponent.class)) {
    LocationComponent locationComponent=entity.getComponent(LocationComponent.class);
    LightComponent lightComponent=entity.getComponent(LightComponent.class);
    final Vector3f worldPosition=locationComponent.getWorldPosition();
    renderLightComponent(lightComponent,worldPosition,lightGeometryShader,false);
  }
  DefaultRenderingProcess.getInstance().endRenderLightGeometry();
  DefaultRenderingProcess.getInstance().beginRenderDirectionalLights();
  Vector3f sunlightWorldPosition=new Vector3f(backdropProvider.getSunDirection(true));
  sunlightWorldPosition.scale(50000f);
  sunlightWorldPosition.add(playerCamera.getPosition());
  renderLightComponent(mainDirectionalLight,sunlightWorldPosition,lightGeometryShader,false);
  DefaultRenderingProcess.getInstance().endRenderDirectionalLights();
  PerformanceMonitor.endActivity();
}
