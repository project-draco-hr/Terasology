{
  Vector3i newChunkPos=calcCamChunkOffset();
  boolean chunksCurrentlyPending=false;
  if (!newChunkPos.equals(chunkPos) || force || pendingChunks) {
    Vector3i viewingDistance=config.getRendering().getViewDistance().getChunkDistance();
    Region3i viewRegion=Region3i.createFromCenterExtents(newChunkPos,new Vector3i(viewingDistance.x / 2,viewingDistance.y / 2,viewingDistance.z / 2));
    if (chunksInProximity.size() == 0 || force || pendingChunks) {
      chunksInProximity.clear();
      for (      Vector3i pos : viewRegion) {
        ChunkImpl c=chunkProvider.getChunk(pos);
        if (c != null && c.getChunkState() == ChunkImpl.State.COMPLETE && worldProvider.getLocalView(c.getPos()) != null) {
          chunksInProximity.add(c);
        }
 else {
          chunksCurrentlyPending=true;
        }
      }
    }
 else {
      Region3i oldRegion=Region3i.createFromCenterExtents(chunkPos,new Vector3i(viewingDistance.x / 2,viewingDistance.y / 2,viewingDistance.z / 2));
      Iterator<Vector3i> removeChunks=oldRegion.subtract(viewRegion);
      while (removeChunks.hasNext()) {
        Vector3i pos=removeChunks.next();
        ChunkImpl c=chunkProvider.getChunk(pos);
        if (c != null) {
          chunksInProximity.remove(c);
          c.disposeMesh();
        }
      }
      for (      Vector3i pos : viewRegion) {
        ChunkImpl c=chunkProvider.getChunk(pos);
        if (c != null && c.getChunkState() == ChunkImpl.State.COMPLETE && worldProvider.getLocalView(c.getPos()) != null) {
          chunksInProximity.add(c);
        }
 else {
          chunksCurrentlyPending=true;
        }
      }
    }
    chunkPos.set(newChunkPos);
    pendingChunks=chunksCurrentlyPending;
    Collections.sort(chunksInProximity,new ChunkFrontToBackComparator());
    return true;
  }
  return false;
}
