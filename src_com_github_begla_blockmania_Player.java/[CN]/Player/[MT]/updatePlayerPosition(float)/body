{
  Vector3f oldPosition=new Vector3f(_position);
  if (_godMode) {
    getPosition().y+=(_accVector.y / 1000.0f) * delta;
    _gravity=0.0f;
  }
 else {
    getPosition().y+=(_gravity / 1000.0f) * delta;
  }
  getPosition().x+=(_accVector.x / 1000.0f) * delta;
  getPosition().z+=(_accVector.z / 1000.0f) * delta;
  _accVector.x+=_moveVector.x;
  _accVector.y+=_moveVector.y;
  _accVector.z+=_moveVector.z;
  if (Math.abs(_accVector.y) > 0f) {
    _accVector.y+=-1f * _accVector.y * 0.05f;
  }
  if (Math.abs(_accVector.x) > 0f) {
    _accVector.x+=-1f * _accVector.x * 0.05f;
  }
  if (Math.abs(_accVector.z) > 0f) {
    _accVector.z+=-1f * _accVector.z * 0.05f;
  }
  if (Math.abs(_accVector.x) > _wSpeed || Math.abs(_accVector.z) > _wSpeed || Math.abs(_accVector.z) > _wSpeed) {
    float max=Math.max(Math.max(Math.abs(_accVector.x),Math.abs(_accVector.z)),_accVector.y);
    float div=max / _wSpeed;
    _accVector.x/=div;
    _accVector.z/=div;
    _accVector.y/=div;
  }
  boolean vHit=verticalHitTest(oldPosition,delta);
  horizontalHitTest(oldPosition,delta);
  if (vHit && _jump) {
    _jump=false;
    _gravity=Configuration.JUMP_INTENSITY;
  }
  if (_gravity > -Configuration.MAX_GRAVITY) {
    _gravity-=0.05f * delta;
  }
  if (_demoAutoFlyMode && _godMode) {
    _accVector.x=16.f;
    _accVector.z=16.f;
  }
}
