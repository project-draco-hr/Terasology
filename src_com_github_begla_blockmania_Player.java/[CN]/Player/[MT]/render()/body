{
  glRotatef((float)_pitch,1f,0f,0f);
  glRotatef((float)_yaw,0f,1f,0f);
  glTranslatef(-_position.x,-_position.y,-_position.z);
  RayFaceIntersection is=calcSelectedBlock();
  if (Configuration._showPlacingBox) {
    if (is != null) {
      int bpX=(int)is.getBlockPos().x;
      int bpY=(int)is.getBlockPos().y;
      int bpZ=(int)is.getBlockPos().z;
      glColor3f(1.0f,1.0f,1.0f);
      glBegin(GL_LINES);
      glVertex3f(bpX - 0.5f,bpY - 0.5f,bpZ - 0.5f);
      glVertex3f(bpX + 0.5f,bpY - 0.5f,bpZ - 0.5f);
      glVertex3f(bpX - 0.5f,bpY - 0.5f,bpZ + 0.5f);
      glVertex3f(bpX + 0.5f,bpY - 0.5f,bpZ + 0.5f);
      glVertex3f(bpX - 0.5f,bpY + 0.5f,bpZ + 0.5f);
      glVertex3f(bpX + 0.5f,bpY + 0.5f,bpZ + 0.5f);
      glVertex3f(bpX - 0.5f,bpY + 0.5f,bpZ - 0.5f);
      glVertex3f(bpX + 0.5f,bpY + 0.5f,bpZ - 0.5f);
      glVertex3f(bpX - 0.5f,bpY - 0.5f,bpZ - 0.5f);
      glVertex3f(bpX - 0.5f,bpY - 0.5f,bpZ + 0.5f);
      glVertex3f(bpX + 0.5f,bpY - 0.5f,bpZ - 0.5f);
      glVertex3f(bpX + 0.5f,bpY - 0.5f,bpZ + 0.5f);
      glVertex3f(bpX - 0.5f,bpY + 0.5f,bpZ - 0.5f);
      glVertex3f(bpX - 0.5f,bpY + 0.5f,bpZ + 0.5f);
      glVertex3f(bpX + 0.5f,bpY + 0.5f,bpZ - 0.5f);
      glVertex3f(bpX + 0.5f,bpY + 0.5f,bpZ + 0.5f);
      glVertex3f(bpX - 0.5f,bpY - 0.5f,bpZ - 0.5f);
      glVertex3f(bpX - 0.5f,bpY + 0.5f,bpZ - 0.5f);
      glVertex3f(bpX + 0.5f,bpY - 0.5f,bpZ - 0.5f);
      glVertex3f(bpX + 0.5f,bpY + 0.5f,bpZ - 0.5f);
      glVertex3f(bpX - 0.5f,bpY - 0.5f,bpZ + 0.5f);
      glVertex3f(bpX - 0.5f,bpY + 0.5f,bpZ + 0.5f);
      glVertex3f(bpX + 0.5f,bpY - 0.5f,bpZ + 0.5f);
      glVertex3f(bpX + 0.5f,bpY + 0.5f,bpZ + 0.5f);
      glEnd();
    }
  }
}
