{
  UIScreenLoading loadingScreen=GUIManager.getInstance().addWindow(new UIScreenLoading(),"engine:loadingScreen");
  Display.update();
  int chunksGenerated=0;
  Timer timer=CoreRegistry.get(Timer.class);
  long startTime=timer.getTimeInMs();
  Iterator<EntityRef> iterator=entityManager.iteratorEntities(LocalPlayerComponent.class).iterator();
  if (iterator.hasNext()) {
    CoreRegistry.get(LocalPlayer.class).setEntity(iterator.next());
    worldRenderer.setPlayer(CoreRegistry.get(LocalPlayer.class));
  }
 else {
    EntityRef spawnZoneEntity=entityManager.create();
    spawnZoneEntity.addComponent(new LocationComponent(new Vector3f(Chunk.SIZE_X / 2,Chunk.SIZE_Y / 2,Chunk.SIZE_Z / 2)));
    worldRenderer.getChunkProvider().addRegionEntity(spawnZoneEntity,1);
    while (!worldRenderer.getWorldProvider().isBlockActive(new Vector3i(Chunk.SIZE_X / 2,Chunk.SIZE_Y / 2,Chunk.SIZE_Z / 2))) {
      loadingScreen.updateStatus(String.format("Loading spawn area... %.2f%%! :-)",(timer.getTimeInMs() - startTime) / 50.0f),(timer.getTimeInMs() - startTime) / 50.0f);
      renderUserInterface();
      updateUserInterface();
      Display.update();
    }
    Vector3i spawnPoint=new Vector3i(Chunk.SIZE_X / 2,Chunk.SIZE_Y,Chunk.SIZE_Z / 2);
    while (worldRenderer.getWorldProvider().getBlock(spawnPoint) == BlockManager.getInstance().getAir() && spawnPoint.y > 0) {
      spawnPoint.y--;
    }
    PlayerFactory playerFactory=new PlayerFactory(entityManager);
    CoreRegistry.get(LocalPlayer.class).setEntity(playerFactory.newInstance(new Vector3f(spawnPoint.x,spawnPoint.y + 1.5f,spawnPoint.z)));
    worldRenderer.setPlayer(CoreRegistry.get(LocalPlayer.class));
    worldRenderer.getChunkProvider().removeRegionEntity(spawnZoneEntity);
    spawnZoneEntity.destroy();
  }
  while (!getWorldRenderer().pregenerateChunks() && timer.getTimeInMs() - startTime < 5000) {
    chunksGenerated++;
    loadingScreen.updateStatus(String.format("Fast forwarding world... %.2f%%! :-)",(timer.getTimeInMs() - startTime) / 50.0f),(timer.getTimeInMs() - startTime) / 50.0f);
    renderUserInterface();
    updateUserInterface();
    Display.update();
  }
  GUIManager.getInstance().removeWindow(loadingScreen);
  worldRenderer.initPortal();
}
