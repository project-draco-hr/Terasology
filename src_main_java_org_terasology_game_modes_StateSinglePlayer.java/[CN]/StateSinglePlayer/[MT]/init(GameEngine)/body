{
  ModManager modManager=CoreRegistry.get(ModManager.class);
  for (  Mod mod : modManager.getMods()) {
    mod.setEnabled(true);
  }
  modManager.saveModSelectionToConfig();
  modManager.applyActiveMods();
  AssetManager.getInstance().clear();
  BlockManager.getInstance().load(worldInfo.getBlockIdMap());
  cacheTextures();
  cacheBlockMesh();
  entityManager=new EntitySystemBuilder().build();
  eventSystem=CoreRegistry.get(EventSystem.class);
  componentSystemManager=new ComponentSystemManager();
  CoreRegistry.put(ComponentSystemManager.class,componentSystemManager);
  localPlayerSys=new LocalPlayerSystem();
  componentSystemManager.register(localPlayerSys,"engine:LocalPlayerSystem");
  cameraTargetSystem=new CameraTargetSystem();
  CoreRegistry.put(CameraTargetSystem.class,cameraTargetSystem);
  componentSystemManager.register(cameraTargetSystem,"engine:CameraTargetSystem");
  initInput(modManager);
  componentSystemManager.loadSystems(ModManager.ENGINE_PACKAGE,modManager.getEngineReflections());
  for (  Mod mod : modManager.getActiveMods()) {
    componentSystemManager.loadSystems(mod.getModInfo().getId(),mod.getReflections());
  }
  CoreRegistry.put(WorldPersister.class,new WorldPersister(entityManager));
  loadPrefabs();
  CoreRegistry.put(CommandManager.class,new CommandManager());
}
