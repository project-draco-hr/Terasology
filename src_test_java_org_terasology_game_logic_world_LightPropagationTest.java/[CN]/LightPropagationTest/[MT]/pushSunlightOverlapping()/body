{
  for (  Vector3i pos : Region3i.createFromMinMax(new Vector3i(WORLD_MIN.x,Chunk.SIZE_Y - 1,WORLD_MIN.z),new Vector3i(WORLD_MAX.x,Chunk.SIZE_Y - 1,WORLD_MAX.z))) {
    view.setBlock(pos,dirt,air);
  }
  view.setBlock(new Vector3i(8,Chunk.SIZE_Y - 1,8),air,dirt);
  assertEquals(Region3i.createFromMinAndSize(new Vector3i(8 - 14,0,8 - 14),new Vector3i(29,Chunk.SIZE_Y,29)),propagator.update(8,Chunk.SIZE_Y - 1,8,air,dirt));
  view.setBlock(new Vector3i(14,Chunk.SIZE_Y - 1,8),air,dirt);
  assertEquals(Region3i.createFromMinAndSize(new Vector3i(12,0,-6),new Vector3i(17,Chunk.SIZE_Y,29)),propagator.update(14,Chunk.SIZE_Y - 1,8,air,dirt));
  for (  Vector3i pos : Region3i.createFromMinMax(WORLD_MIN,new Vector3i(WORLD_MAX.x,WORLD_MAX.y - 1,WORLD_MAX.z))) {
    int expected=Math.max(Math.max(Chunk.MAX_LIGHT - TeraMath.fastAbs(pos.x - 8) - TeraMath.fastAbs(pos.z - 8),0),Math.max(Chunk.MAX_LIGHT - TeraMath.fastAbs(pos.x - 14) - TeraMath.fastAbs(pos.z - 8),0));
    assertEquals(pos.toString(),expected,view.getSunlight(pos));
  }
}
