{
  for (  EntityRef entity : entityManager.iteratorEntities(SimpleMinionAIComponent.class,CharacterMovementComponent.class,LocationComponent.class)) {
    LocationComponent location=entity.getComponent(LocationComponent.class);
    SimpleMinionAIComponent ai=entity.getComponent(SimpleMinionAIComponent.class);
    CharacterMovementComponent moveComp=entity.getComponent(CharacterMovementComponent.class);
    Vector3f worldPos=location.getWorldPosition();
    moveComp.getDrive().set(0,0,0);
    LocalPlayer localPlayer=CoreRegistry.get(LocalPlayer.class);
    if (localPlayer != null) {
      if (ai.followingPlayer) {
        Vector3f dist=new Vector3f(worldPos);
        dist.sub(localPlayer.getPosition());
        double distanceToPlayer=dist.lengthSquared();
        if (distanceToPlayer > 8) {
          Vector3f target=localPlayer.getPosition();
          target.x-=2;
          ai.movementTarget.set(target);
          ai.followingPlayer=true;
          entity.saveComponent(ai);
        }
        Vector3f targetDirection=new Vector3f();
        targetDirection.sub(ai.movementTarget,worldPos);
        targetDirection.normalize();
        moveComp.setDrive(targetDirection);
        float yaw=(float)Math.atan2(targetDirection.x,targetDirection.z);
        AxisAngle4f axisAngle=new AxisAngle4f(0,1,0,yaw);
        location.getLocalRotation().set(axisAngle);
        entity.saveComponent(moveComp);
        entity.saveComponent(location);
      }
 else {
        Vector3f targetDirection=new Vector3f();
        targetDirection.sub(ai.movementTarget,worldPos);
        targetDirection.normalize();
        moveComp.setDrive(targetDirection);
        float yaw=(float)Math.atan2(targetDirection.x,targetDirection.z);
        AxisAngle4f axisAngle=new AxisAngle4f(0,1,0,yaw);
        location.getLocalRotation().set(axisAngle);
        entity.saveComponent(moveComp);
        entity.saveComponent(location);
      }
    }
  }
}
