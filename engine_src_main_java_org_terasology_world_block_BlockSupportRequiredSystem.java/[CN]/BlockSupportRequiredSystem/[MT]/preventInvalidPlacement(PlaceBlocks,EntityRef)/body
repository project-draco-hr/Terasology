{
  final Map<Vector3i,Block> blocksMap=placeBlocks.getBlocks();
  for (  Map.Entry<Vector3i,Block> blockEntry : blocksMap.entrySet()) {
    final Vector3i position=blockEntry.getKey();
    final Block block=blockEntry.getValue();
    if (block.isSupportRequired()) {
      final Vector3i bottomPos=Side.BOTTOM.getAdjacentPos(position);
      final Block setBottomBlock=blocksMap.get(bottomPos);
      if (setBottomBlock != null && setBottomBlock == BlockManager.getAir()) {
        placeBlocks.consume();
        break;
      }
 else       if (setBottomBlock == null) {
        final Block bottomBlockInWorld=worldProvider.getBlock(bottomPos);
        if (bottomBlockInWorld == BlockManager.getAir()) {
          placeBlocks.consume();
          break;
        }
      }
    }
    final BlockSupportRequiredComponent supportComponent=block.getEntity().getComponent(BlockSupportRequiredComponent.class);
    if (supportComponent != null) {
      if (!hasSupport(position,supportComponent,blocksMap)) {
        placeBlocks.consume();
        break;
      }
    }
  }
}
