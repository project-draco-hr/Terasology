{
  Prefab oldPrefab=(!oldType.getPrefab().isEmpty()) ? entityManager.getPrefabManager().getPrefab(oldType.getPrefab()) : null;
  Prefab newPrefab=(!type.getPrefab().isEmpty()) ? entityManager.getPrefabManager().getPrefab(type.getPrefab()) : null;
  for (  ComponentMetadata<?> metadata : entityManager.getComponentLibrary().iterateComponentMetadata()) {
    if (!COMMON_BLOCK_COMPONENTS.contains(metadata.getType()) && !metadata.isRetainUnalteredOnBlockChange() && (newPrefab == null || !newPrefab.hasComponent(metadata.getType()))&& !retainComponents.contains(metadata.getType())) {
      blockEntity.removeComponent(metadata.getType());
    }
  }
  BlockComponent blockComponent=blockEntity.getComponent(BlockComponent.class);
  blockComponent.setBlock(type);
  blockEntity.saveComponent(blockComponent);
  HealthComponent health=blockEntity.getComponent(HealthComponent.class);
  if (health == null && type.isDestructible()) {
    blockEntity.addComponent(new HealthComponent(type.getHardness(),2.0f,1.0f));
  }
 else   if (health != null && !type.isDestructible()) {
    blockEntity.removeComponent(HealthComponent.class);
  }
 else   if (health != null && type.isDestructible()) {
    health.maxHealth=type.getHardness();
    health.currentHealth=Math.min(health.currentHealth,health.maxHealth);
    blockEntity.saveComponent(health);
  }
  if (Objects.equal(newPrefab,oldPrefab)) {
    return;
  }
  if (newPrefab != null) {
    for (    Component comp : newPrefab.iterateComponents()) {
      copyIntoPrefab(blockEntity,comp,retainComponents);
    }
    EntityInfoComponent entityInfo=blockEntity.getComponent(EntityInfoComponent.class);
    if (entityInfo == null) {
      entityInfo=new EntityInfoComponent();
      entityInfo.parentPrefab=newPrefab.getName();
      blockEntity.addComponent(entityInfo);
    }
 else     if (!entityInfo.parentPrefab.equals(newPrefab.getName())) {
      entityInfo.parentPrefab=newPrefab.getName();
      blockEntity.saveComponent(entityInfo);
    }
  }
 else   if (oldPrefab != null) {
    EntityInfoComponent entityInfo=blockEntity.getComponent(EntityInfoComponent.class);
    if (entityInfo != null) {
      entityInfo.parentPrefab="";
      blockEntity.saveComponent(entityInfo);
    }
  }
}
