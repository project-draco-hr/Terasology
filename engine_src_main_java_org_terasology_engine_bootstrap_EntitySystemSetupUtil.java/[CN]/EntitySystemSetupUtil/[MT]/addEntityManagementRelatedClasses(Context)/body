{
  ModuleEnvironment environment=context.get(ModuleManager.class).getEnvironment();
  NetworkSystem networkSystem=context.get(NetworkSystem.class);
  PojoEntityManager entityManager=new PojoEntityManager();
  context.put(EntityManager.class,entityManager);
  context.put(EngineEntityManager.class,entityManager);
  TypeSerializationLibrary typeSerializationLibrary=context.get(TypeSerializationLibrary.class);
  typeSerializationLibrary.add(EntityRef.class,new EntityRefTypeHandler(entityManager));
  entityManager.setTypeSerializerLibrary(typeSerializationLibrary);
  PrefabManager prefabManager=new PojoPrefabManager(context);
  entityManager.setPrefabManager(prefabManager);
  context.put(PrefabManager.class,prefabManager);
  EntitySystemLibrary library=context.get(EntitySystemLibrary.class);
  entityManager.setComponentLibrary(library.getComponentLibrary());
  EventSystem eventSystem=new EventSystemImpl(library.getEventLibrary(),networkSystem);
  entityManager.setEventSystem(eventSystem);
  context.put(EventSystem.class,eventSystem);
  context.put(OneOfProviderFactory.class,new OneOfProviderFactory());
  NodesClassLibrary nodesClassLibrary=new NodesClassLibrary(context);
  context.put(NodesClassLibrary.class,nodesClassLibrary);
  nodesClassLibrary.scan(environment);
  registerComponents(library.getComponentLibrary(),environment);
  registerEvents(entityManager.getEventSystem(),environment);
}
