{
  for (  UIItemCell cell : inventoryCells) {
    inventoryParent.removeDisplayElement(cell);
  }
  inventoryCells.clear();
  EntityManager entityManager=CoreRegistry.get(EntityManager.class);
  EntityRef entity;
  PrefabManager prefMan=CoreRegistry.get(PrefabManager.class);
  Iterator<Prefab> it=prefMan.listPrefabs().iterator();
  ItemComponent itemComp;
  while (it.hasNext()) {
    Prefab prefab=it.next();
    itemComp=prefab.getComponent(ItemComponent.class);
    if (itemComp != null) {
      entity=entityManager.create(prefab.listComponents());
      if (entity.exists() && entity.getComponent(ItemComponent.class) != null) {
        UIItemCell cell=new UIItemCell(null,inventoryCellSize);
        cell.setDrag(false);
        cell.setItemEntity(entity,0);
        cell.setDisplayItemCount(false);
        cell.setVisible(true);
        cell.addClickListener(inventoryClickListener);
        inventoryCells.add(cell);
        inventoryContainer.addDisplayElement(cell);
      }
    }
  }
  BlockItemFactory blockFactory=new BlockItemFactory(entityManager);
  List<List<BlockUri>> blocks=new ArrayList<List<BlockUri>>();
  blocks.add(sortItems(BlockManager.getInstance().listRegisteredBlockUris()));
  blocks.add(sortItems(BlockManager.getInstance().listAvailableBlockUris()));
  blocks.add(sortItems(BlockManager.getInstance().listShapelessBlockUris()));
  for (  List<BlockUri> blockList : blocks) {
    for (    BlockUri block : blockList) {
      entity=blockFactory.newInstance(BlockManager.getInstance().getBlockFamily(block.getFamilyUri()),99);
      if (entity.exists()) {
        UIItemCell cell=new UIItemCell(null,inventoryCellSize);
        cell.setDrag(false);
        cell.setItemEntity(entity,0);
        cell.setDisplayItemCount(false);
        cell.setVisible(true);
        cell.addClickListener(inventoryClickListener);
        inventoryCells.add(cell);
        inventoryContainer.addDisplayElement(cell);
      }
    }
  }
}
