{
  if (!newRenderableRegion.equals(renderableRegion)) {
    Iterator<Vector3i> chunksToRemove=renderableRegion.subtract(newRenderableRegion);
    while (chunksToRemove.hasNext()) {
      Vector3i chunkPosition=chunksToRemove.next();
      Iterator<RenderableChunk> nearbyChunks=chunksInProximityOfCamera.iterator();
      while (nearbyChunks.hasNext()) {
        RenderableChunk chunk=nearbyChunks.next();
        if (chunk.getPosition().equals(chunkPosition)) {
          chunk.disposeMesh();
          nearbyChunks.remove();
          break;
        }
      }
    }
    Iterator<Vector3i> chunksToAdd=newRenderableRegion.subtract(renderableRegion);
    while (chunksToAdd.hasNext()) {
      Vector3i chunkCoordinates=chunksToAdd.next();
      RenderableChunk chunk=chunkProvider.getChunk(chunkCoordinates);
      if (chunk != null) {
        chunksInProximityOfCamera.add(chunk);
      }
    }
    renderableRegion=newRenderableRegion;
    Collections.sort(chunksInProximityOfCamera,new ChunkFrontToBackComparator());
    return true;
  }
  return false;
}
