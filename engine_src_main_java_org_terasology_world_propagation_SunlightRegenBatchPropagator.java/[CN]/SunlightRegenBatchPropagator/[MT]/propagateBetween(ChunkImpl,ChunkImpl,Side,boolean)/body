{
  if (side == Side.BOTTOM) {
    int[] depth=new int[ChunkConstants.SIZE_X * ChunkConstants.SIZE_Z];
    int[] startingRegen=new int[depth.length];
    propagateSweep(chunk,adjChunk,depth,startingRegen);
    int[] adjDepths=new int[depth.length];
    TeraMath.populateMinAdjacent2D(depth,adjDepths,ChunkConstants.SIZE_X,ChunkConstants.SIZE_Z,!propagateExternal);
    if (propagateExternal) {
      for (int z=0; z < ChunkConstants.SIZE_Z; ++z) {
        adjDepths[z * ChunkConstants.SIZE_X]=0;
        adjDepths[ChunkConstants.SIZE_X - 1 + z * ChunkConstants.SIZE_X]=0;
      }
      for (int x=0; x < ChunkConstants.SIZE_X; ++x) {
        adjDepths[x]=0;
        adjDepths[x + ChunkConstants.SIZE_X * (ChunkConstants.SIZE_Z - 1)]=0;
      }
    }
    int[] adjStartingRegen=new int[depth.length];
    TeraMath.populateMinAdjacent2D(startingRegen,adjStartingRegen,ChunkConstants.SIZE_X,ChunkConstants.SIZE_Z,true);
    markForPropagation(adjChunk,depth,startingRegen,adjDepths,adjStartingRegen);
  }
}
