{
  succ1=new ShapeSymbol("succ1");
  succ2=new ShapeSymbol("succ2");
  DivideArg argY1=new DivideArg(new Size(heightY1,true),succ1);
  DivideArg argY2=new DivideArg(new Size(heightY2,true),succ2);
  List<DivideArg> argsY=new ArrayList<DivideArg>();
  argsY.add(argY1);
  argsY.add(argY2);
  verticalDivPositiveY=new DivideRule(argsY,DivideRule.Direction.Y);
  verticalDivPositiveY.setMatrix(Matrix4i.id());
  verticalDivPositiveY.setDimension(posDim);
  verticalDivNegativeY=new DivideRule(argsY,DivideRule.Direction.Y);
  verticalDivNegativeY.setMatrix(Matrix4i.id());
  verticalDivNegativeY.setDimension(negYDim);
  DivideArg argZ1=new DivideArg(new Size(heightZ1,true),succ1);
  DivideArg argZ2=new DivideArg(new Size(heightZ2,true),succ2);
  List<DivideArg> argsZ=new ArrayList<DivideArg>();
  argsZ.add(argZ1);
  argsZ.add(argZ2);
  horizontalDivNegZ=new DivideRule(argsZ,DivideRule.Direction.Z);
  horizontalDivNegZ.setMatrix(Matrix4i.id());
  horizontalDivNegZ.setDimension(negZDim);
  horizontalDivZ=new DivideRule(argsZ,DivideRule.Direction.Z);
  horizontalDivZ.setMatrix(Matrix4i.id());
  horizontalDivZ.setDimension(posDim);
  relSucc1=new ShapeSymbol("relSucc1");
  relSucc2=new ShapeSymbol("relSucc2");
  relSucc3=new ShapeSymbol("relSucc3");
  DivideArg relArg1=new DivideArg(new Size(relHeight,false),relSucc1);
  DivideArg relArg2=new DivideArg(new Size(height3,true),relSucc2);
  DivideArg relArg3=new DivideArg(new Size(relHeight,false),relSucc3);
  List<DivideArg> relArgs=new ArrayList<DivideArg>();
  relArgs.add(relArg1);
  relArgs.add(relArg2);
  relArgs.add(relArg3);
  relDivide=new DivideRule(relArgs,DivideRule.Direction.X);
  relDivide.setMatrix(Matrix4i.id());
  relDivide.setDimension(relDim);
}
