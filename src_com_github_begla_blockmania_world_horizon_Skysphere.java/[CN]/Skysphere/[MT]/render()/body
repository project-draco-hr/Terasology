{
  if (_parent.getPlayer().isHeadUnderWater() || !(_parent.getTime() >= 0.0f && _parent.getTime() <= 0.6))   return;
  _parent.getPlayer().applyNormalizedModelViewMatrix();
  glDisable(GL_CULL_FACE);
  glDisable(GL_DEPTH_TEST);
  _sunPosAngle=5.3f * (float)_parent.getTime() - 1.6f;
  Vector4f sunNormalise=new Vector4f(0.0f,(float)Math.cos(_sunPosAngle),(float)Math.sin(_sunPosAngle),1.0f);
  sunNormalise=sunNormalise.normalise(null);
  _zenithColor=getAllWeatherZenith(sunNormalise.y);
  ShaderManager.getInstance().enableShader("sky");
  int sunPos=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("sky"),"sunPos");
  GL20.glUniform4f(sunPos,0.0f,-5 * (float)Math.cos(_sunPosAngle),-5 * (float)Math.sin(_sunPosAngle),1.0f);
  int turbidity=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("sky"),"turbidity");
  GL20.glUniform1f(turbidity,_turbidity);
  int zenith=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("sky"),"zenith");
  GL20.glUniform3f(zenith,_zenithColor.x,_zenithColor.y,_zenithColor.z);
  glPushMatrix();
  _sphere.draw(22,40,40);
  glPopMatrix();
  ShaderManager.getInstance().enableShader(null);
  glEnable(GL_CULL_FACE);
  glEnable(GL_DEPTH_TEST);
}
