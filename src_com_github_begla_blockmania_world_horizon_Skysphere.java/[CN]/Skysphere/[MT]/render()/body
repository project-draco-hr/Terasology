{
  if (_parent.getPlayer().isHeadUnderWater())   return;
  glDisable(GL_CULL_FACE);
  glDisable(GL_DEPTH_TEST);
  glEnable(GL13.GL_TEXTURE_CUBE_MAP);
  glEnable(GL12.GL_TEXTURE_3D);
  GL11.glBindTexture(GL13.GL_TEXTURE_CUBE_MAP,textureId.get(0));
  GL11.glBindTexture(GL12.GL_TEXTURE_3D,textureCloudsId.get(0));
  GL11.glTexParameteri(GL12.GL_TEXTURE_3D,EXTTextureFilterAnisotropic.GL_TEXTURE_MAX_ANISOTROPY_EXT,8);
  _sunPosAngle=(float)Math.toRadians(360.0 * _parent.getWorldProvider().getTime() - 90.0);
  Vector4f sunNormalise=new Vector4f(0.0f,(float)Math.cos(_sunPosAngle),(float)Math.sin(_sunPosAngle),1.0f);
  sunNormalise=sunNormalise.normalise(null);
  _zenithColor=getAllWeatherZenith(sunNormalise.y);
  ShaderManager.getInstance().enableShader("sky");
  int sunPos=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("sky"),"sunPos");
  GL20.glUniform4f(sunPos,0.0f,(float)Math.cos(_sunPosAngle),(float)Math.sin(_sunPosAngle),1.0f);
  int time=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("sky"),"time");
  GL20.glUniform1f(time,(float)_parent.getWorldProvider().getTime());
  int sunAngle=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("sky"),"sunAngle");
  GL20.glUniform1f(sunAngle,_sunPosAngle);
  int turbidity=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("sky"),"turbidity");
  GL20.glUniform1f(turbidity,_turbidity);
  int zenith=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("sky"),"zenith");
  GL20.glUniform3f(zenith,_zenithColor.x,_zenithColor.y,_zenithColor.z);
  drawSphere();
  ShaderManager.getInstance().enableShader(null);
  glDisable(GL12.GL_TEXTURE_3D);
  glDisable(GL13.GL_TEXTURE_CUBE_MAP);
  glEnable(GL_CULL_FACE);
  glEnable(GL_DEPTH_TEST);
}
