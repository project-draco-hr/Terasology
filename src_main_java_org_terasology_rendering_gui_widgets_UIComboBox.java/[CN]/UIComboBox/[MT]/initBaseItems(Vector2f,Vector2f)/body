{
  setSize(size);
  opened=false;
  baseInput=new UIText();
  baseInput.setSize(size);
  baseInput.setVisible(true);
  baseInput.setBorderSolid(new Vector4f(1f,1f,1f,1f),new Color(0,0,0));
  baseInput.setDisabled(true);
  baseInput.addMouseButtonListener(new MouseButtonListener(){
    @Override public void wheel(    UIDisplayElement element,    int wheel,    boolean intersect){
    }
    @Override public void up(    UIDisplayElement element,    int button,    boolean intersect){
      if (intersect) {
        opened=!opened;
      }
 else       if (!baseList.intersects(new Vector2f(Mouse.getX(),Display.getHeight() - Mouse.getY()))) {
        opened=false;
      }
      baseList.setVisible(opened);
      baseButton.setToggleState(opened);
    }
    @Override public void down(    UIDisplayElement element,    int button,    boolean intersect){
    }
  }
);
  baseInput.addMouseMoveListener(new MouseMoveListener(){
    @Override public void leave(    UIDisplayElement element){
    }
    @Override public void hover(    UIDisplayElement element){
    }
    @Override public void enter(    UIDisplayElement element){
      AudioManager.play(new AssetUri(AssetType.SOUND,"engine:PlaceBlock"));
    }
    @Override public void move(    UIDisplayElement element){
    }
  }
);
  baseButton=new UIButton(new Vector2f(20f,22f),UIButton.eButtonType.TOGGLE);
  baseButton.setVisible(true);
  baseButton.setPosition(new Vector2f(size.x - baseButton.getSize().x,size.y / 2 - baseButton.getSize().y / 2));
  baseButton.getLabel().setText("");
  baseButton.setTexture("engine:gui_menu");
  baseButton.setNormalState(new Vector2f(432f,0f),new Vector2f(18f,18f));
  baseButton.setPressedState(new Vector2f(432f,18f),new Vector2f(18f,18f));
  baseButton.addChangedListener(new ChangedListener(){
    @Override public void changed(    UIDisplayElement element){
      opened=baseButton.getToggleState();
      baseList.setVisible(opened);
      setFocus(UIComboBox.this);
    }
  }
);
  baseList=new UIList();
  baseList.setSize(listSize);
  baseList.setPosition(new Vector2f(0f,size.y));
  baseList.setBorderSolid(new Vector4f(1f,1f,1f,1f),new Color(0,0,0));
  baseList.setBackgroundColor(new Color(255,255,255));
  baseList.setVisible(false);
  baseList.addSelectionChangedListener(new SelectionChangedListener(){
    @Override public void changed(    UIDisplayElement element){
      if (baseList.getSelection() != null) {
        baseInput.setText((baseList.getSelection()).getText());
      }
      opened=false;
      baseList.setVisible(opened);
      baseButton.setToggleState(false);
      notifySelectionChangedListeners();
    }
  }
);
  baseList.addChangedListener(new ChangedListener(){
    @Override public void changed(    UIDisplayElement element){
      notifyChangedListeners();
    }
  }
);
  addDisplayElement(baseInput);
  addDisplayElement(baseButton);
  addDisplayElement(baseList);
}
