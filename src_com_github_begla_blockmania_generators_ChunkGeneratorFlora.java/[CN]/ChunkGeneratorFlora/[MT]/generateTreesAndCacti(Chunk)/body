{
  for (int y=32; y < Chunk.getChunkDimensionY(); y++) {
    for (int x=0; x < Chunk.getChunkDimensionX(); x+=4) {
      for (int z=0; z < Chunk.getChunkDimensionZ(); z+=4) {
        double rand=(_worldProvider.getRandom().randomDouble() + 1.0) / 2.0;
        double prob=1.0;
        BIOME_TYPE biome=calcBiomeTypeForGlobalPosition(c.getBlockWorldPosX(x),c.getBlockWorldPosZ(z));
        double humidity=calcHumidityAtGlobalPosition(c.getBlockWorldPosX(x),c.getBlockWorldPosZ(z));
        double temperature=calcTemperatureAtGlobalPosition(c.getBlockWorldPosX(x),c.getBlockWorldPosZ(z));
switch (biome) {
case PLAINS:
          prob=1.0 - (Double)BlockmaniaConfiguration.getInstance().getConfig().get("World.Biomes.Plains.treeDensity");
        break;
case MOUNTAINS:
      prob=1.0 - (Double)BlockmaniaConfiguration.getInstance().getConfig().get("World.Biomes.Mountains.treeDensity");
    break;
case FOREST:
  prob=1.0 - (Double)BlockmaniaConfiguration.getInstance().getConfig().get("World.Biomes.Forest.treeDensity");
break;
case SNOW:
prob=1.0 - (Double)BlockmaniaConfiguration.getInstance().getConfig().get("World.Biomes.Snow.treeDensity");
break;
case DESERT:
prob=1.0 - (Double)BlockmaniaConfiguration.getInstance().getConfig().get("World.Biomes.Desert.treeDensity");
break;
}
if (rand > prob) {
int randX=x + _worldProvider.getRandom().randomInt() % 12 + 6;
int randZ=z + _worldProvider.getRandom().randomInt() % 12 + 6;
if (temperature > 0.55 && humidity < 0.33 && (c.getBlock(randX,y,randZ) == BlockManager.getInstance().getBlock("Grass").getId() || c.getBlock(randX,y,randZ) == BlockManager.getInstance().getBlock("Snow").getId() || c.getBlock(randX,y,randZ) == BlockManager.getInstance().getBlock("Sand").getId())) c.getParent().getObjectGenerator("cactus").generate(c.getBlockWorldPosX(randX),y + 1,c.getBlockWorldPosZ(randZ),false);
 else if (c.getBlock(randX,y,randZ) == BlockManager.getInstance().getBlock("Grass").getId() || c.getBlock(randX,y,randZ) == BlockManager.getInstance().getBlock("Snow").getId()) generateTree(c,randX,y,randZ);
}
}
}
}
}
