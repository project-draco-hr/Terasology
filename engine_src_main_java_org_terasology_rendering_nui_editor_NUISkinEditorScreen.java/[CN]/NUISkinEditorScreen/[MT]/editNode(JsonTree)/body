{
  JsonTreeValue.Type type=node.getValue().getType();
  inlineEditorEntry=null;
  if (type == JsonTreeValue.Type.VALUE) {
    inlineEditorEntry=NUIEditorTextEntryBuilder.createValueEditor();
  }
 else   if (type == JsonTreeValue.Type.KEY_VALUE_PAIR) {
    inlineEditorEntry=NUIEditorTextEntryBuilder.createKeyValueEditor();
  }
 else   if (type == JsonTreeValue.Type.OBJECT && !(!node.isRoot() && node.getParent().getValue().getType() == JsonTreeValue.Type.ARRAY)) {
    inlineEditorEntry=NUIEditorTextEntryBuilder.createObjectEditor();
  }
 else   if (type == JsonTreeValue.Type.ARRAY) {
    inlineEditorEntry=NUIEditorTextEntryBuilder.createArrayEditor();
  }
  if (inlineEditorEntry != null) {
    inlineEditorEntry.bindValue(new Binding<JsonTree>(){
      @Override public JsonTree get(){
        return node;
      }
      @Override public void set(      JsonTree value){
        if (value != null) {
          node.setValue(value.getValue());
          editor.fireUpdateListeners();
        }
      }
    }
);
    editor.setAlternativeWidget(inlineEditorEntry);
    focusInlineEditor(node);
  }
}
