{
  vertices=new TFloatArrayList();
  texCoord0=new TFloatArrayList();
  texCoord1=new TFloatArrayList();
  normals=new TFloatArrayList();
  colors=new TFloatArrayList();
  indices=new TIntArrayList();
  int vertCount=0;
  ElementSet upAxisSet=rootElement.find("asset","up_axis");
  if (1 != upAxisSet.size()) {
    throw new ColladaParseException("Found multiple up_axis asset values");
  }
  Element upAxisElement=upAxisSet.first();
  String upAxis=upAxisElement.text();
  ElementSet unitSet=rootElement.find("asset","unit");
  if (1 != unitSet.size()) {
    throw new ColladaParseException("Found multiple unit asset values");
  }
  Element unitElement=unitSet.first();
  String unitsPerMeterString=unitElement.attr("meter");
  if (null != unitsPerMeterString) {
    unitsPerMeter=Double.parseDouble(unitsPerMeterString);
  }
  boolean yUp="Y_UP".equals(upAxis);
  boolean zUp="Z_UP".equals(upAxis);
  boolean xUp="X_UP".equals(upAxis);
  if (xUp) {
    throw new ColladaParseException("Not supporting X_UP as the upAxis value yet.");
  }
  ElementSet geometrySet=rootElement.find("library_geometries","geometry");
  for (  Element geometry : geometrySet) {
    ElementSet meshSet=geometry.find("mesh");
    if (1 != meshSet.size()) {
      throw new ColladaParseException("Found " + meshSet.size() + " mesh sets for geometry id="+ geometry.id()+ " name="+ geometry.name());
    }
    logger.info("Parsing geometry id=" + geometry.id() + " name="+ geometry.name());
    for (    Element mesh : meshSet) {
      ElementSet trianglesSet=mesh.find("triangles");
      for (      Element triangles : trianglesSet) {
        vertCount=parseTriangles(rootElement,vertices,texCoord0,normals,indices,colors,vertCount,geometry,mesh,triangles,yUp,zUp);
      }
      ElementSet polylistSet=mesh.find("polylist");
      for (      Element polylist : polylistSet) {
        ElementSet vCountSet=polylist.find("vcount");
        if (1 != vCountSet.size()) {
          throw new ColladaParseException("Found " + vCountSet.size() + " vcount sets for polylist in geometry id="+ geometry.id()+ " name="+ geometry.name());
        }
        Element vCountElement=vCountSet.first();
        TIntList vcountList=new TIntArrayList();
        String[] vCountStrings=getItemsInString(vCountElement.text());
        for (        String string : vCountStrings) {
          int vCount=Integer.parseInt(string);
          vcountList.add(vCount);
        }
        vertCount=parseFaces(rootElement,vcountList,vertices,texCoord0,normals,indices,colors,vertCount,geometry,mesh,polylist,yUp,zUp);
      }
    }
  }
}
