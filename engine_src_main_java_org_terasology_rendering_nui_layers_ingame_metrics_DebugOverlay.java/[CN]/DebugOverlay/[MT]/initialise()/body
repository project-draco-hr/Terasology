{
  bindVisible(new ReadOnlyBinding<Boolean>(){
    @Override public Boolean get(){
      return config.getSystem().isDebugEnabled();
    }
  }
);
  UILabel debugLine1=find("debugLine1",UILabel.class);
  if (debugLine1 != null) {
    debugLine1.bindText(new ReadOnlyBinding<String>(){
      @Override public String get(){
        double memoryUsage=((double)Runtime.getRuntime().totalMemory() - (double)Runtime.getRuntime().freeMemory()) / 1048576.0;
        return String.format("fps: %.2f, mem usage: %.2f MB, total mem: %.2f, max mem: %.2f",time.getFps(),memoryUsage,Runtime.getRuntime().totalMemory() / 1048576.0,Runtime.getRuntime().maxMemory() / 1048576.0);
      }
    }
);
  }
  UILabel debugLine2=find("debugLine2",UILabel.class);
  if (debugLine2 != null) {
    debugLine2.bindText(new ReadOnlyBinding<String>(){
      @Override public String get(){
        return String.format("Active Entities: %s, Current Target: %s",entityManager.getActiveEntityCount(),cameraTarget.toString());
      }
    }
);
  }
  UILabel debugLine3=find("debugLine3",UILabel.class);
  if (debugLine3 != null) {
    debugLine3.bindText(new ReadOnlyBinding<String>(){
      @Override public String get(){
        Vector3f pos=localPlayer.getPosition();
        CharacterComponent character=localPlayer.getCharacterEntity().getComponent(CharacterComponent.class);
        float yaw=(character != null) ? character.yaw : 0;
        return String.format(Locale.US,"Pos (%.2f, %.2f, %.2f), Yaw %.2f",pos.x,pos.y,pos.z,yaw);
      }
    }
);
  }
  UILabel debugLine4=find("debugLine4",UILabel.class);
  if (debugLine4 != null) {
    debugLine4.bindText(new ReadOnlyBinding<String>(){
      @Override public String get(){
        return String.format("total vus: %s | active threads: %s | worldTime: %.2f",ChunkTessellator.getVertexArrayUpdateCount(),engine.getActiveTaskCount(),worldProvider.getTime().getDays());
      }
    }
);
  }
  metricsLabel=find("metrics",UILabel.class);
}
