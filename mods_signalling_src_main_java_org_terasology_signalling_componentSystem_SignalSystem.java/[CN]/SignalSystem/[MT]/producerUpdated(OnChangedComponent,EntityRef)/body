{
  logger.info("Producer updated: " + block.getParentPrefab());
  if (block.hasComponent(BlockComponent.class)) {
    for (    Component component : block.iterateComponents()) {
      logger.info("Producer component: " + component.getClass().getName());
    }
    Vector3i location=new Vector3i(block.getComponent(BlockComponent.class).getPosition());
    ImmutableBlockLocation blockLocation=new ImmutableBlockLocation(location);
    final SignalProducerComponent producerComponent=block.getComponent(SignalProducerComponent.class);
    final byte oldConnectionSides=signalProducers.get(blockLocation).connectionSides;
    byte newConnectionSides=producerComponent.connectionSides;
    NetworkNode node=toNode(location,newConnectionSides);
    if (oldConnectionSides != newConnectionSides) {
      signalProducers.put(node.location,node);
      final NetworkNode oldNode=toNode(location,oldConnectionSides);
      signalNetwork.updateLeafBlock(oldNode,node);
    }
    int oldSignalStrength=producerSignalStrengths.get(node);
    int newSignalStrength=producerComponent.signalStrength;
    if (oldSignalStrength != newSignalStrength) {
      producerSignalStrengths.put(node,newSignalStrength);
      producersSignalsChanged.add(node);
    }
  }
}
