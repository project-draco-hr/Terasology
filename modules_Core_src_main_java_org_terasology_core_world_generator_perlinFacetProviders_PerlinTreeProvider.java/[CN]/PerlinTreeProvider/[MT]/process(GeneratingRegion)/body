{
  TreeFacet facet=new TreeFacet(region.getRegion(),region.getBorderForFacet(PlantFacet.class));
  SurfaceHeightFacet surface=region.getRegionFacet(SurfaceHeightFacet.class);
  DensityFacet density=region.getRegionFacet(DensityFacet.class);
  BiomeFacet biomeFacet=region.getRegionFacet(BiomeFacet.class);
  SeaLevelFacet seaLevel=region.getRegionFacet(SeaLevelFacet.class);
  int minY=facet.getWorldRegion().minY();
  int maxY=facet.getWorldRegion().maxY();
  for (int z=facet.getRelativeRegion().minZ(); z <= facet.getRelativeRegion().maxZ(); ++z) {
    for (int x=facet.getRelativeRegion().minX(); x <= facet.getRelativeRegion().maxX(); ++x) {
      int height=TeraMath.floorToInt(surface.get(x,z));
      if (height >= minY && height < maxY && height >= seaLevel.getSeaLevel()) {
        WorldBiomeProvider.Biome biome=biomeFacet.get(x,z);
        height=height - minY + facet.getRelativeRegion().minY();
        if (density.get(x,height,z) > 0 && density.get(x,height + 1,z) <= 0 && noiseTable.noise(x,z) > 254) {
          facet.set(x,height + 1,z,noiseTable.noise(x,z));
        }
      }
    }
  }
  region.setRegionFacet(TreeFacet.class,facet);
}
