{
  columnLayout=new ColumnLayout();
  itemAt1x1=mock(UIWidget.class);
  itemAt2x1=mock(UIWidget.class);
  itemAt3x1=mock(UIWidget.class);
  itemAt1x2=mock(UIWidget.class);
  itemAt2x2=mock(UIWidget.class);
  itemAt3x2=mock(UIWidget.class);
  canvas=mock(Canvas.class);
  when(canvas.calculateRestrictedSize(eq(itemAt1x1),any(Vector2i.class))).thenReturn(new Vector2i(50,10));
  when(canvas.calculateRestrictedSize(eq(itemAt2x1),any(Vector2i.class))).thenReturn(new Vector2i(5,5));
  when(canvas.calculateRestrictedSize(eq(itemAt3x1),any(Vector2i.class))).thenReturn(new Vector2i(10,10));
  when(canvas.calculateRestrictedSize(eq(itemAt1x2),any(Vector2i.class))).thenReturn(new Vector2i(20,10));
  when(canvas.calculateRestrictedSize(eq(itemAt2x2),any(Vector2i.class))).thenReturn(new Vector2i(5,5));
  when(canvas.calculateRestrictedSize(eq(itemAt3x2),any(Vector2i.class))).thenReturn(new Vector2i(20,10));
  Vector2i availableSize=new Vector2i(200,200);
  when(canvas.size()).thenReturn(availableSize);
  columnLayout.setColumns(3);
  columnLayout.addWidget(itemAt1x1);
  columnLayout.addWidget(itemAt2x1);
  columnLayout.addWidget(itemAt3x1);
  columnLayout.addWidget(itemAt1x2);
  columnLayout.addWidget(itemAt2x2);
  columnLayout.addWidget(itemAt3x2);
}
