{
  MaterialMetadata metadata=new MaterialMetadata();
  JsonObject obj=json.getAsJsonObject();
  if (obj.has("shader")) {
    metadata.shader=obj.getAsJsonPrimitive("shader").getAsString();
  }
  if (obj.has("params") && obj.get("params").isJsonObject()) {
    JsonObject params=obj.get("params").getAsJsonObject();
    for (    Map.Entry<String,JsonElement> prop : params.entrySet()) {
      if (prop.getValue().isJsonPrimitive()) {
        if (prop.getValue().getAsJsonPrimitive().isString()) {
          Texture texture=AssetManager.loadTexture(prop.getValue().getAsString());
          if (texture != null) {
            metadata.textures.put(prop.getKey(),texture);
          }
        }
 else         if (prop.getValue().getAsJsonPrimitive().isNumber()) {
          metadata.floatParams.put(prop.getKey(),prop.getValue().getAsFloat());
        }
 else         if (prop.getValue().getAsJsonPrimitive().isBoolean()) {
          metadata.intParams.put(prop.getKey(),(prop.getValue().getAsBoolean()) ? 1 : 0);
        }
      }
 else       if (prop.getValue().isJsonArray()) {
        JsonArray array=prop.getValue().getAsJsonArray();
        float[] result=new float[array.size()];
        boolean valid=true;
        for (int i=0; i < array.size(); ++i) {
          if (!array.get(i).isJsonPrimitive() || !array.get(i).getAsJsonPrimitive().isNumber()) {
            valid=false;
            break;
          }
          result[i]=array.get(i).getAsFloat();
        }
        if (valid) {
          metadata.floatArrayParams.put(prop.getKey(),result);
        }
      }
    }
  }
  return metadata;
}
