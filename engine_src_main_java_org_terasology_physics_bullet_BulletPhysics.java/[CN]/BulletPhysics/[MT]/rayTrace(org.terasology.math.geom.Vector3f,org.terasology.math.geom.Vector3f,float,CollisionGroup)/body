{
  Vector3f to=new Vector3f(VecMath.to(direction));
  Vector3f from=VecMath.to(from1);
  to.scale(distance);
  to.add(from);
  short filter=combineGroups(collisionGroups);
  CollisionWorld.ClosestRayResultWithUserDataCallback closest=new CollisionWorld.ClosestRayResultWithUserDataCallback(from,to);
  closest.collisionFilterGroup=CollisionFilterGroups.ALL_FILTER;
  closest.collisionFilterMask=filter;
  discreteDynamicsWorld.rayTest(from,to,closest);
  if (closest.hasHit()) {
    if (closest.userData instanceof Vector3i) {
      final EntityRef entityAt=blockEntityRegistry.getEntityAt((Vector3i)closest.userData);
      return new HitResult(entityAt,VecMath.from(closest.hitPointWorld),VecMath.from(closest.hitNormalWorld),(Vector3i)closest.userData);
    }
 else     if (closest.userData instanceof EntityRef) {
      return new HitResult((EntityRef)closest.userData,VecMath.from(closest.hitPointWorld),VecMath.from(closest.hitNormalWorld));
    }
 else {
      logger.warn("Unidentified object was hit in the physics engine: {}",closest.userData);
      return new HitResult();
    }
  }
 else {
    return new HitResult();
  }
}
