{
  str=str.replaceAll("\\s+"," ");
  int commandEndIndex=str.indexOf(" ");
  String commandName;
  if (commandEndIndex >= 0) {
    commandName=str.substring(0,commandEndIndex);
  }
 else {
    commandName=str;
    str="";
    commandEndIndex=0;
  }
  str=str.substring(commandEndIndex).trim();
  String[] params=str.split(" (?=([^\"]*\"[^\"]*\")*[^\"]*$)");
  String paramsStr="";
  int paramsCount=0;
  for (  String s : params) {
    if (s.trim().isEmpty()) {
      continue;
    }
    if (!paramsStr.isEmpty()) {
      paramsStr+=",";
    }
    paramsStr+=s;
    paramsCount++;
  }
  CommandInfo cmd=commandLookup.get(commandName,paramsCount);
  if (cmd == null) {
    if (commandLookup.containsRow(commandName)) {
      MessageManager.getInstance().addMessage("Incorrect number of parameters");
    }
 else {
      MessageManager.getInstance().addMessage("Unknown command '" + commandName + "'");
    }
    return false;
  }
  String executeString=paramsStr;
  logger.log(Level.INFO,"Execute command with params '" + paramsStr + "'");
  try {
    cmd.methodExecute(paramsStr);
    return true;
  }
 catch (  Exception e) {
    MessageManager.getInstance().addMessage(cmd.getUsageMessage());
    MessageManager.getInstance().addMessage("Error executing command '" + commandName + "'.");
    logger.log(Level.WARNING,"Failed to run command",e);
    return false;
  }
}
