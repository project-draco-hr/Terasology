{
  ShaderProgram shader=ShaderManager.getInstance().getShaderProgram("block");
  shader.enable();
  Block activeBlock=blockFamily.getArchetypeBlock();
  Vector4f color=activeBlock.calcColorOffsetFor(BlockPart.CENTER,worldProvider.getBiomeProvider().getTemperatureAt(TeraMath.floorToInt(cameraPos.x),TeraMath.floorToInt(cameraPos.z)),worldProvider.getBiomeProvider().getHumidityAt(TeraMath.floorToInt(cameraPos.x),TeraMath.floorToInt(cameraPos.z)));
  shader.setFloat3("colorOffset",color.x,color.y,color.z);
  if (notCurrentLevel) {
    shader.setFloat("necessarilyAlpha",0.3f);
  }
  shader.setInt("textured",1);
  glEnable(GL11.GL_BLEND);
  glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
  glAlphaFunc(GL_GREATER,0.1f);
  if (activeBlock.isTranslucent()) {
    glEnable(GL11.GL_ALPHA_TEST);
  }
  glMatrixMode(GL11.GL_MODELVIEW);
  glPushMatrix();
  glTranslatef(blockPos.x - cameraPos.x,blockPos.y - cameraPos.y,blockPos.z - cameraPos.z);
  glScalef(0.3f,0.3f,0.3f);
  activeBlock.renderWithLightValue(worldRenderer.getRenderingLightValue());
  glPopMatrix();
  if (activeBlock.isTranslucent()) {
    glDisable(GL11.GL_ALPHA_TEST);
  }
  glDisable(GL11.GL_BLEND);
  if (notCurrentLevel) {
    shader.setFloat("necessarilyAlpha",0.0f);
  }
}
