{
  double result=0.0;
  if (recomputeSpectralWeights) {
    spectralWeights=new double[octaves];
    for (int i=0; i < octaves; i++) {
      spectralWeights[i]=java.lang.Math.pow(LACUNARITY,-H * i);
    }
    recomputeSpectralWeights=false;
  }
  double workingX=x;
  double workingY=y;
  double workingZ=z;
  for (int i=0; i < octaves; i++) {
    result+=noise(workingX,workingY,workingZ) * spectralWeights[i];
    workingX*=LACUNARITY;
    workingY*=LACUNARITY;
    workingZ*=LACUNARITY;
  }
  return result;
}
