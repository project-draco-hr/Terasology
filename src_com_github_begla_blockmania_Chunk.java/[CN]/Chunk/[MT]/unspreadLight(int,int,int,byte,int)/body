{
  if (depth >= oldLightValue) {
    return;
  }
  int blockPosX=getBlockWorldPosX(x);
  int blockPosY=getBlockWorldPosY(y);
  int blockPosZ=getBlockWorldPosZ(z);
  byte blockType=_parent.getBlock(blockPosX,blockPosY,blockPosZ);
  if ((!Block.getBlock(blockType).isBlockTypeTranslucent() && depth > 0)) {
    return;
  }
  byte val1=_parent.getLight(blockPosX + 1,blockPosY,blockPosZ);
  byte type1=_parent.getBlock(blockPosX + 1,blockPosY,blockPosZ);
  if (!Block.getBlock(type1).isBlockTypeTranslucent()) {
    val1=(byte)Byte.MAX_VALUE;
  }
  byte val2=_parent.getLight(blockPosX - 1,blockPosY,blockPosZ);
  byte type2=_parent.getBlock(blockPosX - 1,blockPosY,blockPosZ);
  if (!Block.getBlock(type2).isBlockTypeTranslucent()) {
    val2=(byte)Byte.MAX_VALUE;
  }
  byte val3=_parent.getLight(blockPosX,blockPosY,blockPosZ + 1);
  byte type3=_parent.getBlock(blockPosX,blockPosY,blockPosZ + 1);
  if (!Block.getBlock(type3).isBlockTypeTranslucent()) {
    val3=(byte)Byte.MAX_VALUE;
  }
  byte val4=_parent.getLight(blockPosX,blockPosY,blockPosZ - 1);
  byte type4=_parent.getBlock(blockPosX,blockPosY,blockPosZ - 1);
  if (!Block.getBlock(type4).isBlockTypeTranslucent()) {
    val4=(byte)Byte.MAX_VALUE;
  }
  byte val5=_parent.getLight(blockPosX,blockPosY + 1,blockPosZ);
  byte type5=_parent.getBlock(blockPosX,blockPosY + 1,blockPosZ);
  if (!Block.getBlock(type5).isBlockTypeTranslucent()) {
    val5=(byte)Byte.MAX_VALUE;
  }
  byte val6=_parent.getLight(blockPosX,blockPosY - 1,blockPosZ);
  byte type6=_parent.getBlock(blockPosX,blockPosY - 1,blockPosZ);
  if (!Block.getBlock(type6).isBlockTypeTranslucent()) {
    val6=(byte)Byte.MAX_VALUE;
  }
  byte min=(byte)Math.min(Math.min(Math.min(val1,val2),Math.min(val3,val4)),Math.min(val5,val6));
  System.out.println(min);
  _parent.setSunlight(blockPosX,blockPosY,blockPosZ,min,false);
  if (val1 < oldLightValue && val1 > 0) {
    _parent.unspreadLight(blockPosX + 1,blockPosY,blockPosZ,oldLightValue,++depth);
  }
  if (val2 < oldLightValue && val2 > 0) {
    _parent.unspreadLight(blockPosX - 1,blockPosY,blockPosZ,oldLightValue,++depth);
  }
  if (val3 < oldLightValue && val3 > 0) {
    _parent.unspreadLight(blockPosX,blockPosY,blockPosZ + 1,oldLightValue,++depth);
  }
  if (val4 < oldLightValue && val4 > 0) {
    _parent.unspreadLight(blockPosX,blockPosY,blockPosZ - 1,oldLightValue,++depth);
  }
  if (val5 < oldLightValue && val5 > 0) {
    _parent.unspreadLight(blockPosX,blockPosY + 1,blockPosZ,oldLightValue,++depth);
  }
  if (val6 < oldLightValue && val6 > 0) {
    _parent.unspreadLight(blockPosX,blockPosY - 1,blockPosZ,oldLightValue,++depth);
  }
}
