{
  int block=_blocks[x][y][z];
  if (Block.getBlock(block).isBlockInvisible() || !Block.getBlock(block).isBlockBillboard()) {
    return;
  }
  Vector3f offset=new Vector3f(_position.x * Configuration.CHUNK_DIMENSIONS.x,_position.y * Configuration.CHUNK_DIMENSIONS.y,_position.z * Configuration.CHUNK_DIMENSIONS.z);
  List<Float> quads=new ArrayList<Float>();
  List<Float> tex=new ArrayList<Float>();
  List<Float> color=new ArrayList<Float>();
  Vector4f colorOffset=Block.getBlock(block).getColorOffsetFor(Block.SIDE.FRONT);
  float texOffsetX=Block.getBlock(block).getTextureOffsetFor(Block.SIDE.FRONT).x;
  float texOffsetY=Block.getBlock(block).getTextureOffsetFor(Block.SIDE.FRONT).y;
  color.add(colorOffset.x * _parent.getDaylight());
  color.add(colorOffset.y * _parent.getDaylight());
  color.add(colorOffset.z * _parent.getDaylight());
  color.add(colorOffset.w);
  tex.add(texOffsetX);
  tex.add(texOffsetY + 0.0624f);
  quads.add(-0.5f + x + offset.x);
  quads.add(-0.5f + y + offset.y);
  quads.add(z + offset.z);
  color.add(colorOffset.x * _parent.getDaylight());
  color.add(colorOffset.y * _parent.getDaylight());
  color.add(colorOffset.z * _parent.getDaylight());
  color.add(colorOffset.w);
  tex.add(texOffsetX + 0.0624f);
  tex.add(texOffsetY + 0.0624f);
  quads.add(0.5f + x + offset.x);
  quads.add(-0.5f + y + offset.y);
  quads.add(z + offset.z);
  color.add(colorOffset.x * _parent.getDaylight());
  color.add(colorOffset.y * _parent.getDaylight());
  color.add(colorOffset.z * _parent.getDaylight());
  color.add(colorOffset.w);
  tex.add(texOffsetX + 0.0624f);
  tex.add(texOffsetY);
  quads.add(0.5f + x + offset.x);
  quads.add(0.5f + y + offset.y);
  quads.add(z + offset.z);
  color.add(colorOffset.x * _parent.getDaylight());
  color.add(colorOffset.y * _parent.getDaylight());
  color.add(colorOffset.z * _parent.getDaylight());
  color.add(colorOffset.w);
  tex.add(texOffsetX);
  tex.add(texOffsetY);
  quads.add(-0.5f + x + offset.x);
  quads.add(0.5f + y + offset.y);
  quads.add(z + offset.z);
  colorOffset=Block.getBlock(block).getColorOffsetFor(Block.SIDE.BACK);
  texOffsetX=Block.getBlock(block).getTextureOffsetFor(Block.SIDE.BACK).x;
  texOffsetY=Block.getBlock(block).getTextureOffsetFor(Block.SIDE.BACK).y;
  color.add(colorOffset.x * _parent.getDaylight());
  color.add(colorOffset.y * _parent.getDaylight());
  color.add(colorOffset.z * _parent.getDaylight());
  color.add(colorOffset.w);
  tex.add(texOffsetX);
  tex.add(texOffsetY + 0.0624f);
  quads.add(x + offset.x);
  quads.add(-0.5f + y + offset.y);
  quads.add(-0.5f + z + offset.z);
  color.add(colorOffset.x * _parent.getDaylight());
  color.add(colorOffset.y * _parent.getDaylight());
  color.add(colorOffset.z * _parent.getDaylight());
  color.add(colorOffset.w);
  tex.add(texOffsetX + 0.0624f);
  tex.add(texOffsetY + 0.0624f);
  quads.add(x + offset.x);
  quads.add(-0.5f + y + offset.y);
  quads.add(0.5f + z + offset.z);
  color.add(colorOffset.x * _parent.getDaylight());
  color.add(colorOffset.y * _parent.getDaylight());
  color.add(colorOffset.z * _parent.getDaylight());
  color.add(colorOffset.w);
  tex.add(texOffsetX + 0.0624f);
  tex.add(texOffsetY);
  quads.add(x + offset.x);
  quads.add(0.5f + y + offset.y);
  quads.add(0.5f + z + offset.z);
  color.add(colorOffset.x * _parent.getDaylight());
  color.add(colorOffset.y * _parent.getDaylight());
  color.add(colorOffset.z * _parent.getDaylight());
  color.add(colorOffset.w);
  tex.add(texOffsetX);
  tex.add(texOffsetY);
  quads.add(x + offset.x);
  quads.add(0.5f + y + offset.y);
  quads.add(-0.5f + z + offset.z);
  _quadsBillboard.addAll(quads);
  _texBillboard.addAll(tex);
  _colorBillboard.addAll(color);
}
