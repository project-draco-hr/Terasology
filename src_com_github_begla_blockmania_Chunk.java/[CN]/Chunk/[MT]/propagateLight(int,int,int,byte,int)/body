{
  if (depth >= 4) {
    return;
  }
  int blockPosX=getBlockWorldPosX(x);
  int blockPosY=getBlockWorldPosY(y);
  int blockPosZ=getBlockWorldPosZ(z);
  byte blockType=_parent.getBlock(blockPosX,blockPosY,blockPosZ);
  if (!Block.getBlock(blockType).isBlockTypeTranslucent()) {
    return;
  }
  byte newLightValue=(byte)(lightValue - depth);
  if (newLightValue < 0) {
    return;
  }
  _parent.setSunlight(blockPosX,blockPosY,blockPosZ,newLightValue);
  byte val1=_parent.getLight(blockPosX + 1,blockPosY,blockPosZ);
  if (val1 < newLightValue - 1) {
    _parent.propagateLight(blockPosX + 1,blockPosY,blockPosZ,lightValue,++depth);
  }
  byte val2=_parent.getLight(blockPosX - 1,blockPosY,blockPosZ);
  if (val2 < newLightValue - 1) {
    _parent.propagateLight(blockPosX - 1,blockPosY,blockPosZ,lightValue,++depth);
  }
  byte val3=_parent.getLight(blockPosX,blockPosY,blockPosZ + 1);
  if (val3 < newLightValue - 1) {
    _parent.propagateLight(blockPosX,blockPosY,blockPosZ + 1,lightValue,++depth);
  }
  byte val4=_parent.getLight(blockPosX,blockPosY,blockPosZ - 1);
  if (val4 < newLightValue - 1) {
    _parent.propagateLight(blockPosX,blockPosY,blockPosZ - 1,lightValue,++depth);
  }
  byte val5=_parent.getLight(blockPosX,blockPosY + 1,blockPosZ);
  if (val5 < newLightValue - 1) {
    _parent.propagateLight(blockPosX,blockPosY + 1,blockPosZ,lightValue,++depth);
  }
  byte val6=_parent.getLight(blockPosX,blockPosY - 1,blockPosZ);
  if (val6 < newLightValue - 1) {
    _parent.propagateLight(blockPosX,blockPosY - 1,blockPosZ,lightValue,++depth);
  }
  _lightDirty=true;
}
