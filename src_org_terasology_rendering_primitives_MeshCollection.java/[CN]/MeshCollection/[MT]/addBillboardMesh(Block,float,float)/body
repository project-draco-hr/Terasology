{
  final float sizeHalf=size / 2;
  Tessellator.getInstance().resetParams();
  Tessellator.getInstance().setColor(new Vector4f(light1,light1,light1,1.0f));
  Tessellator.getInstance().setTex(new Vector2f(block.calcTextureOffsetFor(Side.LEFT).x,block.calcTextureOffsetFor(Side.LEFT).y + Block.TEXTURE_OFFSET_WIDTH));
  Tessellator.getInstance().addVertex(new Vector3f(0f,-sizeHalf,-sizeHalf));
  Tessellator.getInstance().setTex(new Vector2f(block.calcTextureOffsetFor(Side.LEFT).x + Block.TEXTURE_OFFSET_WIDTH,block.calcTextureOffsetFor(Side.LEFT).y + Block.TEXTURE_OFFSET_WIDTH));
  Tessellator.getInstance().addVertex(new Vector3f(0f,-sizeHalf,sizeHalf));
  Tessellator.getInstance().setTex(new Vector2f(block.calcTextureOffsetFor(Side.LEFT).x + Block.TEXTURE_OFFSET_WIDTH,block.calcTextureOffsetFor(Side.LEFT).y));
  Tessellator.getInstance().addVertex(new Vector3f(0f,sizeHalf,sizeHalf));
  Tessellator.getInstance().setTex(new Vector2f(block.calcTextureOffsetFor(Side.LEFT).x,block.calcTextureOffsetFor(Side.LEFT).y));
  Tessellator.getInstance().addVertex(new Vector3f(0f,sizeHalf,-sizeHalf));
  Tessellator.getInstance().setTex(new Vector2f(block.calcTextureOffsetFor(Side.BACK).x,block.calcTextureOffsetFor(Side.BACK).y + Block.TEXTURE_OFFSET_WIDTH));
  Tessellator.getInstance().addVertex(new Vector3f(-sizeHalf,-sizeHalf,0f));
  Tessellator.getInstance().setTex(new Vector2f(block.calcTextureOffsetFor(Side.BACK).x + Block.TEXTURE_OFFSET_WIDTH,block.calcTextureOffsetFor(Side.BACK).y + Block.TEXTURE_OFFSET_WIDTH));
  Tessellator.getInstance().addVertex(new Vector3f(sizeHalf,-sizeHalf,0f));
  Tessellator.getInstance().setTex(new Vector2f(block.calcTextureOffsetFor(Side.BACK).x + Block.TEXTURE_OFFSET_WIDTH,block.calcTextureOffsetFor(Side.BACK).y));
  Tessellator.getInstance().addVertex(new Vector3f(sizeHalf,sizeHalf,0f));
  Tessellator.getInstance().setTex(new Vector2f(block.calcTextureOffsetFor(Side.BACK).x,block.calcTextureOffsetFor(Side.BACK).y));
  Tessellator.getInstance().addVertex(new Vector3f(-sizeHalf,sizeHalf,0f));
}
