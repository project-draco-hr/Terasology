{
  if (vertexData.size() == 0 || indexData.size() == 0)   return;
  PerformanceMonitor.startActivity("BatchRenderMesh");
  FloatBuffer vertexBuffer=BufferUtils.createFloatBuffer(vertexData.size());
  vertexBuffer.put(vertexData.toArray());
  vertexBuffer.flip();
  GL15.glBindBuffer(GL15.GL_ARRAY_BUFFER,batchVertexBuffer);
  GL15.glBufferData(GL15.GL_ARRAY_BUFFER,vertexBuffer,GL15.GL_DYNAMIC_DRAW);
  IntBuffer indexBuffer=BufferUtils.createIntBuffer(indexData.size());
  indexBuffer.put(indexData.toArray());
  indexBuffer.flip();
  GL15.glBindBuffer(GL15.GL_ELEMENT_ARRAY_BUFFER,batchIndexBuffer);
  GL15.glBufferData(GL15.GL_ELEMENT_ARRAY_BUFFER,indexBuffer,GL15.GL_DYNAMIC_DRAW);
  glPushMatrix();
  glEnableClientState(GL_VERTEX_ARRAY);
  glEnableClientState(GL_TEXTURE_COORD_ARRAY);
  glEnableClientState(GL_COLOR_ARRAY);
  glEnableClientState(GL_NORMAL_ARRAY);
  glVertexPointer(Mesh.VERTEX_SIZE,GL11.GL_FLOAT,15 * 4,0);
  GL13.glClientActiveTexture(GL13.GL_TEXTURE0);
  glTexCoordPointer(Mesh.TEX_COORD_0_SIZE,GL11.GL_FLOAT,15 * 4,4 * 3);
  GL13.glClientActiveTexture(GL13.GL_TEXTURE1);
  glTexCoordPointer(Mesh.TEX_COORD_1_SIZE,GL11.GL_FLOAT,15 * 4,4 * 5);
  glColorPointer(Mesh.COLOR_SIZE,GL11.GL_FLOAT,15 * 4,4 * 11);
  glNormalPointer(GL11.GL_FLOAT,15 * 4,4 * 8);
  GL12.glDrawRangeElements(GL11.GL_TRIANGLES,0,indexData.size(),indexData.size(),GL_UNSIGNED_INT,0);
  glDisableClientState(GL_NORMAL_ARRAY);
  glDisableClientState(GL_COLOR_ARRAY);
  glDisableClientState(GL_TEXTURE_COORD_ARRAY);
  glDisableClientState(GL_VERTEX_ARRAY);
  GL15.glBindBuffer(GL15.GL_ARRAY_BUFFER,0);
  GL15.glBindBuffer(GL15.GL_ELEMENT_ARRAY_BUFFER,0);
  glPopMatrix();
  PerformanceMonitor.endActivity();
}
