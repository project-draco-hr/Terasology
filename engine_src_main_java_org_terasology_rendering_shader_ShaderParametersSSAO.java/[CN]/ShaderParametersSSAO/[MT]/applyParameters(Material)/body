{
  super.applyParameters(program);
  FBO scene=CoreRegistry.get(DynamicFBOsManager.class).get(DefaultDynamicFBOs.ReadOnlyGBuffer.getName());
  int texId=0;
  if (scene != null) {
    GL13.glActiveTexture(GL13.GL_TEXTURE0);
    scene.bindDepthTexture();
    program.setInt("texDepth",texId++,true);
    GL13.glActiveTexture(GL13.GL_TEXTURE1);
    scene.bindNormalsTexture();
    program.setInt("texNormals",texId++,true);
  }
  Texture ssaoNoiseTexture=updateNoiseTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE2);
  glBindTexture(GL11.GL_TEXTURE_2D,ssaoNoiseTexture.getId());
  program.setInt("texNoise",texId++,true);
  program.setFloat4("ssaoSettings",ssaoStrength,ssaoRad,0.0f,0.0f,true);
  if (CoreRegistry.get(WorldRenderer.class) != null) {
    Camera activeCamera=CoreRegistry.get(WorldRenderer.class).getActiveCamera();
    if (activeCamera != null) {
      program.setMatrix4("invProjMatrix",activeCamera.getInverseProjectionMatrix(),true);
      program.setMatrix4("projMatrix",activeCamera.getProjectionMatrix(),true);
    }
  }
}
