{
  final Class<?> clazz=super.loadClass(name,resolve);
  ClassLoader loadingClassLoader=AccessController.doPrivileged(new PrivilegedAction<ClassLoader>(){
    @Override public ClassLoader run(){
      return clazz.getClassLoader();
    }
  }
);
  if (loadingClassLoader != this) {
    if (securityManager.checkAccess(clazz)) {
      return clazz;
    }
 else {
      logger.error("Denied access to class (not available to modules): {}",name);
      return null;
    }
  }
  return clazz;
}
