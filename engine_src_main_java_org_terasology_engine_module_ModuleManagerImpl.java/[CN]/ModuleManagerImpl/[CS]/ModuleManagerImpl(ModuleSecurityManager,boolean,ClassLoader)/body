{
  this.engineClassLoaders=Arrays.copyOf(engineClassLoaders,engineClassLoaders.length);
  this.moduleSecurityManager=moduleSecurityManager;
  this.cacheReflections=cacheReflections;
  String filename="engine-reflections";
  if (cacheReflections) {
    engineReflections=tryLoadReflectionsFromCacheFile(filename);
  }
  if (engineReflections == null) {
    ConfigurationBuilder builder=new ConfigurationBuilder().setScanners(new TypeAnnotationsScanner(),new SubTypesScanner());
    for (    ClassLoader loader : engineClassLoaders) {
      builder.addClassLoader(loader).addUrls(ClasspathHelper.forPackage("org.terasology",loader));
    }
    engineReflections=new Reflections(builder);
    if (cacheReflections) {
      saveReflectionsToCacheFile(engineReflections,filename);
    }
  }
  String modulePath="/" + TerasologyConstants.ASSETS_SUBDIRECTORY + "/"+ "module.txt";
  try (InputStreamReader reader=new InputStreamReader(getClass().getResourceAsStream(modulePath),Charsets.UTF_8)){
    engineModule=new EngineModule(engineReflections,new Gson().fromJson(reader,ModuleInfo.class));
  }
 catch (  Exception e) {
    throw new RuntimeException("Failed to load engine module info",e);
  }
  refresh();
}
