{
  List<ExtensionModule> activeCodeMods=getActiveExtensionCodeModules();
  final List<URL> urls=Lists.newArrayList();
  for (  ExtensionModule module : activeCodeMods) {
    urls.add(module.getModuleClasspathUrl());
  }
  if (activeModuleClassLoader != null) {
    try {
      activeModuleClassLoader.close();
    }
 catch (    IOException e) {
      logger.error("Failed to close activeModuleClassLoader",e);
    }
  }
  activeModuleClassLoader=AccessController.doPrivileged(new PrivilegedAction<ModuleClassLoader>(){
    @Override public ModuleClassLoader run(){
      return new ModuleClassLoader(urls.toArray(new URL[urls.size()]),getClass().getClassLoader(),moduleSecurityManager);
    }
  }
);
  for (  Module module : activeModules.values()) {
    if (module instanceof ExtensionModule) {
      ((ExtensionModule)module).setActiveClassLoader(activeModuleClassLoader);
    }
  }
  activeModuleReflections=new Reflections(new ConfigurationBuilder().addClassLoader(getClass().getClassLoader()).addClassLoader(activeModuleClassLoader));
  activeModuleReflections.merge(getEngineReflections());
  for (  Module module : activeCodeMods) {
    activeModuleReflections.merge(module.getReflections());
  }
}
