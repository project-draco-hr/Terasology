{
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("org.terasology.world.biomes");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("org.terasology.math.geom");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.lang");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.lang.invoke");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.lang.ref");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.math");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.util");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.util.concurrent");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.util.concurrent.atomic");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.util.concurrent.locks");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.util.function");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.util.regex");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.util.stream");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.awt");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.awt.geom");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("java.awt.image");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("com.google.common.annotations");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("com.google.common.cache");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("com.google.common.collect");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("com.google.common.base");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("com.google.common.math");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("com.google.common.primitives");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("com.google.common.util.concurrent");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.decorator");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.function");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.iterator");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.iterator.hash");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.list");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.list.array");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.list.linked");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.map");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.map.hash");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.map.custom_hash");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.procedure");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.procedure.array");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.queue");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.set");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.set.hash");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.stack");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.stack.array");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("gnu.trove.strategy");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("javax.vecmath");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("com.yourkit.runtime");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("com.bulletphysics.linearmath");
  permissionProviderFactory.getBasePermissionSet().addAPIPackage("sun.reflect");
  permissionProviderFactory.getBasePermissionSet().addAPIClass(com.esotericsoftware.reflectasm.MethodAccess.class);
  permissionProviderFactory.getBasePermissionSet().addAPIClass(IOException.class);
  permissionProviderFactory.getBasePermissionSet().addAPIClass(InvocationTargetException.class);
  permissionProviderFactory.getBasePermissionSet().addAPIClass(LoggerFactory.class);
  permissionProviderFactory.getBasePermissionSet().addAPIClass(Logger.class);
  permissionProviderFactory.getBasePermissionSet().addAPIClass(Reader.class);
  permissionProviderFactory.getBasePermissionSet().addAPIClass(StringReader.class);
  permissionProviderFactory.getBasePermissionSet().addAPIClass(BufferedReader.class);
  permissionProviderFactory.getBasePermissionSet().addAPIClass(java.awt.datatransfer.UnsupportedFlavorException.class);
  APIScanner apiScanner=new APIScanner(permissionProviderFactory);
  for (  Module module : registry) {
    if (module.isOnClasspath()) {
      apiScanner.scan(module);
    }
  }
  permissionProviderFactory.getBasePermissionSet().grantPermission("com.google.gson",ReflectPermission.class);
  permissionProviderFactory.getBasePermissionSet().grantPermission("com.google.gson.internal",ReflectPermission.class);
  permissionProviderFactory.getBasePermissionSet().addAPIClass(java.nio.ByteBuffer.class);
  permissionProviderFactory.getBasePermissionSet().addAPIClass(java.nio.IntBuffer.class);
  Policy.setPolicy(new ModuleSecurityPolicy());
  System.setSecurityManager(new ModuleSecurityManager());
}
