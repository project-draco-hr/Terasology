{
  int xDim=fullRegion.size().x / sampleRate + 1;
  int yDim=fullRegion.size().y / sampleRate + 1;
  int zDim=fullRegion.size().z / sampleRate + 1;
  float[] fullData=new float[xDim * yDim * zDim];
  for (int z=0; z < zDim; z++) {
    for (int y=0; y < yDim; y++) {
      for (int x=0; x < xDim; x++) {
        int actualX=x * sampleRate + fullRegion.minX();
        int actualY=y * sampleRate + fullRegion.minY();
        int actualZ=z * sampleRate + fullRegion.minZ();
        fullData[x + xDim * (y + yDim * z)]=source.noise(zoom.x * actualX,zoom.y * actualY,zoom.z * actualZ);
      }
    }
  }
  return fullData;
}
