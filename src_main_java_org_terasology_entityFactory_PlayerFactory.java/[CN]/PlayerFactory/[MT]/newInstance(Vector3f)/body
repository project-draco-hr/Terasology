{
  EntityRef player=entityManager.create("core:player");
  LocationComponent location=player.getComponent(LocationComponent.class);
  location.setWorldPosition(spawnPosition);
  player.saveComponent(location);
  PlayerComponent playerComponent=player.getComponent(PlayerComponent.class);
  playerComponent.spawnPosition.set(spawnPosition);
  player.saveComponent(playerComponent);
  player.addComponent(new LocalPlayerComponent());
  EntityRef chest=blockFactory.newInstance(BlockManager.getInstance().getBlockFamily("Chest"));
  BlockItemComponent blockItem=chest.getComponent(BlockItemComponent.class);
  EntityRef chestContents=blockItem.placedEntity;
  chestContents.send(new ReceiveItemEvent(blockFactory.newInstance(BlockManager.getInstance().getBlockFamily("Companion"),16)));
  chestContents.send(new ReceiveItemEvent(blockFactory.newInstance(BlockManager.getInstance().getBlockFamily("BrickStair"),16)));
  chestContents.send(new ReceiveItemEvent(blockFactory.newInstance(BlockManager.getInstance().getBlockFamily("Tnt"),16)));
  player.send(new ReceiveItemEvent(entityManager.create("core:pickaxe")));
  player.send(new ReceiveItemEvent(entityManager.create("core:axe")));
  player.send(new ReceiveItemEvent(blockFactory.newInstance(BlockManager.getInstance().getBlockFamily("Torch"),99)));
  player.send(new ReceiveItemEvent(entityManager.create("core:explodeTool")));
  player.send(new ReceiveItemEvent(entityManager.create("core:railgunTool")));
  player.send(new ReceiveItemEvent(entityManager.create("core:miniaturizer")));
  player.send(new ReceiveItemEvent(chest));
  return player;
}
