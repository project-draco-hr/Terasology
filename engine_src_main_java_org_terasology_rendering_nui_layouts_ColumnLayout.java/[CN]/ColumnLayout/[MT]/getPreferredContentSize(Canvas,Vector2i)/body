{
  Vector2i availableSize=new Vector2i(areaHint);
  int numRows=TeraMath.ceilToInt((float)widgetList.size() / columns);
  if (numRows > 0) {
    availableSize.y-=verticalSpacing * (numRows - 1);
  }
  if (columns > 0) {
    availableSize.x-=horizontalSpacing * (columns - 1);
  }
  Iterator<List<UIWidget>> rows=getRowIterator();
  Vector2i size=new Vector2i();
  int[] columnSizes=new int[columns];
  while (rows.hasNext()) {
    List<UIWidget> row=rows.next();
    RowInfo rowInfo=calculateRowSize(row,canvas,availableSize);
    size.y+=rowInfo.height;
    if (rows.hasNext()) {
      size.y+=verticalSpacing;
    }
    for (int i=0; i < rowInfo.widgetSizes.size(); ++i) {
      columnSizes[i]=Math.max(columnSizes[i],rowInfo.widgetSizes.get(i).getX());
    }
  }
  for (  int columnSize : columnSizes) {
    size.x+=columnSize;
  }
  if (!autoSizeColumns) {
    for (int i=0; i < columns; ++i) {
      size.x=Math.max(size.x,TeraMath.floorToInt(columnSizes[i] / columnWidths[i]));
    }
  }
  size.x+=horizontalSpacing * (columns - 1);
  return size;
}
