{
  Vector3f to=new Vector3f(direction);
  to.scale(distance);
  to.add(from);
  short filter=combineGroups(collisionGroups);
  CollisionWorld.ClosestRayResultWithUserDataCallback closest=new CollisionWorld.ClosestRayResultWithUserDataCallback(from,to);
  closest.collisionFilterGroup=CollisionFilterGroups.ALL_FILTER;
  closest.collisionFilterMask=filter;
  discreteDynamicsWorld.rayTest(from,to,closest);
  if (closest.userData instanceof Vector3i) {
    return new HitResult(blockEntityRegistry.getEntityAt((Vector3i)closest.userData),closest.hitPointWorld,closest.hitNormalWorld,(Vector3i)closest.userData);
  }
 else   if (closest.userData instanceof EntityRef) {
    return new HitResult((EntityRef)closest.userData,closest.hitPointWorld,closest.hitNormalWorld);
  }
  return new HitResult();
}
