{
  Map<Character,AxionElementReplacement> replacementMap=Maps.newHashMap();
  SimpleAxionElementReplacement sapling=new SimpleAxionElementReplacement("s");
  sapling.addReplacement(1f,"Tt");
  final FastRandom rnd=new FastRandom();
  SimpleAxionElementReplacement trunkTop=new SimpleAxionElementReplacement("t");
  trunkTop.addReplacement(0.6f,new SimpleAxionElementReplacement.ReplacementGenerator(){
    @Override public String generateReplacement(    String currentAxion){
      int deg=rnd.nextInt(130,147);
      return "+(" + deg + ")[&Mb]Wt";
    }
  }
);
  trunkTop.addReplacement(0.4f,new SimpleAxionElementReplacement.ReplacementGenerator(){
    @Override public String generateReplacement(    String currentAxion){
      if (currentAxion.split("b").length < 2) {
        int deg=rnd.nextInt(130,147);
        return "+(" + deg + ")[&Mb]Wt";
      }
      return "Wt";
    }
  }
);
  SimpleAxionElementReplacement smallBranch=new SimpleAxionElementReplacement("b");
  smallBranch.addReplacement(0.8f,"Bb");
  SimpleAxionElementReplacement trunk=new SimpleAxionElementReplacement("T");
  trunk.addReplacement(0.7f,"TN");
  replacementMap.put('s',sapling);
  replacementMap.put('g',sapling);
  replacementMap.put('t',trunkTop);
  replacementMap.put('T',trunk);
  replacementMap.put('b',smallBranch);
  Block oakSapling=blockManager.getBlock("core:OakSapling");
  Block oakSaplingGenerated=blockManager.getBlock("core:OakSaplingGenerated");
  Block greenLeaf=blockManager.getBlock("core:GreenLeaf");
  Block oakTrunk=blockManager.getBlock("core:OakTrunk");
  Block oakBranch=blockManager.getBlock(new BlockUri("core","OakBranch","0"));
  float trunkAdvance=0.3f;
  float branchAdvance=0.2f;
  Map<Character,AxionElementGeneration> blockMap=Maps.newHashMap();
  blockMap.put('s',new DefaultAxionElementGeneration(oakSapling,trunkAdvance));
  blockMap.put('g',new DefaultAxionElementGeneration(oakSaplingGenerated,trunkAdvance));
  blockMap.put('t',new SurroundAxionElementGeneration(greenLeaf,greenLeaf,trunkAdvance,2f));
  blockMap.put('T',new DefaultAxionElementGeneration(oakTrunk,trunkAdvance));
  blockMap.put('N',new DefaultAxionElementGeneration(oakTrunk,trunkAdvance));
  blockMap.put('W',new SurroundAxionElementGeneration(oakTrunk,greenLeaf,trunkAdvance,2f));
  SurroundAxionElementGeneration smallBranchGeneration=new SurroundAxionElementGeneration(greenLeaf,greenLeaf,branchAdvance,2.6f);
  smallBranchGeneration.setMaxZ(0);
  SurroundAxionElementGeneration largeBranchGeneration=new SurroundAxionElementGeneration(oakBranch,greenLeaf,branchAdvance,1.1f,3.5f);
  largeBranchGeneration.setMaxZ(0);
  blockMap.put('b',smallBranchGeneration);
  blockMap.put('B',largeBranchGeneration);
  blockMap.put('M',new AdvanceAxionElementGeneration(branchAdvance));
  return new AdvancedLSystemTreeDefinition(replacementMap,blockMap,Arrays.asList(oakTrunk,oakBranch,greenLeaf),1.5f);
}
