{
  Map<Character,AxionElementReplacement> replacementMap=Maps.newHashMap();
  SimpleAxionElementReplacement sapling=new SimpleAxionElementReplacement("s");
  sapling.addReplacement(1f,"Tt");
  final FastRandom rnd=new FastRandom();
  SimpleAxionElementReplacement trunkTop=new SimpleAxionElementReplacement("t");
  trunkTop.addReplacement(0.6f,new SimpleAxionElementReplacement.ReplacementGenerator(){
    @Override public String generateReplacement(    String currentAxion){
      int deg=rnd.nextInt(130,147);
      return "W+(" + deg + ")[&Mb]Wt";
    }
  }
);
  trunkTop.addReplacement(0.4f,new SimpleAxionElementReplacement.ReplacementGenerator(){
    @Override public String generateReplacement(    String currentAxion){
      if (currentAxion.split("b").length < 2) {
        int deg=rnd.nextInt(130,147);
        return "W+(" + deg + ")[&Mb]Wt";
      }
      return "Wt";
    }
  }
);
  SimpleAxionElementReplacement smallBranch=new SimpleAxionElementReplacement("b");
  smallBranch.addReplacement(0.8f,"Bb");
  SimpleAxionElementReplacement trunk=new SimpleAxionElementReplacement("T");
  trunk.addReplacement(0.7f,"TN");
  replacementMap.put('s',sapling);
  replacementMap.put('g',sapling);
  replacementMap.put('t',trunkTop);
  replacementMap.put('T',trunk);
  replacementMap.put('b',smallBranch);
  Block oakSapling=blockManager.getBlock("core:OakSapling");
  Block oakSaplingGenerated=blockManager.getBlock("core:OakSaplingGenerated");
  Block greenLeaf=blockManager.getBlock("core:GreenLeaf");
  Block oakTrunk=blockManager.getBlock("core:OakTrunk");
  Block oakBranch=blockManager.getBlock(new BlockUri("core","OakBranch","0"));
  float trunkAdvance=0.2f;
  float branchAdvance=0.25f;
  Map<Character,AxionElementGeneration> blockMap=Maps.newHashMap();
  blockMap.put('s',new DefaultAxionElementGeneration(oakSapling,trunkAdvance));
  blockMap.put('g',new DefaultAxionElementGeneration(oakSaplingGenerated,trunkAdvance));
  blockMap.put('t',new DefaultAxionElementGeneration(greenLeaf,trunkAdvance));
  blockMap.put('T',new DefaultAxionElementGeneration(oakTrunk,trunkAdvance));
  blockMap.put('N',new DefaultAxionElementGeneration(oakTrunk,trunkAdvance));
  blockMap.put('W',new SurroundAxionElementGeneration(oakTrunk,greenLeaf,trunkAdvance,1.4f));
  blockMap.put('b',new SurroundAxionElementGeneration(greenLeaf,greenLeaf,branchAdvance,1.4f));
  blockMap.put('B',new SurroundAxionElementGeneration(oakBranch,greenLeaf,branchAdvance,1.1f,2.4f));
  blockMap.put('M',new AdvanceAxionElementGeneration(branchAdvance));
  return new AdvancedLSystemTreeDefinition(replacementMap,blockMap,Arrays.asList(oakTrunk,oakBranch,greenLeaf),(float)Math.PI / 4);
}
