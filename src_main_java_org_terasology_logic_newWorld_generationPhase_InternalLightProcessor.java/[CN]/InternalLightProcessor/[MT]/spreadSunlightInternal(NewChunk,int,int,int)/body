{
  byte lightValue=chunk.getSunlight(x,y,z);
  if (y > 0 && lightValue < NewChunk.MAX_LIGHT && chunk.getSunlight(x,y - 1,z) < lightValue - 1 && chunk.getBlock(x,y - 1,z).isTranslucent()) {
    chunk.setSunlight(x,y - 1,z,(byte)(lightValue - 1));
    spreadSunlightInternal(chunk,x,y - 1,z);
  }
  if (y < NewChunk.SIZE_Y && lightValue < NewChunk.MAX_LIGHT && chunk.getSunlight(x,y + 1,z) < lightValue - 1 && chunk.getBlock(x,y + 1,z).isTranslucent()) {
    chunk.setSunlight(x,y + 1,z,(byte)(lightValue - 1));
    spreadSunlightInternal(chunk,x,y + 1,z);
  }
  if (lightValue <= 1)   return;
  for (  Side adjDir : Side.horizontalSides()) {
    int adjX=x + adjDir.getVector3i().x;
    int adjZ=z + adjDir.getVector3i().z;
    if (chunk.isInBounds(adjX,y,adjZ)) {
      byte adjLightValue=chunk.getSunlight(adjX,y,adjZ);
      if (adjLightValue < lightValue - 1 && chunk.getBlock(adjX,y,adjZ).isTranslucent()) {
        chunk.setSunlight(adjX,y,adjZ,(byte)(lightValue - 1));
        spreadSunlightInternal(chunk,adjX,y,adjZ);
      }
    }
  }
}
