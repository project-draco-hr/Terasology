{
  Collection<Vector3i> currentWave=Lists.newArrayList();
  Collection<Vector3i> nextWave=Lists.newArrayList();
  nextWave.add(new Vector3i(x,y,z));
  Region3i affectedRegion=Region3i.createFromMinAndSize(new Vector3i(x,y,z),Vector3i.one());
  while (lightLevel > 1 && !nextWave.isEmpty()) {
    Collection<Vector3i> temp=currentWave;
    currentWave=nextWave;
    nextWave=temp;
    nextWave.clear();
    for (    Vector3i pos : currentWave) {
      for (      Side side : Side.values()) {
        Vector3i adjPos=new Vector3i(pos);
        adjPos.add(side.getVector3i());
        if (adjPos.y < 0 || adjPos.y >= Chunk.SIZE_Y) {
          continue;
        }
        Block block=chunkView.getBlock(pos);
        Block adjBlock=chunkView.getBlock(adjPos);
        if (LightingUtil.canSpreadLightOutOf(block,side) && LightingUtil.canSpreadLightInto(adjBlock,side.reverse())) {
          byte adjLight=chunkView.getLight(adjPos);
          if (adjLight < lightLevel - 1) {
            chunkView.setLight(adjPos,(byte)(lightLevel - 1));
            nextWave.add(adjPos);
            affectedRegion=affectedRegion.expandToContain(adjPos);
          }
        }
      }
    }
    lightLevel--;
  }
  return affectedRegion;
}
