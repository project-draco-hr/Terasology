{
  ClientComponent clientComp=entity.getComponent(ClientComponent.class);
  GazeMountPointComponent gazeMountPointComponent=clientComp.character.getComponent(GazeMountPointComponent.class);
  CharacterMovementComponent move=clientComp.character.getComponent(CharacterMovementComponent.class);
  logger.info(move.mode.toString());
  float height=clientComp.character.getComponent(CharacterMovementComponent.class).height;
  float eyeHeight=gazeMountPointComponent.translate.getY();
  if (event.isDown() && move.mode == MovementMode.WALKING) {
    movementDebugCommands.playerHeight(localPlayer.getClientEntity(),height * 0.5f);
    movementDebugCommands.playerEyeHeight(localPlayer.getClientEntity(),eyeHeight * 0.5f);
    move.mode=MovementMode.CROUCHING;
    clientComp.character.saveComponent(move);
    logger.info(move.mode.toString());
  }
 else   if (!event.isDown() && move.mode == MovementMode.CROUCHING) {
    Vector3f pos=entity.getComponent(LocationComponent.class).getWorldPosition();
    CharacterCollider collider=physics.getCharacterCollider(clientComp.character);
    Vector3f to=new Vector3f(pos.x,pos.y + height + VERTICAL_PENETRATION_LEEWAY,pos.z);
    SweepCallback callback=collider.sweep(pos,to,VERTICAL_PENETRATION_LEEWAY,-1f);
    if (callback.hasHit()) {
      logger.info("Cannot stand up here!" + move.mode.toString());
      event.consume();
      return;
    }
    movementDebugCommands.playerHeight(localPlayer.getClientEntity(),height / 0.5f);
    movementDebugCommands.playerEyeHeight(localPlayer.getClientEntity(),eyeHeight / 0.5f);
    move.mode=MovementMode.WALKING;
    clientComp.character.saveComponent(move);
    logger.info(move.mode.toString());
  }
  event.consume();
}
