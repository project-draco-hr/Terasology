{
  LocalPlayer localPlayer=CoreRegistry.get(LocalPlayer.class);
  if (localPlayer == null) {
    return;
  }
  GroovyHelpManager helpMan=new GroovyHelpManager();
  LocalPlayerComponent localPlayerComponent=localPlayer.getEntity().getComponent(LocalPlayerComponent.class);
  if (!isMinionSelected()) {
    helpMan.spawnCube(localPlayerComponent.selectedMinion);
  }
 else {
    SimpleMinionAIComponent minionai=getSelectedMinion().getComponent(SimpleMinionAIComponent.class);
    if (minionai != null) {
      if (helpMan.calcSelectedBlock() != null) {
        Vector3i centerPos=helpMan.calcSelectedBlock().getBlockPosition();
        Vector3f centerPosf=new Vector3f(centerPos.x,centerPos.y + 0.5f,centerPos.z);
        minionai.followingPlayer=false;
switch (getSelectedBehaviour()) {
case Follow:
{
            minionai.movementTarget=centerPosf;
            getSelectedMinion().saveComponent(minionai);
            break;
          }
case Move:
{
          minionai.movementTargets.add(centerPosf);
          getSelectedMinion().saveComponent(minionai);
          break;
        }
case Gather:
{
        minionai.gatherTargets.add(centerPosf);
        getSelectedMinion().saveComponent(minionai);
        break;
      }
case Patrol:
{
      minionai.patrolTargets.add(centerPosf);
      getSelectedMinion().saveComponent(minionai);
      break;
    }
case Test:
{
    minionai.movementTargets.add(centerPosf);
    getSelectedMinion().saveComponent(minionai);
    break;
  }
}
}
}
}
}
