{
  if (this.entityManager != null) {
    this.entityManager.unsubscribe(this);
  }
  this.entityManager=newEntityManager;
  this.entityManager.subscribeForChanges(this);
  this.blockManager=CoreRegistry.get(BlockManager.class);
  this.biomeManager=CoreRegistry.get(BiomeManager.class);
  this.ownershipHelper=new OwnershipHelper(newEntityManager.getComponentLibrary());
  this.storageManager=CoreRegistry.get(StorageManager.class);
  this.entitySystemLibrary=library;
  CoreRegistry.get(ComponentSystemManager.class).register(new NetworkEntitySystem(this),"engine:networkEntitySystem");
  TypeSerializationLibrary typeSerializationLibrary=new TypeSerializationLibrary(library.getSerializationLibrary());
  typeSerializationLibrary.add(EntityRef.class,new NetEntityRefTypeHandler(this,blockEntityRegistry));
  eventSerializer=new EventSerializer(library.getEventLibrary(),typeSerializationLibrary);
  entitySerializer=new NetworkEntitySerializer(newEntityManager,entityManager.getComponentLibrary(),typeSerializationLibrary);
  entitySerializer.setComponentSerializeCheck(new NetComponentSerializeCheck());
  if (mode == NetworkMode.CLIENT) {
    entityManager.setEntityRefStrategy(new NetworkClientRefStrategy(this));
    applySerializationTables();
  }
  if (server != null) {
    server.connectToEntitySystem(newEntityManager,entitySerializer,eventSerializer,blockEntityRegistry);
  }
}
