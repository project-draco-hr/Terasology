{
  if (event.isDown()) {
    int id=event.getKey().getId();
    if (id != Keyboard.KeyId.TAB && tabCompletionEngine != null) {
      tabCompletionEngine.reset();
    }
switch (id) {
case Keyboard.KeyId.UP:
      if (index > 0) {
        index--;
        if (getCommandHistory().size() > index) {
          setText(getCommandHistory().get(index));
        }
        setCursorPosition(getText().length());
      }
    return true;
case Keyboard.KeyId.DOWN:
  if (index < getCommandHistory().size()) {
    index++;
    if (index == getCommandHistory().size()) {
      setText("");
    }
 else {
      setText(getCommandHistory().get(index));
      setCursorPosition(getText().length());
    }
  }
return true;
case Keyboard.KeyId.TAB:
if (tabCompletionEngine != null) {
setText(tabCompletionEngine.complete(getText()));
setCursorPosition(getText().length(),true,false);
return true;
}
break;
case Keyboard.KeyId.ENTER:
boolean consumed=super.onKeyEvent(event);
setText("");
index=getCommandHistory().size();
return consumed;
default :
return super.onKeyEvent(event);
}
}
return false;
}
