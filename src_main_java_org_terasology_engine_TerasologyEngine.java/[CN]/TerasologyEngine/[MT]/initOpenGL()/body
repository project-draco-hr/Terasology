{
  checkOpenGL();
  resizeViewport();
  initOpenGLParams();
  AssetManager.getInstance().setAssetFactory(AssetType.TEXTURE,new AssetFactory<TextureData,Texture>(){
    @Override public Texture buildAsset(    AssetUri uri,    TextureData data){
      return new OpenGLTexture(uri,data);
    }
  }
);
  AssetManager.getInstance().setAssetFactory(AssetType.FONT,new AssetFactory<FontData,Font>(){
    @Override public Font buildAsset(    AssetUri uri,    FontData data){
      return new OpenGLFont(uri,data);
    }
  }
);
  AssetManager.getInstance().setAssetFactory(AssetType.SHADER,new AssetFactory<ShaderData,Shader>(){
    @Override public Shader buildAsset(    AssetUri uri,    ShaderData data){
      return new OpenGLShader(uri,data);
    }
  }
);
  AssetManager.getInstance().setAssetFactory(AssetType.MATERIAL,new AssetFactory<MaterialData,Material>(){
    @Override public Material buildAsset(    AssetUri uri,    MaterialData data){
      return new OpenGLMaterial(uri,data);
    }
  }
);
  AssetManager.getInstance().setAssetFactory(AssetType.MESH,new AssetFactory<MeshData,Mesh>(){
    @Override public Mesh buildAsset(    AssetUri uri,    MeshData data){
      return new OpenGLMesh(uri,data);
    }
  }
);
}
