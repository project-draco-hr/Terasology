{
  ModuleSecurityManager moduleSecurityManager=new ModuleSecurityManager();
  ModuleManager moduleManager=CoreRegistry.putPermanently(ModuleManager.class,new ModuleManagerImpl(moduleSecurityManager));
  moduleSecurityManager.addAPIPackage("java.lang");
  moduleSecurityManager.addAPIClass(IOException.class);
  moduleSecurityManager.addAPIClass(LoggerFactory.class);
  moduleSecurityManager.addAPIClass(Logger.class);
  for (  Class<?> apiClass : moduleManager.getActiveModuleReflections().getTypesAnnotatedWith(API.class)) {
    moduleSecurityManager.addAPIClass(apiClass);
  }
  AssetManager assetManager=CoreRegistry.putPermanently(AssetManager.class,new AssetManager(moduleManager));
  CoreRegistry.putPermanently(ReflectFactory.class,new ReflectionReflectFactory());
  CoreRegistry.putPermanently(CollisionGroupManager.class,new CollisionGroupManager());
  CoreRegistry.putPermanently(WorldGeneratorManager.class,new WorldGeneratorManager());
  CoreRegistry.putPermanently(ComponentSystemManager.class,new ComponentSystemManager());
  CoreRegistry.putPermanently(NetworkSystem.class,new NetworkSystemImpl(time));
  CoreRegistry.putPermanently(Game.class,new Game(time));
  AssetType.registerAssetTypes(assetManager);
  ClasspathSource source=new ClasspathSource(TerasologyConstants.ENGINE_MODULE,getClass().getProtectionDomain().getCodeSource(),TerasologyConstants.ASSETS_SUBDIRECTORY,TerasologyConstants.OVERRIDES_SUBDIRECTORY);
  assetManager.addAssetSource(source);
}
