{
  _gameInstance=gameEngine;
  entityManager=new EntitySystemBuilder().build();
  eventSystem=CoreRegistry.get(EventSystem.class);
  componentSystemManager=new ComponentSystemManager();
  CoreRegistry.put(ComponentSystemManager.class,componentSystemManager);
  cameraTargetSystem=new CameraTargetSystem();
  CoreRegistry.put(CameraTargetSystem.class,cameraTargetSystem);
  componentSystemManager.register(cameraTargetSystem,"engine:CameraTargetSystem");
  inputSystem=new InputSystem();
  CoreRegistry.put(InputSystem.class,inputSystem);
  componentSystemManager.register(inputSystem,"engine:InputSystem");
  LocalPlayerComponent localPlayerComp=new LocalPlayerComponent();
  CoreRegistry.put(LocalPlayerComponent.class,localPlayerComp);
  entityManager.create(localPlayerComp);
  CoreRegistry.put(LocalPlayer.class,new LocalPlayer(EntityRef.NULL));
  _mainMenu=new UIMenuMain();
  _selectWorldMenu=new UIMenuSelectWorld();
  _configMenu=new UIMenuConfig();
  _configMenuVideo=new UIMenuConfigVideo();
  _configMenuAudio=new UIMenuConfigAudio();
  _configMenuControls=new UIMenuConfigControls();
  _configMenuMods=new UIMenuConfigMods();
  GUIManager.getInstance().addWindow(_mainMenu,"menuMain");
  GUIManager.getInstance().addWindow(_selectWorldMenu,"selectWorld");
  GUIManager.getInstance().addWindow(_configMenu,"menuConfig");
  ;
  GUIManager.getInstance().addWindow(_configMenuVideo,"menuConfigVideo");
  GUIManager.getInstance().addWindow(_configMenuAudio,"menuConfigAudio");
  GUIManager.getInstance().addWindow(_configMenuControls,"menuConfigControls");
  GUIManager.getInstance().addWindow(_configMenuMods,"menuConfigMods");
}
