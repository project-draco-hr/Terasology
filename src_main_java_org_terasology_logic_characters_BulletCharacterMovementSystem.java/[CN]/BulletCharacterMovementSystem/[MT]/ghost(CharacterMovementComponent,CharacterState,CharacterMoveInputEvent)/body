{
  Vector3f desiredVelocity=new Vector3f(input.getMovementDirection());
  float lengthSquared=desiredVelocity.lengthSquared();
  if (lengthSquared > 1) {
    desiredVelocity.normalize();
  }
  float maxSpeed=movementComp.maxGhostSpeed;
  if (input.isRunning()) {
    maxSpeed*=movementComp.runFactor;
  }
  desiredVelocity.scale(maxSpeed);
  Vector3f velocityDiff=new Vector3f(desiredVelocity);
  velocityDiff.sub(state.getVelocity());
  velocityDiff.scale(Math.min(GHOST_INERTIA * input.getDeltaMS(),1.0f));
  CharacterState newState=new CharacterState(state);
  newState.getVelocity().add(velocityDiff);
  Vector3f deltaPos=new Vector3f(newState.getVelocity());
  deltaPos.scale(input.getDeltaMS());
  newState.getPosition().add(deltaPos);
  return newState;
}
