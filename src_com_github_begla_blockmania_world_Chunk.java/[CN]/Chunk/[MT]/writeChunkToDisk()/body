{
  if (_fresh) {
    return false;
  }
  if (Game.getInstance().isSandboxed()) {
    return false;
  }
  File dir=new File(_parent.getWorldSavePath());
  if (!dir.exists()) {
    dir.mkdirs();
  }
  ByteBuffer output=BufferUtils.createByteBuffer(_blocks.getSize() + _sunlight.getPackedSize() + _light.getPackedSize()+ 1);
  File f=new File(String.format("%s/%d.bc",getParent().getWorldSavePath(),getChunkId()));
  byte flags=0x0;
  if (_lightDirty) {
    flags=Helper.setFlag(flags,(short)0);
  }
  output.put(flags);
  for (int i=0; i < _blocks.getSize(); i++)   output.put(_blocks.getRawByte(i));
  for (int i=0; i < _sunlight.getPackedSize(); i++)   output.put(_sunlight.getRawByte(i));
  for (int i=0; i < _light.getPackedSize(); i++)   output.put(_light.getRawByte(i));
  output.rewind();
  try {
    FileOutputStream oS=new FileOutputStream(f);
    FileChannel c=oS.getChannel();
    c.write(output);
    Game.getInstance().getLogger().log(Level.FINE,"Wrote chunk {0} to disk.",this);
    oS.close();
  }
 catch (  FileNotFoundException ex) {
    Game.getInstance().getLogger().log(Level.SEVERE,null,ex);
    return false;
  }
catch (  IOException ex) {
    Game.getInstance().getLogger().log(Level.SEVERE,null,ex);
    return false;
  }
  return true;
}
