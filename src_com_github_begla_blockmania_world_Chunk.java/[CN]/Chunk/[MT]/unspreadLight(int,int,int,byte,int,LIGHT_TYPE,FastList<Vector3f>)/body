{
  if (x < 0 || z < 0 || y < 0) {
    return;
  }
  int blockPosX=getBlockWorldPosX(x);
  int blockPosY=getBlockWorldPosY(y);
  int blockPosZ=getBlockWorldPosZ(z);
  getParent().setLight(blockPosX,blockPosY,blockPosZ,(byte)0x0,type);
  for (int i=0; i < 6; i++) {
    byte neighborValue=getParent().getLight(blockPosX + (int)_directions[i].x,blockPosY + (int)_directions[i].y,blockPosZ + (int)_directions[i].z,type);
    byte neighborType=getParent().getBlock(blockPosX + (int)_directions[i].x,blockPosY + (int)_directions[i].y,blockPosZ + (int)_directions[i].z);
    if (neighborValue < lightValue && neighborValue > 0 && Block.getBlockForType(neighborType).isBlockTypeTranslucent()) {
      getParent().unspreadLight(blockPosX + (int)_directions[i].x,blockPosY + (int)_directions[i].y,blockPosZ + (int)_directions[i].z,(byte)(lightValue - 1),depth + 1,type,brightSpots);
    }
 else     if (neighborValue >= lightValue) {
      brightSpots.add(new Vector3f(blockPosX + (int)_directions[i].x,blockPosY + (int)_directions[i].y,blockPosZ + (int)_directions[i].z));
    }
  }
}
