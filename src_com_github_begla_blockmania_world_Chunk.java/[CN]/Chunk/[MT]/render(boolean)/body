{
  if (Configuration.getSettingBoolean("CHUNK_OUTLINES")) {
    glLineWidth(2.0f);
    glColor3f(255.0f,255.0f,255.0f);
    glPushMatrix();
    glTranslatef(_position.x * (int)Configuration.CHUNK_DIMENSIONS.x,_position.y * (int)Configuration.CHUNK_DIMENSIONS.y,_position.z * (int)Configuration.CHUNK_DIMENSIONS.z);
    glBegin(GL_LINE_LOOP);
    glVertex3f(0.0f,0.0f,0.0f);
    glVertex3f(Configuration.CHUNK_DIMENSIONS.x,0.0f,0.0f);
    glVertex3f(Configuration.CHUNK_DIMENSIONS.x,Configuration.CHUNK_DIMENSIONS.y,0.0f);
    glVertex3f(0.0f,Configuration.CHUNK_DIMENSIONS.y,0.0f);
    glEnd();
    glBegin(GL_LINE_LOOP);
    glVertex3f(0.0f,0.0f,0.0f);
    glVertex3f(0.0f,0.0f,Configuration.CHUNK_DIMENSIONS.z);
    glVertex3f(0.0f,Configuration.CHUNK_DIMENSIONS.y,Configuration.CHUNK_DIMENSIONS.z);
    glVertex3f(0.0f,Configuration.CHUNK_DIMENSIONS.y,0.0f);
    glVertex3f(0.0f,0.0f,0.0f);
    glEnd();
    glBegin(GL_LINE_LOOP);
    glVertex3f(0.0f,0.0f,Configuration.CHUNK_DIMENSIONS.z);
    glVertex3f(Configuration.CHUNK_DIMENSIONS.x,0.0f,Configuration.CHUNK_DIMENSIONS.z);
    glVertex3f(Configuration.CHUNK_DIMENSIONS.x,Configuration.CHUNK_DIMENSIONS.y,Configuration.CHUNK_DIMENSIONS.z);
    glVertex3f(0.0f,Configuration.CHUNK_DIMENSIONS.y,Configuration.CHUNK_DIMENSIONS.z);
    glVertex3f(0.0f,0.0f,Configuration.CHUNK_DIMENSIONS.z);
    glEnd();
    glBegin(GL_LINE_LOOP);
    glVertex3f(Configuration.CHUNK_DIMENSIONS.x,0.0f,0.0f);
    glVertex3f(Configuration.CHUNK_DIMENSIONS.x,0.0f,Configuration.CHUNK_DIMENSIONS.z);
    glVertex3f(Configuration.CHUNK_DIMENSIONS.x,Configuration.CHUNK_DIMENSIONS.y,Configuration.CHUNK_DIMENSIONS.z);
    glVertex3f(Configuration.CHUNK_DIMENSIONS.x,Configuration.CHUNK_DIMENSIONS.y,0.0f);
    glVertex3f(Configuration.CHUNK_DIMENSIONS.x,0.0f,0.0f);
    glEnd();
    glPopMatrix();
  }
  ShaderManager.getInstance().enableShader("chunk");
  _textureMap.bind();
  int daylight=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("chunk"),"daylight");
  GL20.glUniform1f(daylight,_parent.getDaylight());
  if (!translucent) {
    glCallList(_displayListOpaque);
  }
 else {
    glEnable(GL_BLEND);
    glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
    glEnable(GL_ALPHA_TEST);
    glAlphaFunc(GL_GREATER,0.1f);
    glCallList(_displayListTranslucent);
    glDisable(GL_CULL_FACE);
    glCallList(_displayListBillboard);
    glEnable(GL_CULL_FACE);
    glDisable(GL_BLEND);
    glDisable(GL_ALPHA_TEST);
  }
  ShaderManager.getInstance().enableShader(null);
}
