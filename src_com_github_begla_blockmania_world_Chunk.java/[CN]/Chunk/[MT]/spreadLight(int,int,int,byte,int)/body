{
  if (depth > lightValue) {
    return;
  }
  int blockPosX=getBlockWorldPosX(x);
  int blockPosY=getBlockWorldPosY(y);
  int blockPosZ=getBlockWorldPosZ(z);
  byte val1=_parent.getLight(blockPosX + 1,blockPosY,blockPosZ);
  byte type1=_parent.getBlock(blockPosX + 1,blockPosY,blockPosZ);
  byte val2=_parent.getLight(blockPosX - 1,blockPosY,blockPosZ);
  byte type2=_parent.getBlock(blockPosX - 1,blockPosY,blockPosZ);
  byte val3=_parent.getLight(blockPosX,blockPosY,blockPosZ + 1);
  byte type3=_parent.getBlock(blockPosX,blockPosY,blockPosZ + 1);
  byte val4=_parent.getLight(blockPosX,blockPosY,blockPosZ - 1);
  byte type4=_parent.getBlock(blockPosX,blockPosY,blockPosZ - 1);
  byte val5=_parent.getLight(blockPosX,blockPosY + 1,blockPosZ);
  byte type5=_parent.getBlock(blockPosX,blockPosY + 1,blockPosZ);
  byte val6=_parent.getLight(blockPosX,blockPosY - 1,blockPosZ);
  byte type6=_parent.getBlock(blockPosX,blockPosY - 1,blockPosZ);
  byte newLightValue=0;
  newLightValue=(byte)(lightValue - depth);
  _parent.setSunlight(blockPosX,blockPosY,blockPosZ,newLightValue);
  if (lightValue <= 0) {
    return;
  }
  if (val1 < newLightValue - 1 && Block.getBlockForType(type1).isBlockTypeTranslucent()) {
    _parent.spreadLight(blockPosX + 1,blockPosY,blockPosZ,lightValue,depth + 1);
  }
  if (val2 < newLightValue - 1 && Block.getBlockForType(type2).isBlockTypeTranslucent()) {
    _parent.spreadLight(blockPosX - 1,blockPosY,blockPosZ,lightValue,depth + 1);
  }
  if (val3 < newLightValue - 1 && Block.getBlockForType(type3).isBlockTypeTranslucent()) {
    _parent.spreadLight(blockPosX,blockPosY,blockPosZ + 1,lightValue,depth + 1);
  }
  if (val4 < newLightValue - 1 && Block.getBlockForType(type4).isBlockTypeTranslucent()) {
    _parent.spreadLight(blockPosX,blockPosY,blockPosZ - 1,lightValue,depth + 1);
  }
  if (val5 < newLightValue - 1 && Block.getBlockForType(type5).isBlockTypeTranslucent()) {
    _parent.spreadLight(blockPosX,blockPosY + 1,blockPosZ,lightValue,depth + 1);
  }
  if (val6 < newLightValue - 1 && Block.getBlockForType(type6).isBlockTypeTranslucent()) {
    _parent.spreadLight(blockPosX,blockPosY - 1,blockPosZ,lightValue,depth + 1);
  }
}
