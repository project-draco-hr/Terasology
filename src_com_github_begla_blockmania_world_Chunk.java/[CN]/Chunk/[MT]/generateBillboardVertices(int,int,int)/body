{
  byte block=_blocks[x][y][z];
  RENDER_TYPE renderType=RENDER_TYPE.BILLBOARD;
  if (Block.getBlockForType(block).isBlockInvisible() || !Block.getBlockForType(block).isBlockBillboard()) {
    return;
  }
  float offsetX=_position.x * Configuration.CHUNK_DIMENSIONS.x;
  float offsetY=_position.y * Configuration.CHUNK_DIMENSIONS.y;
  float offsetZ=_position.z * Configuration.CHUNK_DIMENSIONS.z;
  TFloatArrayList quads=new TFloatArrayList();
  TFloatArrayList tex=new TFloatArrayList();
  TFloatArrayList color=new TFloatArrayList();
  Vector4f colorOffset=Block.getBlockForType(block).getColorOffsetFor(Block.SIDE.FRONT);
  float texOffsetX=Block.getBlockForType(block).getTextureOffsetFor(Block.SIDE.FRONT).x;
  float texOffsetY=Block.getBlockForType(block).getTextureOffsetFor(Block.SIDE.FRONT).y;
  color.add(colorOffset.x);
  color.add(colorOffset.y);
  color.add(colorOffset.z);
  color.add(colorOffset.w);
  addLightTexCoordFor(x,y,z,0,0,0,renderType);
  tex.add(texOffsetX);
  tex.add(texOffsetY + 0.0624f);
  quads.add(-0.5f + x + offsetX);
  quads.add(-0.5f + y + offsetY);
  quads.add(z + offsetZ);
  color.add(colorOffset.x);
  color.add(colorOffset.y);
  color.add(colorOffset.z);
  color.add(colorOffset.w);
  addLightTexCoordFor(x,y,z,0,0,0,renderType);
  tex.add(texOffsetX + 0.0624f);
  tex.add(texOffsetY + 0.0624f);
  quads.add(0.5f + x + offsetX);
  quads.add(-0.5f + y + offsetY);
  quads.add(z + offsetZ);
  color.add(colorOffset.x);
  color.add(colorOffset.y);
  color.add(colorOffset.z);
  color.add(colorOffset.w);
  addLightTexCoordFor(x,y,z,0,0,0,renderType);
  tex.add(texOffsetX + 0.0624f);
  tex.add(texOffsetY);
  quads.add(0.5f + x + offsetX);
  quads.add(0.5f + y + offsetY);
  quads.add(z + offsetZ);
  color.add(colorOffset.x);
  color.add(colorOffset.y);
  color.add(colorOffset.z);
  color.add(colorOffset.w);
  addLightTexCoordFor(x,y,z,0,0,0,renderType);
  tex.add(texOffsetX);
  tex.add(texOffsetY);
  quads.add(-0.5f + x + offsetX);
  quads.add(0.5f + y + offsetY);
  quads.add(z + offsetZ);
  colorOffset=Block.getBlockForType(block).getColorOffsetFor(Block.SIDE.BACK);
  texOffsetX=Block.getBlockForType(block).getTextureOffsetFor(Block.SIDE.BACK).x;
  texOffsetY=Block.getBlockForType(block).getTextureOffsetFor(Block.SIDE.BACK).y;
  color.add(colorOffset.x);
  color.add(colorOffset.y);
  color.add(colorOffset.z);
  color.add(colorOffset.w);
  addLightTexCoordFor(x,y,z,0,0,0,renderType);
  tex.add(texOffsetX);
  tex.add(texOffsetY + 0.0624f);
  quads.add(x + offsetX);
  quads.add(-0.5f + y + offsetY);
  quads.add(-0.5f + z + offsetZ);
  color.add(colorOffset.x);
  color.add(colorOffset.y);
  color.add(colorOffset.z);
  color.add(colorOffset.w);
  addLightTexCoordFor(x,y,z,0,0,0,renderType);
  tex.add(texOffsetX + 0.0624f);
  tex.add(texOffsetY + 0.0624f);
  quads.add(x + offsetX);
  quads.add(-0.5f + y + offsetY);
  quads.add(0.5f + z + offsetZ);
  color.add(colorOffset.x);
  color.add(colorOffset.y);
  color.add(colorOffset.z);
  color.add(colorOffset.w);
  addLightTexCoordFor(x,y,z,0,0,0,renderType);
  tex.add(texOffsetX + 0.0624f);
  tex.add(texOffsetY);
  quads.add(x + offsetX);
  quads.add(0.5f + y + offsetY);
  quads.add(0.5f + z + offsetZ);
  color.add(colorOffset.x);
  color.add(colorOffset.y);
  color.add(colorOffset.z);
  color.add(colorOffset.w);
  addLightTexCoordFor(x,y,z,0,0,0,renderType);
  tex.add(texOffsetX);
  tex.add(texOffsetY);
  quads.add(x + offsetX);
  quads.add(0.5f + y + offsetY);
  quads.add(-0.5f + z + offsetZ);
  _quadsBillboard.addAll(quads);
  _texBillboard.addAll(tex);
  _colorBillboard.addAll(color);
}
