{
  super(uri,simpleClass,factory,copyStrategies,Predicates.<Field>alwaysTrue());
  if (simpleClass.getAnnotation(ServerEvent.class) != null) {
    networkEventType=NetworkEventType.SERVER;
    lagCompensated=simpleClass.getAnnotation(ServerEvent.class).lagCompensate();
  }
 else   if (simpleClass.getAnnotation(OwnerEvent.class) != null) {
    networkEventType=NetworkEventType.OWNER;
  }
 else   if (simpleClass.getAnnotation(BroadcastEvent.class) != null) {
    networkEventType=NetworkEventType.BROADCAST;
    skipInstigator=simpleClass.getAnnotation(BroadcastEvent.class).skipInstigator();
  }
  if (networkEventType != NetworkEventType.NONE && !isConstructable() && !Modifier.isAbstract(simpleClass.getModifiers())) {
    logger.error("Event '{}' is a network event but lacks a default constructor - will not be replicated",this);
  }
}
