{
  ItemComponent sourceItem=item.getComponent(ItemComponent.class);
  ItemComponent targetItem;
  if (!ownerInventory.itemSlots.get(slot).exists()) {
    sourceItem.container=ownerEntity;
    ownerInventory.itemSlots.set(slot,item);
    sendToMovementSlot(EntityRef.NULL,(byte)-1);
    setMovementIconVisibility(false);
  }
 else {
    targetItem=ownerInventory.itemSlots.get(slot).getComponent(ItemComponent.class);
    if (targetItem.stackId.equals(sourceItem.stackId) && !targetItem.stackId.isEmpty() && !sourceItem.stackId.isEmpty()) {
      int spaceLeft=InventorySystem.MAX_STACK - targetItem.stackCount;
      if (spaceLeft < sourceItem.stackCount) {
        targetItem.stackCount=InventorySystem.MAX_STACK;
        sourceItem.stackCount-=spaceLeft;
      }
 else {
        targetItem.stackCount+=sourceItem.stackCount;
        sendToMovementSlot(EntityRef.NULL,(byte)-1);
        setMovementIconVisibility(false);
      }
    }
 else {
      sendToMovementSlot(itemEntity,(byte)-1);
      sourceItem.container=ownerEntity;
      ownerInventory.itemSlots.set(slot,item);
      setMovementIconVisibility(true);
    }
  }
  ownerEntity.saveComponent(ownerInventory);
}
