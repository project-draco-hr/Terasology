{
  PostProcessingRenderer.FBO scene=PostProcessingRenderer.getInstance().getFBO("scene");
  GL13.glActiveTexture(GL13.GL_TEXTURE1);
  PostProcessingRenderer.getInstance().getFBO("sceneBloom2").bindTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE2);
  PostProcessingRenderer.getInstance().getFBO("sceneBlur2").bindTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE3);
  glBindTexture(GL11.GL_TEXTURE_2D,texture.getId());
  GL13.glActiveTexture(GL13.GL_TEXTURE4);
  scene.bindDepthTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE0);
  PostProcessingRenderer.getInstance().getFBO("sceneTonemapped").bindTexture();
  program.setInt("texScene",0);
  program.setInt("texBloom",1);
  program.setInt("texBlur",2);
  program.setInt("texVignette",3);
  program.setInt("texDepth",4);
  program.setFloat("viewingDistance",Config.getInstance().getActiveViewingDistance() * 8.0f);
  float fogIntensity=0.0f;
  float daylight=(float)CoreRegistry.get(WorldRenderer.class).getDaylight();
  if (daylight < 1.0 && daylight > 0.25) {
    float daylightFactor=(1.0f - daylight) / 0.75f;
    fogIntensity=0.5f * daylightFactor;
  }
 else   if (daylight <= 0.25f) {
    float daylightFactor=(0.25f - daylight) / 0.25f;
    fogIntensity=TeraMath.lerpf(0.5f,0.05f,daylightFactor);
  }
  WorldRenderer renderer=CoreRegistry.get(WorldRenderer.class);
  fogIntensity=fogIntensity + (float)TeraMath.clamp(renderer.getWorldProvider().getPerlinGenerator().noise(renderer.getWorldProvider().getTime() * 4.0,0.038291,0.874691) * 15.0 * daylight + 0.1 * daylight,0.0,15.0) + 0.05f;
  program.setFloat("fogIntensity",fogIntensity);
  if (CoreRegistry.get(LocalPlayer.class).isValid()) {
    Vector3d cameraPos=CoreRegistry.get(WorldRenderer.class).getActiveCamera().getPosition();
    byte blockId=CoreRegistry.get(IWorldProvider.class).getBlockAtPosition(cameraPos);
    Block block=BlockManager.getInstance().getBlock(blockId);
    program.setInt("swimming",block.isLiquid() ? 1 : 0);
  }
}
