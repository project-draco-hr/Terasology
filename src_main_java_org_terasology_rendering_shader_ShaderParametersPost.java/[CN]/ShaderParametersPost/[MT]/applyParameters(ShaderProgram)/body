{
  PostProcessingRenderer.FBO scene=PostProcessingRenderer.getInstance().getFBO("scene");
  GL13.glActiveTexture(GL13.GL_TEXTURE1);
  PostProcessingRenderer.getInstance().getFBO("sceneBloom1").bindTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE2);
  PostProcessingRenderer.getInstance().getFBO("sceneBlur1").bindTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE3);
  glBindTexture(GL11.GL_TEXTURE_2D,texture.getId());
  GL13.glActiveTexture(GL13.GL_TEXTURE4);
  scene.bindDepthTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE0);
  PostProcessingRenderer.getInstance().getFBO("sceneTonemapped").bindTexture();
  program.setInt("texScene",0);
  program.setInt("texBloom",1);
  program.setInt("texBlur",2);
  program.setInt("texVignette",3);
  program.setInt("texDepth",4);
  program.setFloat("viewingDistance",Config.getInstance().getActiveViewingDistance() * 8.0f);
  float fogLinearIntensity=0.01f;
  float daylight=(float)CoreRegistry.get(WorldRenderer.class).getDaylight();
  if (daylight < 1.0 && daylight > 0.25) {
    float daylightFactor=(1.0f - daylight) / 0.75f;
    fogLinearIntensity+=0.1f * daylightFactor;
  }
 else   if (daylight <= 0.25f) {
    float daylightFactor=(0.25f - daylight) / 0.25f;
    fogLinearIntensity+=TeraMath.lerpf(0.1f,0.0f,daylightFactor);
  }
  WorldRenderer renderer=CoreRegistry.get(WorldRenderer.class);
  float fogIntensity=renderer.getWorldProvider().getBiomeProvider().getFog(renderer.getWorldProvider().getTimeInDays()) * daylight;
  program.setFloat("fogIntensity",fogIntensity);
  program.setFloat("fogLinearIntensity",fogLinearIntensity);
  if (CoreRegistry.get(LocalPlayer.class).isValid()) {
    Vector3d cameraPos=CoreRegistry.get(WorldRenderer.class).getActiveCamera().getPosition();
    Block block=CoreRegistry.get(WorldProvider.class).getBlock(new Vector3f(cameraPos));
    program.setInt("swimming",block.isLiquid() ? 1 : 0);
  }
}
