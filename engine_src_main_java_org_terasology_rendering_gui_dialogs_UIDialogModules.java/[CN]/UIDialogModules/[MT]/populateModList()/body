{
  List<String> modules=Lists.newArrayList(moduleManager.getModuleIds());
  Collections.sort(modules,new Comparator<String>(){
    @Override public int compare(    String o1,    String o2){
      Module mod1=moduleManager.getLatestModuleVersion(o1);
      Module mod2=moduleManager.getLatestModuleVersion(o2);
      return mod1.getModuleInfo().getDisplayName().compareTo(mod2.getModuleInfo().getDisplayName());
    }
  }
);
  for (  String moduleId : modules) {
    if (!moduleId.equals(TerasologyConstants.ENGINE_MODULE)) {
      Module module=moduleManager.getLatestModuleVersion(moduleId);
      UIListItem item=new UIListItem(module.getModuleInfo().getDisplayName(),module);
      item.setPadding(new Vector4f(2f,5f,2f,5f));
      if (selection.contains(module.getId())) {
        item.setTextColor(ACTIVE_TEXT_COLOR);
        item.setTextSelectionColor(ACTIVE_SELECTED_TEXT_COLOR);
      }
 else       if (selection.add(module.getId()).isValid()) {
        item.setTextColor(INACTIVE_TEXT_COLOR);
        item.setTextSelectionColor(INACTIVE_SELECTED_TEXT_COLOR);
      }
 else {
        item.setTextColor(INVALID_TEXT_COLOR);
        item.setTextSelectionColor(INVALID_SELECTED_TEXT_COLOR);
      }
      modList.addItem(item);
    }
  }
  modList.addSelectionListener(new SelectionListener(){
    @Override public void changed(    UIDisplayElement element){
      Module module=(Module)modList.getSelection().getValue();
      detailPanel.setVisible(true);
      nameLabel.setText(module.getModuleInfo().getDisplayName());
      versionLabel.setText(module.getVersion().toString());
      ModuleSelection tryAddModule=selection.add(module);
      if (!tryAddModule.isValid()) {
        errorLabel.setText(tryAddModule.getValidationMessages().get(0));
      }
 else {
        errorLabel.setText("");
      }
      descriptionLabel.setText(module.getModuleInfo().getDescription());
      boolean active=selection.contains(module.getId());
      if (tryAddModule.isValid()) {
        if (active) {
          toggleButton.getLabel().setText(DEACTIVATE_TEXT);
        }
 else {
          toggleButton.getLabel().setText(ACTIVATE_TEXT);
        }
      }
 else {
        toggleButton.setVisible(false);
      }
    }
  }
);
  modList.addDoubleClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      toggleSelectedModuleActivation();
    }
  }
);
  toggleButton.addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      toggleSelectedModuleActivation();
    }
  }
);
}
