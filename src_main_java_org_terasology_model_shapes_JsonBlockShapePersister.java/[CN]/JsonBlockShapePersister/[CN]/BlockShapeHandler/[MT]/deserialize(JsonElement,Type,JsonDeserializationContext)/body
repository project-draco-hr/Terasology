{
  BlockShape shape=new BlockShape(currentShapeName);
  JsonObject shapeObj=json.getAsJsonObject();
  if (shapeObj.has("center")) {
    shape.setCenterMesh((BlockMeshPart)context.deserialize(shapeObj.get("center"),BlockMeshPart.class));
  }
  for (  Side side : Side.values()) {
    if (shapeObj.has(side.toString().toLowerCase(Locale.ENGLISH))) {
      JsonObject sideMeshObj=shapeObj.getAsJsonObject(side.toString().toLowerCase(Locale.ENGLISH));
      shape.setSideMesh(side,(BlockMeshPart)context.deserialize(sideMeshObj,BlockMeshPart.class));
      if (sideMeshObj.has("fullSide")) {
        shape.setBlockingSide(side,sideMeshObj.get("fullSide").getAsBoolean());
      }
    }
  }
  if (shapeObj.has("collision") && shapeObj.get("collision").isJsonObject()) {
    JsonObject collisionInfo=shapeObj.get("collision").getAsJsonObject();
    processCollision(context,shape,collisionInfo);
  }
 else {
    shape.setCollisionShape(CUBE_SHAPE);
    shape.setCollisionSymmetric(true);
  }
  return shape;
}
