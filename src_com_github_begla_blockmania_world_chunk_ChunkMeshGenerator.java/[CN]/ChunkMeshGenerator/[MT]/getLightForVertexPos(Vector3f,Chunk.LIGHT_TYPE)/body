{
  double result=0.0;
  double[] lights=new double[8];
  lights[0]=_chunk.getParent().getLight((int)(vertexPos.x + 0.5f),(int)(vertexPos.y + 0.5f),(int)(vertexPos.z + 0.5f),lightType) / 15f;
  lights[1]=_chunk.getParent().getLight((int)(vertexPos.x + 0.5f),(int)(vertexPos.y + 0.5f),(int)(vertexPos.z - 0.5f),lightType) / 15f;
  lights[2]=_chunk.getParent().getLight((int)(vertexPos.x - 0.5f),(int)(vertexPos.y + 0.5f),(int)(vertexPos.z - 0.5f),lightType) / 15f;
  lights[3]=_chunk.getParent().getLight((int)(vertexPos.x - 0.5f),(int)(vertexPos.y + 0.5f),(int)(vertexPos.z + 0.5f),lightType) / 15f;
  lights[4]=_chunk.getParent().getLight((int)(vertexPos.x + 0.5f),(int)(vertexPos.y - 0.5f),(int)(vertexPos.z + 0.5f),lightType) / 15f;
  lights[5]=_chunk.getParent().getLight((int)(vertexPos.x + 0.5f),(int)(vertexPos.y - 0.5f),(int)(vertexPos.z - 0.5f),lightType) / 15f;
  lights[6]=_chunk.getParent().getLight((int)(vertexPos.x - 0.5f),(int)(vertexPos.y - 0.5f),(int)(vertexPos.z - 0.5f),lightType) / 15f;
  lights[7]=_chunk.getParent().getLight((int)(vertexPos.x - 0.5f),(int)(vertexPos.y - 0.5f),(int)(vertexPos.z + 0.5f),lightType) / 15f;
  int counter=0;
  for (int i=0; i < 8; i++) {
    if (lights[i] > 0) {
      result+=lights[i];
      counter++;
    }
  }
  if (counter == 0)   return 0;
  return result / counter;
}
