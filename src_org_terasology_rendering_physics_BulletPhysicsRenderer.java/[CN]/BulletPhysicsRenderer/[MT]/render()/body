{
  _discreteDynamicsWorld.stepSimulation(1.0f / 60f,7);
  FloatBuffer mBuffer=BufferUtils.createFloatBuffer(16);
  float[] mFloat=new float[16];
  GL11.glPushMatrix();
  Player player=Terasology.getInstance().getActiveWorldRenderer().getPlayer();
  GL11.glTranslated(-player.getPosition().x,-player.getPosition().y,-player.getPosition().z);
  for (  BlockRigidBody b : _blocks) {
    Transform t=new Transform();
    b.getMotionState().getWorldTransform(t);
    t.getOpenGLMatrix(mFloat);
    mBuffer.put(mFloat);
    mBuffer.flip();
    GL11.glPushMatrix();
    GL11.glMultMatrix(mBuffer);
    if (b.getCollisionShape() == _blockShapeHalf)     GL11.glScalef(0.5f,0.5f,0.5f);
 else     if (b.getCollisionShape() == _blockShapeQuarter)     GL11.glScalef(0.25f,0.25f,0.25f);
    BlockManager.getInstance().getBlock(b.getType()).renderWithLightValue(Terasology.getInstance().getActiveWorldRenderer().getRenderingLightValueAt(new Vector3d(t.origin)));
    GL11.glPopMatrix();
  }
  GL11.glPopMatrix();
}
