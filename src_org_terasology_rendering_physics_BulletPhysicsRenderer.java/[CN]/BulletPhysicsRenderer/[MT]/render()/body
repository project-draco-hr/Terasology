{
  _discreteDynamicsWorld.stepSimulation(Terasology.getInstance().getDelta() / 1000f,7);
  TextureManager.getInstance().bindTexture("terrain");
  ShaderManager.getInstance().enableShader("block");
  ShaderParameters params=ShaderManager.getInstance().getShaderParameters("block");
  Player player=Terasology.getInstance().getActiveWorldRenderer().getPlayer();
  FloatBuffer mBuffer=BufferUtils.createFloatBuffer(16);
  float[] mFloat=new float[16];
  GL11.glPushMatrix();
  GL11.glTranslated(-player.getPosition().x,-player.getPosition().y,-player.getPosition().z);
  for (  BlockRigidBody b : _blocks) {
    Transform t=new Transform();
    b.getMotionState().getWorldTransform(t);
    t.getOpenGLMatrix(mFloat);
    mBuffer.put(mFloat);
    mBuffer.flip();
    GL11.glPushMatrix();
    GL11.glMultMatrix(mBuffer);
    GL11.glScalef(0.5f,0.5f,0.5f);
    float lightValue=Terasology.getInstance().getActiveWorldRenderer().getRenderingLightValueAt(new Vector3d(t.origin));
    params.setFloat("light",lightValue);
    BlockManager.getInstance().getBlock(b.getType()).render();
    GL11.glPopMatrix();
  }
  GL11.glPopMatrix();
  ShaderManager.getInstance().enableShader(null);
}
