{
  Player player=_parent.getPlayer();
  FloatBuffer mBuffer=BufferUtils.createFloatBuffer(16);
  float[] mFloat=new float[16];
  GL11.glPushMatrix();
  Vector3d cameraPosition=Terasology.getInstance().getActiveCamera().getPosition();
  GL11.glTranslated(-cameraPosition.x,-cameraPosition.y,-cameraPosition.z);
  List<CollisionObject> collisionObjects=_discreteDynamicsWorld.getCollisionObjectArray();
  for (  CollisionObject co : collisionObjects) {
    if (co.getClass().equals(BlockRigidBody.class)) {
      BlockRigidBody br=(BlockRigidBody)co;
      Block block=BlockManager.getInstance().getBlock(br.getType());
      Transform t=new Transform();
      br.getMotionState().getWorldTransform(t);
      t.getOpenGLMatrix(mFloat);
      mBuffer.put(mFloat);
      mBuffer.flip();
      GL11.glPushMatrix();
      GL11.glMultMatrix(mBuffer);
      if (br.getCollisionShape() == _blockShapeHalf)       GL11.glScalef(0.5f,0.5f,0.5f);
 else       if (br.getCollisionShape() == _blockShapeQuarter)       GL11.glScalef(0.25f,0.25f,0.25f);
      block.renderWithLightValue(Terasology.getInstance().getActiveWorldRenderer().getRenderingLightValueAt(new Vector3d(t.origin)));
      GL11.glPopMatrix();
    }
  }
  GL11.glPopMatrix();
}
