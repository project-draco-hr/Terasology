{
  ItemComponent itemComp=new ItemComponent();
  EntityRef item=Mockito.mock(EntityRef.class);
  setupItemRef(item,itemComp,2,10);
  inventoryComp.itemSlots.set(0,item);
  RemoveItemAction action=new RemoveItemAction(instigator,item,false,2);
  inventoryAuthoritySystem.removeItem(action,inventory);
  assertTrue(action.isConsumed());
  assertEquals(item,action.getRemovedItem());
  assertEquals(EntityRef.NULL,inventoryComp.itemSlots.get(0));
  Mockito.verify(item,new AtLeast(0)).getComponent(ItemComponent.class);
  Mockito.verify(item,new AtLeast(0)).exists();
  Mockito.verify(item,new AtLeast(0)).iterateComponents();
  Mockito.verify(inventory,new AtLeast(0)).getComponent(InventoryComponent.class);
  Mockito.verify(inventory).saveComponent(inventoryComp);
  Mockito.verify(inventory,new Times(2)).send(Matchers.any(BeforeItemRemovedFromInventory.class));
  Mockito.verify(inventory,new Times(2)).send(Matchers.any(InventorySlotChangedEvent.class));
  Mockito.verifyNoMoreInteractions(instigator,inventory,entityManager,item);
}
