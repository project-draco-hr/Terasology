{
  HealthComponent health=entity.getComponent(HealthComponent.class);
  CharacterMovementComponent characterMovementComponent=entity.getComponent(CharacterMovementComponent.class);
  bool ghost=false;
  if (characterMovementComponent != null) {
    ghost=(characterMovementComponent.mode == MovementMode.GHOSTING);
  }
  if ((health != null) && !ghost) {
    int damagedAmount=health.currentHealth - Math.max(health.currentHealth - damageAmount,0);
    health.currentHealth-=damagedAmount;
    health.nextRegenTick=time.getGameTimeInMs() + TeraMath.floorToInt(health.waitBeforeRegen * 1000);
    entity.saveComponent(health);
    entity.send(new OnDamagedEvent(damageAmount,damagedAmount,damageType,instigator));
    if (health.currentHealth == 0 && health.destroyEntityOnNoHealth) {
      entity.send(new DestroyEvent(instigator,directCause,damageType));
    }
  }
}
