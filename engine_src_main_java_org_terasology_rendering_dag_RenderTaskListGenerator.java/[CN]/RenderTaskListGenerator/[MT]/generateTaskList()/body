{
  StateChange stateChange;
  StateChange persistentStateChange;
  Map persistentStateChanges=Maps.newHashMap();
  Map intranodesStateChanges=Maps.newHashMap();
  taskList.clear();
  for (  Object object : intermediateList) {
    if (object instanceof StateChange) {
      intranodesStateChanges.put(object.getClass(),object);
    }
 else {
      for (      Object preCastStateChange : intranodesStateChanges.values()) {
        stateChange=(StateChange)preCastStateChange;
        persistentStateChange=(StateChange)persistentStateChanges.get(stateChange.getClass());
        if (persistentStateChange == null) {
          if (!stateChange.isTheDefaultInstance()) {
            taskList.add(stateChange.generateTask());
            persistentStateChanges.put(stateChange.getClass(),stateChange);
          }
        }
 else {
          if (stateChange.isTheDefaultInstance()) {
            taskList.add(stateChange.generateTask());
            persistentStateChanges.remove(stateChange.getClass());
          }
 else           if (!stateChange.isEqualTo(persistentStateChange)) {
            taskList.add(stateChange.generateTask());
            persistentStateChanges.put(stateChange.getClass(),stateChange);
          }
        }
      }
      intranodesStateChanges.clear();
      taskList.add(((Node)object).generateTask());
    }
  }
}
