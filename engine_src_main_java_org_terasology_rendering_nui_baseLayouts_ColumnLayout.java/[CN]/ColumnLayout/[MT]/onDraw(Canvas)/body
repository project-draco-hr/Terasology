{
  if (!widgetList.isEmpty()) {
    Vector2i availableSize=canvas.size();
    int numRows=TeraMath.ceilToInt((float)widgetList.size() / columns);
    if (numRows > 0) {
      availableSize.y-=verticalSpacing * (numRows - 1);
    }
    if (columns > 0) {
      availableSize.x-=horizontalSpacing * (columns - 1);
    }
    List<List<UIWidget>> rows=Lists.newArrayList(getRowIterator());
    List<RowInfo> rowInfos=Lists.newArrayList();
    for (    List<UIWidget> row : rows) {
      rowInfos.add(calculateRowSize(row,canvas,availableSize));
    }
    int[] minWidths=new int[columns];
    int minRowWidth=0;
    int rowOffsetX=0;
    if (autoSizeColumns) {
      for (      RowInfo row : rowInfos) {
        for (int column=0; column < row.widgetSizes.size(); column++) {
          minWidths[column]=Math.max(minWidths[column],row.widgetSizes.get(column).getX());
        }
      }
      for (      int width : minWidths) {
        minRowWidth+=width;
      }
      minRowWidth+=(columns - 1) * horizontalSpacing;
      rowOffsetX=(canvas.size().x - minRowWidth) / 2;
    }
 else {
      minRowWidth=canvas.size().x;
      for (int i=0; i < columns; ++i) {
        minWidths[i]=TeraMath.floorToInt((minRowWidth - (columns - 1) * horizontalSpacing) * columnWidths[i]);
      }
    }
    int rowOffsetY=0;
    int usedHeight=0;
    for (    RowInfo row : rowInfos) {
      usedHeight+=row.height;
    }
    usedHeight+=(rowInfos.size() - 1) * verticalSpacing;
    int extraSpacePerRow=(canvas.size().y - usedHeight) / rowInfos.size();
    for (    RowInfo row : rowInfos) {
      row.height+=extraSpacePerRow;
    }
    for (int rowIndex=0; rowIndex < rows.size(); ++rowIndex) {
      List<UIWidget> row=rows.get(rowIndex);
      RowInfo rowInfo=rowInfos.get(rowIndex);
      int cellOffsetX=rowOffsetX;
      for (int i=0; i < row.size(); ++i) {
        UIWidget widget=row.get(i);
        int rowHeight=rowInfo.height;
        if (widget != null) {
          Rect2i drawRegion=Rect2i.createFromMinAndSize(cellOffsetX,rowOffsetY,minWidths[i],rowHeight);
          canvas.drawWidget(widget,drawRegion);
        }
        cellOffsetX+=minWidths[i] + horizontalSpacing;
      }
      rowOffsetY+=rowInfo.height + verticalSpacing;
    }
  }
}
