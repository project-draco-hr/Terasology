{
  super.onDraw(canvas);
  canvas.addInteractionRegion(moveOver);
  try (SubRegion subRegion=canvas.subRegion(canvas.getRegion(),false)){
    canvas.setDrawOnTop(true);
    for (    UIWidget widget : getWidgets()) {
      if (widget instanceof RenderableNode) {
        RenderableNode renderableNode=(RenderableNode)widget;
        for (        Port port : renderableNode.getPorts()) {
          Port targetPort=port.getTargetPort();
          if (port.isInput() || targetPort == null) {
            continue;
          }
          drawConnection(canvas,port,targetPort,port == activeConnectionStart ? Color.BLACK : Color.GREY);
        }
      }
    }
    if (activeConnectionStart != null) {
      drawConnection(canvas,activeConnectionStart,mousePos,Color.WHITE);
    }
    if (selectedNode != null) {
      Vector2f size=selectedNode.getSize();
      Vector2f topLeft=selectedNode.getPosition();
      Vector2f topRight=new Vector2f(topLeft);
      topRight.add(new Vector2f(size.x + .1f,0));
      Vector2f bottomLeft=new Vector2f(topLeft);
      bottomLeft.add(new Vector2f(0,size.y + .1f));
      Vector2f bottomRight=new Vector2f(topLeft);
      bottomRight.add(new Vector2f(size.x + 0.1f,size.y + 0.1f));
      drawConnection(canvas,topLeft,topRight,Color.GREEN);
      drawConnection(canvas,topRight,bottomRight,Color.GREEN);
      drawConnection(canvas,bottomRight,bottomLeft,Color.GREEN);
      drawConnection(canvas,bottomLeft,topLeft,Color.GREEN);
    }
    if (newNode != null) {
      Vector2i screenStart=worldToScreen(mousePos);
      Vector2f worldEnd=new Vector2f(mousePos);
      worldEnd.add(newNode.getSize());
      Vector2i screenEnd=worldToScreen(worldEnd);
      canvas.drawElement(newNode,Rect2i.createFromMinAndMax(screenStart,screenEnd));
    }
    canvas.setDrawOnTop(false);
  }
 }
