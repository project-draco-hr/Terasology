{
  setSize(size);
  _opened=false;
  addMouseButtonListener(new IMouseButtonListener(){
    @Override public void wheel(    UIDisplayElement element,    int wheel,    boolean intersect){
    }
    @Override public void up(    UIDisplayElement element,    int button,    boolean intersect){
      if (intersect)       _opened=!_opened;
 else       if (!_baseList.intersects(new Vector2f(Mouse.getX(),Display.getHeight() - Mouse.getY())))       _opened=false;
      _baseList.setVisible(_opened);
      if (!_opened) {
        _baseList.getScrollBarHorizontal().resetScrollPosition();
        _baseList.getScrollBarVertival().resetScrollPosition();
      }
    }
    @Override public void down(    UIDisplayElement element,    int button,    boolean intersect){
    }
  }
);
  addMouseMoveListener(new IMouseMoveListener(){
    @Override public void leave(    UIDisplayElement element){
    }
    @Override public void hover(    UIDisplayElement element){
    }
    @Override public void enter(    UIDisplayElement element){
      AudioManager.play(new AssetUri(AssetType.SOUND,"engine:PlaceBlock"));
    }
    @Override public void move(    UIDisplayElement element){
    }
  }
);
  _baseInput=new UIInput(size);
  _baseInput.setVisible(true);
  _baseInput.setDisabled(true);
  _baseButton=new UIButton(new Vector2f(18f,18f));
  _baseButton.setVisible(true);
  _baseButton.getPosition().x=size.x - _baseButton.getSize().x;
  _baseButton.getPosition().y=size.y / 2 - _baseButton.getSize().y / 2;
  _baseButton.getLabel().setText("");
  _baseButton.setClassStyle("button","background-image: engine:gui_menu 18/512 18/512 432/512 0");
  _baseButton.setClassStyle("button-mouseover","background-image: engine:gui_menu 18/512 18/512 432/512 0");
  _baseButton.setClassStyle("button-mouseclick","background-image: engine:gui_menu 18/512 18/512 432/512 18/512");
  _baseList=new UIList(listSize);
  _baseList.getPosition().y=size.y + 2;
  _baseList.setVisible(false);
  _baseList.addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      _opened=!_opened;
      _baseList.setVisible(_opened);
    }
  }
);
  _baseList.addChangedListener(new ChangedListener(){
    @Override public void changed(    UIDisplayElement element){
      if (_baseList.getSelectedItem() != null)       _baseInput.setValue(_baseList.getSelectedItem().getText());
    }
  }
);
  _baseList.setClassStyle("windowSkin","border-image-top: engine:gui_menu 159/512 1/512 263/512 17/512 2");
  _baseList.setClassStyle("windowSkin","border-image-right: engine:gui_menu 1/512 63/512 423/512 17/512 2");
  _baseList.setClassStyle("windowSkin","border-image-bottom: engine:gui_menu 159/512 1/512 263/512 81/512 2");
  _baseList.setClassStyle("windowSkin","border-image-left: engine:gui_menu 1/512 64/512 263/512 17/512 2");
  _baseList.setClassStyle("windowSkin","border-corner-topleft: engine:gui_menu 263/512 0");
  _baseList.setClassStyle("windowSkin","border-corner-topright: engine:gui_menu 423/512 0");
  _baseList.setClassStyle("windowSkin","border-corner-bottomright: engine:gui_menu 423/512 81/512");
  _baseList.setClassStyle("windowSkin","border-corner-bottomleft: engine:gui_menu 64/512 81/512");
  _baseList.setClassStyle("windowSkin","background-image: engine:gui_menu 159/512 63/512 264/512 18/512");
  _baseList.setClassStyle("windowSkin");
  addDisplayElement(_baseInput);
  addDisplayElement(_baseButton);
  addDisplayElement(_baseList);
}
