{
  InventoryComponent inventory=entity.getComponent(InventoryComponent.class);
  ItemComponent item=event.getItem().getComponent(ItemComponent.class);
  if (inventory == null || item == null)   return;
  logger.info("Receiving item {} for toolbar",item.name);
  boolean itemChanged=false;
  if (event.getSlot() == -1) {
    if (!item.stackId.isEmpty()) {
      for (      EntityRef itemStack : inventory.itemSlots) {
        ItemComponent stackComp=itemStack.getComponent(ItemComponent.class);
        if (stackComp != null) {
          if (item.stackId.equals(stackComp.stackId)) {
            int stackSpace=MAX_STACK - stackComp.stackCount;
            int amountToTransfer=Math.min(stackSpace,item.stackCount);
            stackComp.stackCount+=amountToTransfer;
            item.stackCount-=amountToTransfer;
            itemStack.saveComponent(stackComp);
            itemChanged=true;
            if (item.stackCount == 0) {
              event.getItem().destroy();
              return;
            }
          }
        }
      }
    }
    int freeSlot=inventory.itemSlots.indexOf(EntityRef.NULL);
    if (freeSlot != -1) {
      inventory.itemSlots.set(freeSlot,event.getItem());
      InventoryComponent sourceInventory=item.container.getComponent(InventoryComponent.class);
      if (sourceInventory != null) {
        int matchedSlot=sourceInventory.itemSlots.indexOf(event.getItem());
        if (matchedSlot != -1) {
          sourceInventory.itemSlots.set(matchedSlot,EntityRef.NULL);
          item.container.saveComponent(sourceInventory);
        }
      }
      item.container=entity;
      event.getItem().saveComponent(item);
      entity.saveComponent(inventory);
      NetworkComponent networkComponent=event.getItem().getComponent(NetworkComponent.class);
      if (networkComponent != null) {
        networkComponent.owner=entity;
        event.getItem().saveComponent(networkComponent);
      }
      return;
    }
  }
 else {
  }
  if (itemChanged) {
    event.getItem().saveComponent(item);
  }
}
