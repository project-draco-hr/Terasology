{
  Class<T> rawType=(Class<T>)type.getRawType();
  if (!rawType.isEnum()) {
    return null;
  }
  final Map<String,T> lowercaseToConstant=Maps.newHashMap();
  for (  T constant : rawType.getEnumConstants()) {
    String lowercase=toLowercase(constant);
    lowercaseToConstant.put(lowercase,constant);
    lowercaseToConstant.put(lowercase.replaceAll("_"," "),constant);
  }
  return new TypeAdapter<T>(){
    @Override public void write(    JsonWriter out,    T value) throws IOException {
      if (value == null) {
        out.nullValue();
      }
 else {
        out.value(toLowercase(value).replaceAll("_"," "));
      }
    }
    @Override public T read(    JsonReader reader) throws IOException {
      if (reader.peek() == JsonToken.NULL) {
        reader.nextNull();
        return null;
      }
 else {
        String value=reader.nextString();
        return lowercaseToConstant.get(toLowercase(value));
      }
    }
  }
;
}
