{
  if (lastFont != null) {
    pos.x+=offset;
    String rawText=getText();
    List<String> lines=TextLineBuilder.getLines(lastFont,rawText,Integer.MAX_VALUE);
    int targetLineIndex=pos.y / lastFont.getLineHeight();
    int passedLines=0;
    int newCursorPos=0;
    for (int lineIndex=0; lineIndex < lines.size() && passedLines <= targetLineIndex; lineIndex++) {
      List<String> subLines;
      if (multiline) {
        subLines=TextLineBuilder.getLines(lastFont,lines.get(lineIndex),lastWidth);
      }
 else {
        subLines=Arrays.asList(lines.get(lineIndex));
      }
      if (subLines.size() + passedLines > targetLineIndex) {
        for (        String subLine : subLines) {
          if (passedLines == targetLineIndex) {
            int totalWidth=0;
            for (            char c : subLine.toCharArray()) {
              int charWidth=lastFont.getWidth(c);
              if (totalWidth + charWidth / 2 >= pos.x) {
                break;
              }
              newCursorPos++;
              totalWidth+=charWidth;
            }
            passedLines++;
            break;
          }
 else {
            newCursorPos+=subLine.length();
            passedLines++;
          }
        }
      }
 else {
        passedLines+=subLines.size();
        newCursorPos+=lines.get(lineIndex).length() + 1;
      }
    }
    setCursorPosition(Math.min(newCursorPos,rawText.length()),!isSelectionModifierActive(keyboard) && !selecting);
    updateOffset();
  }
}
