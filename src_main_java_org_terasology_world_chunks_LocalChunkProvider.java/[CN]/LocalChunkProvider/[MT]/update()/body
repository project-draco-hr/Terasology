{
  regionLock.readLock().lock();
  try {
    for (    CacheRegion cacheRegion : regions) {
      cacheRegion.update();
      if (cacheRegion.isDirty()) {
        cacheRegion.setUpToDate();
        reviewChunkQueue.offer(new ChunkRequest(ChunkRequest.RequestType.PRODUCE,cacheRegion.getRegion().expand(new Vector3i(2,0,2))));
      }
    }
    PerformanceMonitor.startActivity("Review cache size");
    if (nearCache.size() > CACHE_SIZE) {
      logger.debug("Compacting cache");
      Iterator<Vector3i> iterator=nearCache.keySet().iterator();
      while (iterator.hasNext()) {
        Vector3i pos=iterator.next();
        boolean keep=false;
        for (        CacheRegion region : regions) {
          if (region.getRegion().expand(new Vector3i(4,0,4)).encompasses(pos)) {
            keep=true;
            break;
          }
        }
        if (!keep) {
          Chunk chunk=nearCache.get(pos);
          if (chunk.isLocked()) {
            continue;
          }
          chunk.lock();
          try {
            farStore.put(chunk);
            iterator.remove();
            chunk.dispose();
          }
  finally {
            chunk.unlock();
          }
        }
      }
    }
    PerformanceMonitor.endActivity();
  }
  finally {
    regionLock.readLock().unlock();
  }
}
