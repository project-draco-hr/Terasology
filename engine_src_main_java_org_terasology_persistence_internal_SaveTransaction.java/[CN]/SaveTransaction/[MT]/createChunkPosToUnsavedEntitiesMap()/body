{
  Map<Vector3i,Collection<EntityRef>> chunkPosToEntitiesMap=Maps.newHashMap();
  for (  EntityRef entity : privateEntityManager.getEntitiesWith(LocationComponent.class)) {
    if (entity.isPersistent() && !entity.getOwner().exists() && !entity.hasComponent(ClientComponent.class)&& !entity.isAlwaysRelevant()) {
      LocationComponent locationComponent=entity.getComponent(LocationComponent.class);
      if (locationComponent != null) {
        Vector3f loc=locationComponent.getWorldPosition();
        Vector3i chunkPos=TeraMath.calcChunkPos((int)loc.x,(int)loc.y,(int)loc.z);
        Collection<EntityRef> collection=chunkPosToEntitiesMap.get(chunkPos);
        if (collection == null) {
          collection=Lists.newArrayList();
          chunkPosToEntitiesMap.put(chunkPos,collection);
        }
        collection.add(entity);
      }
    }
  }
  return chunkPosToEntitiesMap;
}
