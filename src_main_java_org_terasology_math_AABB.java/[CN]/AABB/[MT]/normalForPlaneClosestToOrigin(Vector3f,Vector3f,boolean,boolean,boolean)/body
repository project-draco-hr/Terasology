{
  ArrayList<Vector3f> normals=new ArrayList<Vector3f>();
  if (pointOnAABB.z == min.z && testZ) {
    normals.add(new Vector3f(0,0,-1));
  }
  if (pointOnAABB.z == max.z && testZ) {
    normals.add(new Vector3f(0,0,1));
  }
  if (pointOnAABB.x == min.x && testX) {
    normals.add(new Vector3f(-1,0,0));
  }
  if (pointOnAABB.x == max.x && testX) {
    normals.add(new Vector3f(1,0,0));
  }
  if (pointOnAABB.y == min.y && testY) {
    normals.add(new Vector3f(0,-1,0));
  }
  if (pointOnAABB.y == max.y && testY) {
    normals.add(new Vector3f(0,1,0));
  }
  float minDistance=Float.MAX_VALUE;
  Vector3f closestNormal=new Vector3f();
  for (int i=0; i < normals.size(); i++) {
    Vector3f n=normals.get(i);
    Vector3f diff=new Vector3f(centerPointForNormal(n));
    diff.sub(origin);
    float distance=diff.length();
    if (distance < minDistance) {
      minDistance=distance;
      closestNormal=n;
    }
  }
  return closestNormal;
}
