{
  glEnable(GL11.GL_TEXTURE_2D);
  TextureManager.getInstance().bindTexture("char");
  ShaderManager.getInstance().enableShader("block");
  int light=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("block"),"light");
  GL20.glUniform1f(light,_parent.getRenderingLightValueAt(getPosition()));
  FloatBuffer colorBuffer=BufferUtils.createFloatBuffer(3);
  colorBuffer.put(1.0f);
  colorBuffer.put(1.0f);
  colorBuffer.put(1.0f);
  colorBuffer.flip();
  int colorOffset=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("block"),"colorOffset");
  GL20.glUniform3(colorOffset,colorBuffer);
  glPushMatrix();
  glTranslatef(0.8f,-1.1f + (float)calcBobbingOffset((float)Math.PI / 8f,0.05f,2.5f) - _handMovementAnimationOffset * 0.5f,-1.0f - _handMovementAnimationOffset * 0.5f);
  glRotatef(-45f - _handMovementAnimationOffset * 64.0f,1.0f,0.0f,0.0f);
  glRotatef(35f,0.0f,1.0f,0.0f);
  glTranslatef(0f,0.25f,0f);
  glScalef(0.3f,0.6f,0.3f);
  if (_handMesh == null) {
    Vector2f texPos=new Vector2f(40.0f * 0.015625f,32.0f * 0.03125f);
    Vector2f texWidth=new Vector2f(4.0f * 0.015625f,-12.0f * 0.03125f);
    MeshCollection.addBlockMesh(new Vector4f(1,1,1,1),texPos,texWidth,1.0f,1.0f,0.5f,0.0f,0.0f,0.0f);
    _handMesh=Tessellator.getInstance().generateMesh();
    Tessellator.getInstance().resetAll();
  }
  _handMesh.render();
  glPopMatrix();
  glDisable(GL11.GL_TEXTURE_2D);
  ShaderManager.getInstance().enableShader(null);
}
