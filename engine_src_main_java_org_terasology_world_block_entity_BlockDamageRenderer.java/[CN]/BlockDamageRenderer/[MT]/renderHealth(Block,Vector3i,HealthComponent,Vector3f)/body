{
  if (!worldProvider.isBlockRelevant(blockPos)) {
    return;
  }
  glPushMatrix();
  glTranslated(blockPos.x - cameraPos.x,blockPos.y - cameraPos.y,blockPos.z - cameraPos.z);
  float offset=java.lang.Math.round((1.0f - (float)health.currentHealth / health.maxHealth) * 9.0f) * 0.0625f;
  glMatrixMode(GL_TEXTURE);
  glPushMatrix();
  glTranslatef(offset,0f,0f);
  glMatrixMode(GL_MODELVIEW);
  block.getMesh().render();
  glPopMatrix();
  glMatrixMode(GL_TEXTURE);
  glPopMatrix();
  glMatrixMode(GL_MODELVIEW);
}
