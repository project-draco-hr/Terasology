{
  Set<Class<? extends Component>> presentComponents=Sets.newLinkedHashSet();
  for (  EntityData.Component componentData : entityData.getComponentList()) {
    ComponentMetadata<? extends Component> metadata=componentSerializer.getComponentMetadata(componentData);
    if (metadata == null || !componentSerializeCheck.serialize(metadata)) {
      continue;
    }
    presentComponents.add(metadata.getType());
    Component existingComponent=currentEntity.getComponent(metadata.getType());
    if (existingComponent == null) {
      currentEntity.addComponent(componentSerializer.deserialize(componentData));
    }
 else {
      componentSerializer.deserializeOnto(existingComponent,componentData,fieldCheck);
      currentEntity.saveComponent(existingComponent);
    }
  }
  if (removeMissingComponents) {
    for (    Component comp : currentEntity.iterateComponents()) {
      if (!presentComponents.contains(comp.getClass()) && componentSerializeCheck.serialize(componentLibrary.getMetadata(comp.getClass()))) {
        currentEntity.removeComponent(comp.getClass());
      }
    }
  }
}
