{
  if (_rigidBody != null || meshes == null || meshes.length < VERTICAL_SEGMENTS)   return;
  Terasology.getInstance().submitTask("Update Chunk Collision",new Runnable(){
    public void run(){
      try {
        _lockRigidBody.lock();
        TriangleIndexVertexArray vertexArray=new TriangleIndexVertexArray();
        int counter=0;
        for (int k=0; k < Chunk.VERTICAL_SEGMENTS; k++) {
          ChunkMesh mesh=meshes[k];
          if (mesh != null) {
            IndexedMesh indexedMesh=mesh._indexedMesh;
            if (indexedMesh != null) {
              vertexArray.addIndexedMesh(indexedMesh);
              counter++;
            }
            mesh._indexedMesh=null;
          }
        }
        if (counter == VERTICAL_SEGMENTS) {
          try {
            BvhTriangleMeshShape shape=new BvhTriangleMeshShape(vertexArray,true);
            Matrix3f rot=new Matrix3f();
            rot.setIdentity();
            DefaultMotionState blockMotionState=new DefaultMotionState(new Transform(new Matrix4f(rot,new Vector3f((float)_pos.x * Chunk.CHUNK_DIMENSION_X,(float)_pos.y * Chunk.CHUNK_DIMENSION_Y,(float)_pos.z * Chunk.CHUNK_DIMENSION_Z),1.0f)));
            RigidBodyConstructionInfo blockConsInf=new RigidBodyConstructionInfo(0,blockMotionState,shape,new Vector3f());
            _rigidBody=new RigidBody(blockConsInf);
          }
 catch (          Exception e) {
            Terasology.getInstance().getLogger().log(Level.WARNING,"Chunk failed to create rigid body.",e);
          }
        }
      }
  finally {
        _lockRigidBody.unlock();
      }
    }
  }
);
}
