{
  validRefs=new TIntHashSet();
  if (externalRefs != null) {
    validRefs.addAll(externalRefs);
  }
  for (  EntityData.Entity entity : store.getEntityList()) {
    validRefs.add(entity.getId());
  }
  EntitySerializer serializer=new EntitySerializer(entityManager);
  EntityRefTypeHandler.setReferenceInterceptor(this);
  Map<Class<? extends Component>,Integer> idMap=Maps.newHashMap();
  for (int i=0; i < store.getComponentClassCount(); ++i) {
    ComponentMetadata<?> metadata=entityManager.getComponentLibrary().getMetadata(store.getComponentClass(i));
    if (metadata != null) {
      idMap.put(metadata.getType(),i);
    }
  }
  serializer.setComponentIdMapping(idMap);
  for (  EntityData.Entity entity : store.getEntityList()) {
    serializer.deserialize(entity);
  }
  EntityRefTypeHandler.setReferenceInterceptor(null);
  Map<String,EntityRef> namedEntities=Maps.newHashMap();
  for (int i=0; i < store.getEntityNameCount() && i < store.getEntityNamedCount(); ++i) {
    namedEntities.put(store.getEntityName(i),entityManager.getEntity(store.getEntityNamed(i)));
  }
  return namedEntities;
}
