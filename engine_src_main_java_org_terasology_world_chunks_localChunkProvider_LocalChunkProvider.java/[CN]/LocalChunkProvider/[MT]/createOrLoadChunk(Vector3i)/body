{
  Chunk chunk=nearCache.get(chunkPos);
  if (chunk == null && !preparingChunks.contains(chunkPos)) {
    preparingChunks.add(chunkPos);
    if (storageManager.containsChunkStoreFor(chunkPos)) {
      pipeline.doTask(new AbstractChunkTask(chunkPos){
        @Override public String getName(){
          return "Load Chunk";
        }
        @Override public void run(){
          ChunkStore chunkStore=storageManager.loadChunkStore(getPosition());
          Chunk chunk=chunkStore.getChunk();
          try {
            chunk.lock();
            InternalLightProcessor.generateInternalLighting(chunk);
            chunk.deflate();
            readyChunks.offer(new ReadyChunkInfo(chunk,createBatchBlockEventMappings(chunk),chunkStore));
          }
  finally {
            chunk.unlock();
          }
        }
      }
);
    }
 else {
      pipeline.doTask(new AbstractChunkTask(chunkPos){
        @Override public String getName(){
          return "Generate Chunk";
        }
        @Override public void run(){
          Chunk chunk=new ChunkImpl(getPosition());
          generator.createChunk(chunk);
          InternalLightProcessor.generateInternalLighting(chunk);
          chunk.deflate();
          readyChunks.offer(new ReadyChunkInfo(chunk,createBatchBlockEventMappings(chunk)));
        }
      }
);
    }
  }
}
