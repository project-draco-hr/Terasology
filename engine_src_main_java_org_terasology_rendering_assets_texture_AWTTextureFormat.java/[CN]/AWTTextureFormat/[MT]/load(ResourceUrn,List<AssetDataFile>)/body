{
  try (InputStream inStream=inputs.get(0).openStream()){
    final BufferedImage img=ImageIO.read(inStream);
    final WritableRaster raster=img.getRaster();
    final DataBufferByte dbf=(DataBufferByte)raster.getDataBuffer();
    byte[] data=dbf.getData();
    final int stride=data.length / (img.getWidth() * img.getHeight());
    if (stride > 4) {
      throw new IOException("Image data makes no sense (got " + data.length + ", expected "+ img.getWidth() * img.getHeight() * stride + ")");
    }
    final ByteBuffer buf=ByteBuffer.allocateDirect(4 * img.getWidth() * img.getHeight());
    if (img.getType() == BufferedImage.TYPE_3BYTE_BGR) {
      for (int i=0; i < data.length; i+=stride) {
        buf.put(data,i + 2,1);
        buf.put(data,i + 1,1);
        buf.put(data,i + 0,1);
        buf.put((byte)255);
      }
    }
 else     if (img.getType() == BufferedImage.TYPE_4BYTE_ABGR) {
      for (int i=0; i < data.length; i+=stride) {
        buf.put(data,i + 3,1);
        buf.put(data,i + 2,1);
        buf.put(data,i + 1,1);
        buf.put(data,i + 0,1);
      }
    }
 else     if (img.getType() == BufferedImage.TYPE_INT_ARGB) {
      for (int i=0; i < data.length; i+=stride) {
        buf.put(data,i + 1,1);
        buf.put(data,i + 2,1);
        buf.put(data,i + 3,1);
        buf.put(data,i + 0,1);
      }
    }
 else     if (img.getType() == BufferedImage.TYPE_BYTE_INDEXED) {
      final ColorModel cm=img.getColorModel();
      for (int i=0; i < data.length; i+=stride) {
        buf.put((byte)cm.getRed(data[i]));
        buf.put((byte)cm.getGreen(data[i]));
        buf.put((byte)cm.getBlue(data[i]));
        buf.put((byte)cm.getAlpha(data[i]));
      }
    }
 else {
      throw new IOException("Unsuported AWT format: " + img.getType());
    }
    buf.flip();
    Texture.FilterMode filterMode=defaultFilterMode;
    Texture.WrapMode wrapMode=Texture.WrapMode.CLAMP;
    return new TextureData(img.getWidth(),img.getHeight(),new ByteBuffer[]{buf},wrapMode,filterMode);
  }
 catch (  UnsupportedOperationException e) {
    throw new IOException(e);
  }
}
