{
  LocationComponent loc=entity.getComponent(LocationComponent.class);
  loc.setWorldPosition(connected.getEntityStore().getRelevanceLocation());
  entity.saveComponent(loc);
  worldRenderer.getChunkProvider().addRelevanceEntity(entity,4,networkSystem.getOwner(entity));
  if (connected.getEntityStore().hasCharacter()) {
    if (worldRenderer.getWorldProvider().isBlockRelevant(connected.getEntityStore().getRelevanceLocation())) {
      restoreCharacter(entity,connected.getEntityStore());
    }
 else {
      SpawningClientInfo spawningClientInfo=new SpawningClientInfo(entity,connected.getEntityStore().getRelevanceLocation(),connected.getEntityStore());
      clientsPreparingToSpawn.add(spawningClientInfo);
    }
  }
 else {
    Vector3i pos=Vector3i.zero();
    if (chunkProvider.getChunk(pos) != null) {
      spawnPlayer(entity,new Vector3i(Chunk.SIZE_X / 2,Chunk.SIZE_Y,Chunk.SIZE_Z / 2));
    }
 else {
      SpawningClientInfo spawningClientInfo=new SpawningClientInfo(entity,new Vector3f(Chunk.SIZE_X / 2,Chunk.SIZE_Y / 2,Chunk.SIZE_Z / 2));
      clientsPreparingToSpawn.add(spawningClientInfo);
    }
  }
}
