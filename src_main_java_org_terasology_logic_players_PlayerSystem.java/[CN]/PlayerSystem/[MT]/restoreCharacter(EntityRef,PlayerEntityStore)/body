{
  Map<String,EntityRef> restoredEntities=playerEntityStore.restoreAll();
  EntityRef character=restoredEntities.get("character");
  if (character == null) {
    spawnPlayer(entity,new Vector3i(Chunk.SIZE_X / 2,Chunk.SIZE_Y,Chunk.SIZE_Z / 2));
  }
 else {
    Client clientListener=networkSystem.getOwner(entity);
    int distance=clientListener.getViewDistance();
    if (!clientListener.isLocal()) {
      distance+=ChunkConstants.REMOTE_GENERATION_DISTANCE;
    }
    worldRenderer.getChunkProvider().updateRelevanceEntity(entity,distance);
    NetworkComponent netComp=character.getComponent(NetworkComponent.class);
    if (netComp != null) {
      netComp.owner=entity;
      character.saveComponent(netComp);
    }
    ClientComponent client=entity.getComponent(ClientComponent.class);
    client.character=character;
    entity.saveComponent(client);
  }
}
