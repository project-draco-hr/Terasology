{
  Vector3f oldPosition=new Vector3f(getPosition());
  if (MathHelper.fastAbs(_velocity.y) > 0f) {
    _velocity.y+=-1f * _velocity.y * Configuration.getSettingNumeric("FRICTION");
  }
  if (MathHelper.fastAbs(_velocity.x) > 0f) {
    _velocity.x+=-1f * _velocity.x * Configuration.getSettingNumeric("FRICTION");
  }
  if (MathHelper.fastAbs(_velocity.z) > 0f) {
    _velocity.z+=-1f * _velocity.z * Configuration.getSettingNumeric("FRICTION");
  }
  if (MathHelper.fastAbs(_velocity.x) > _activeWalkingSpeed || MathHelper.fastAbs(_velocity.z) > _activeWalkingSpeed || MathHelper.fastAbs(_velocity.y) > _activeWalkingSpeed) {
    double max=Math.max(Math.max(MathHelper.fastAbs(_velocity.x),MathHelper.fastAbs(_velocity.z)),MathHelper.fastAbs(_velocity.y));
    double div=max / _activeWalkingSpeed;
    _velocity.x/=div;
    _velocity.z/=div;
    _velocity.y/=div;
  }
  _velocity.x+=_movementDirection.x;
  _velocity.y+=_movementDirection.y;
  _velocity.z+=_movementDirection.z;
  if (_gravity > -Configuration.getSettingNumeric("MAX_GRAVITY") && !_godMode && !_isSwimming) {
    _gravity-=Configuration.getSettingNumeric("GRAVITY");
  }
  if (_gravity < -Configuration.getSettingNumeric("MAX_GRAVITY") && !_godMode && !_isSwimming) {
    _gravity=-Configuration.getSettingNumeric("MAX_GRAVITY");
  }
  if (_gravity > -Configuration.getSettingNumeric("MAX_GRAVITY_SWIMMING") && !_godMode && _isSwimming) {
    _gravity-=Configuration.getSettingNumeric("GRAVITY_SWIMMING");
  }
  if (_gravity < -Configuration.getSettingNumeric("MAX_GRAVITY_SWIMMING") && !_godMode && _isSwimming) {
    _gravity=-Configuration.getSettingNumeric("MAX_GRAVITY_SWIMMING");
  }
  getPosition().y+=_velocity.y;
  getPosition().y+=_gravity;
  if (!_godMode) {
    if (verticalHitTest(oldPosition)) {
      double oldGravity=_gravity;
      _gravity=0;
      if (oldGravity <= 0) {
        if (_jump) {
          _jump=false;
          _gravity=_jumpIntensity;
        }
        if (_touchingGround == false) {
          Vector3f playerDirection=directionOfOrigin();
          _footstepSounds[MathHelper.fastAbs(_parent.getRandom().randomInt()) % 5].playAsSoundEffect(0.7f + (float)MathHelper.fastAbs(_parent.getRandom().randomDouble()) * 0.3f,0.2f + (float)MathHelper.fastAbs(_parent.getRandom().randomDouble()) * 0.3f,false,playerDirection.x,playerDirection.y,playerDirection.z);
          _touchingGround=true;
        }
      }
 else {
        _touchingGround=false;
      }
      handleVerticalCollision();
    }
 else {
      _touchingGround=false;
    }
  }
 else {
    _gravity=0f;
  }
  oldPosition.set(getPosition());
  getPosition().x+=_velocity.x;
  getPosition().z+=_velocity.z;
  _stepCounter+=Math.max(MathHelper.fastAbs(_velocity.x),MathHelper.fastAbs(_velocity.z));
  if (!_godMode) {
    if (horizontalHitTest(oldPosition)) {
      handleHorizontalCollision();
    }
  }
}
