def writeMeshPart(name, obj, fw, scene, apply_modifiers):

    def roundVec3d(v):
        return (round(v[0], 6), round(v[1], 6), round(v[2], 6))

    def roundVec2d(v):
        return (round(v[0], 6), round(v[1], 6))
    if (not obj):
        return
    if apply_modifiers:
        mesh = obj.to_mesh(scene, True, 'PREVIEW')
    else:
        mesh = obj.data
    processedVerts = []
    processedFaces = [[] for f in range(len(mesh.faces))]
    for (i, f) in enumerate(mesh.faces):
        faceVerts = f.vertices
        for (j, index) in enumerate(faceVerts):
            vert = mesh.vertices[index]
            if f.use_smooth:
                normal = tuple(f.normal)
            else:
                normal = tuple(vert.normal)
            uvtemp = mesh.uv_textures.active.data[i].uv[j]
            uvs = (uvtemp[0], (1.0 - uvtemp[1]))
            processedFaces[i].append(len(processedVerts))
            processedVerts.append((vert, normal, uvs))
    fw(('\t%s {\n' % name))
    fw('\t\tvertices = [')
    first = True
    for (i, v) in enumerate(processedVerts):
        if (not first):
            fw(', ')
        fw(('[%.6f, %.6f, %.6f]' % convertVec3d(v[0].co)))
        first = False
    fw(']\n')
    fw('\t\tnormals = [')
    first = True
    for (i, v) in enumerate(processedVerts):
        if (not first):
            fw(', ')
        fw(('[%.6f, %.6f, %.6f]' % convertVec3d(v[1])))
        first = False
    fw(']\n')
    fw('\t\ttexcoords = [')
    first = True
    for (i, v) in enumerate(processedVerts):
        if (not first):
            fw(', ')
        fw(('[%.6f, %.6f]' % v[2]))
        first = False
    fw(']\n')
    fw('\t\tfaces = [\n')
    firstFace = True
    for face in processedFaces:
        if (not firstFace):
            fw(',\n')
        fw('\t\t\t[')
        first = True
        for ind in face:
            if (not first):
                fw(', ')
            fw(('%d' % ind))
            first = False
        fw(']')
        firstFace = False
    fw('\n\t\t]\n')
    if ('teraFullSide' in obj):
        if obj.teraFullSide:
            fw('\t\tfullSide = true\n')
        else:
            fw('\t\tfullSide = false\n')
    else:
        fw('\t\tfullSide = false\n')
    fw('\t}\n')
    if apply_modifiers:
        bpy.data.meshes.remove(mesh)
