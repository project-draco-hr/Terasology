{
  okButton=new UIButton(new Vector2f(128f,32f),UIButton.ButtonType.NORMAL);
  okButton.getLabel().setText("Play");
  okButton.setVisible(true);
  okButton.addClickListener(new ClickListener(){
    @Override public void click(    UIDisplayElement element,    int button){
      Config config=CoreRegistry.get(Config.class);
      if (inputWorldTitle.getText().isEmpty()) {
        getGUIManager().showMessage("Error","Please enter a world name");
        return;
      }
 else       if (Files.isRegularFile(PathManager.getInstance().getSavePath(inputWorldTitle.getText()).resolve(GameManifest.DEFAULT_FILE_NAME))) {
        getGUIManager().showMessage("Error","A World with this name already exists");
        return;
      }
      if (inputSeed.getText().length() > 0) {
        config.getWorldGeneration().setDefaultSeed(inputSeed.getText());
      }
 else {
        FastRandom random=new FastRandom();
        config.getWorldGeneration().setDefaultSeed(random.nextString(32));
      }
      if (inputWorldTitle.getText().length() > 0) {
        config.getWorldGeneration().setWorldTitle(inputWorldTitle.getText());
      }
 else {
        config.getWorldGeneration().setWorldTitle(getWorldName());
      }
      ModuleConfig moduleConfig=CoreRegistry.get(Config.class).getDefaultModSelection();
      moduleConfig.clear();
      for (      Module module : selection.getSelection()) {
        moduleConfig.addModule(module.getId());
      }
      CoreRegistry.get(Config.class).save();
      WorldGeneratorInfo worldGeneratorInfo=getSelectedWorldGenerator();
      GameManifest gameManifest=new GameManifest();
      gameManifest.setTitle(config.getWorldGeneration().getWorldTitle());
      gameManifest.setSeed(config.getWorldGeneration().getDefaultSeed());
      for (      Module module : selection.getSelection()) {
        gameManifest.addModule(module.getId(),module.getVersion());
      }
      WorldInfo worldInfo=new WorldInfo(TerasologyConstants.MAIN_WORLD,config.getWorldGeneration().getDefaultSeed(),(long)(WorldTime.DAY_LENGTH * 0.025f),worldGeneratorInfo.getUri());
      gameManifest.addWorld(worldInfo);
      CoreRegistry.get(GameEngine.class).changeState(new StateLoading(gameManifest,(createServerGame) ? NetworkMode.SERVER : NetworkMode.NONE));
    }
  }
);
}
