{
  try (ZipFile zipFile=new ZipFile(modPath.toFile())){
    ZipEntry modInfoEntry=zipFile.getEntry("module.txt");
    if (modInfoEntry != null) {
      try {
        ModuleInfo moduleInfo=gson.fromJson(new InputStreamReader(zipFile.getInputStream(modInfoEntry)),ModuleInfo.class);
        if (!modules.containsKey(moduleInfo.getId().toLowerCase(Locale.ENGLISH))) {
          ArchiveSource source=new ArchiveSource(moduleInfo.getId(),modPath.toFile(),ASSETS_SUBDIRECTORY,OVERRIDES_SUBDIRECTORY);
          ExtensionModule module=new ExtensionModule(modPath,moduleInfo,source);
          modules.put(moduleInfo.getId().toLowerCase(Locale.ENGLISH),module);
          logger.info("Discovered module: {} (hasCode = {})",moduleInfo.getDisplayName(),module.isCodeModule());
        }
 else {
          logger.info("Discovered duplicate module: " + moduleInfo.getDisplayName() + ", skipping");
        }
      }
 catch (      FileNotFoundException|JsonIOException e) {
        logger.warn("Failed to load module manifest for module at {}",modPath,e);
      }
    }
  }
 catch (  IOException e) {
    logger.error("Invalid module file: {}",modPath,e);
  }
}
