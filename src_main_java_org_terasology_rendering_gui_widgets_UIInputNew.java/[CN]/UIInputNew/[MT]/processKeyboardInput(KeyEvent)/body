{
  if (isFocused()) {
    if (event.getKey() == Keyboard.KEY_BACK && event.isDown()) {
      if (text.getText().length() > 0) {
        if (selectionStart != selectionEnd) {
          deleteSelection();
        }
 else         if (cursorPosition > 0) {
          int pos=getWrapOffset(cursorPosition);
          replaceText(pos - 1,pos,"");
          setCursorToTextPosition(cursorPosition - 1);
        }
      }
    }
    if (event.getKey() == Keyboard.KEY_DELETE && event.isDown()) {
      if (text.getText().length() > 0) {
        if (selectionStart != selectionEnd) {
          deleteSelection();
        }
 else         if (cursorPosition < text.getText().length()) {
          int pos=getWrapOffset(cursorPosition);
          replaceText(pos,pos + 1,"");
          setCursorToTextPosition(cursorPosition);
        }
      }
    }
 else     if (event.getKey() == Keyboard.KEY_LEFT && event.isDown()) {
      resetSelection();
      if (ctrlKeyPressed) {
        setCursorToTextPosition(findNextChar(cursorPosition,' ',true));
      }
 else {
        setCursorToTextPosition(cursorPosition - 1);
      }
    }
 else     if (event.getKey() == Keyboard.KEY_RIGHT && event.isDown()) {
      resetSelection();
      if (ctrlKeyPressed) {
        setCursorToTextPosition(findNextChar(cursorPosition,' ',false));
      }
 else {
        setCursorToTextPosition(cursorPosition + 1);
      }
    }
 else     if (event.getKey() == Keyboard.KEY_UP && event.isDown()) {
      resetSelection();
      Vector2f pos=cursor.getAbsolutePosition();
      pos=new Vector2f(pos.x + cursor.getPosition().x,pos.y + cursor.getPosition().y - cursorSize.y / 2);
      setCursorToTextPosition(toTextPosition(pos));
    }
 else     if (event.getKey() == Keyboard.KEY_DOWN && event.isDown()) {
      resetSelection();
      Vector2f pos=cursor.getAbsolutePosition();
      pos=new Vector2f(pos.x + cursor.getPosition().x,pos.y + cursor.getPosition().y + cursorSize.y+ cursorSize.y / 2);
      setCursorToTextPosition(toTextPosition(pos));
    }
 else     if (event.getKey() == Keyboard.KEY_LCONTROL || event.getKey() == Keyboard.KEY_RCONTROL) {
      ctrlKeyPressed=event.isDown();
    }
 else     if (ctrlKeyPressed && event.getKey() == Keyboard.KEY_X && event.isDown()) {
      setClipboard(getSelection());
      deleteSelection();
    }
 else     if (ctrlKeyPressed && event.getKey() == Keyboard.KEY_C && event.isDown()) {
      setClipboard(getSelection());
    }
 else     if (ctrlKeyPressed && event.getKey() == Keyboard.KEY_V && event.isDown()) {
      if (selectionStart != selectionEnd) {
        deleteSelection();
      }
      String clipboard=removeUnsupportedChars(getClipboard());
      int num=insertText(getWrapOffset(cursorPosition),clipboard);
      setCursorToTextPosition(cursorPosition + num);
    }
 else     if (ctrlKeyPressed && event.getKey() == Keyboard.KEY_A && event.isDown()) {
      setSelection(0,text.getText().length());
    }
 else     if (event.isDown()) {
      char c=Keyboard.getEventCharacter();
      if (c == '\r') {
        c='\n';
      }
      if (validateChar(c)) {
        if (selectionStart != selectionEnd) {
          deleteSelection();
        }
        int num=insertText(getWrapOffset(cursorPosition),String.valueOf(c));
        setCursorToTextPosition(cursorPosition + num);
      }
    }
  }
}
