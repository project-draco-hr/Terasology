{
  for (  UIItemCell cell : cells) {
    removeDisplayElement(cell);
  }
  cells.clear();
  EntityManager entityManager=CoreRegistry.get(EntityManager.class);
  EntityRef entity;
  PrefabManager prefMan=CoreRegistry.get(PrefabManager.class);
  Iterator<Prefab> it=prefMan.listPrefabs().iterator();
  ItemComponent itemComp;
  while (it.hasNext()) {
    Prefab prefab=it.next();
    itemComp=prefab.getComponent(ItemComponent.class);
    if (itemComp != null) {
      entity=entityManager.create(prefab.listComponents());
      entity.setPersisted(false);
      if (entity.exists() && entity.getComponent(ItemComponent.class) != null) {
        UIItemCell cell=new UIItemCell(null,cellSize);
        cell.setDrag(false);
        cell.setItemEntity(entity,0);
        ItemComponent itemComponent=entity.getComponent(ItemComponent.class);
        if (!itemComponent.stackId.isEmpty()) {
          itemComponent.stackCount=InventorySystem.MAX_STACK;
          cell.setDisplayItemCount(true);
          entity.saveComponent(itemComponent);
        }
 else {
          cell.setDisplayItemCount(false);
        }
        cell.setVisible(true);
        cell.addClickListener(clickListener);
        cells.add(cell);
        container.addDisplayElement(cell);
      }
    }
  }
  BlockItemFactory blockFactory=new BlockItemFactory(entityManager);
  List<List<BlockUri>> blocks=new ArrayList<List<BlockUri>>();
  blocks.add(sortItems(BlockManager.getInstance().listRegisteredBlockUris()));
  blocks.add(sortItems(BlockManager.getInstance().listAvailableBlockUris()));
  blocks.add(sortItems(BlockManager.getInstance().listShapelessBlockUris()));
  for (  List<BlockUri> blockList : blocks) {
    for (    BlockUri block : blockList) {
      entity=blockFactory.newInstance(BlockManager.getInstance().getBlockFamily(block.getFamilyUri()),99);
      entity.setPersisted(false);
      if (entity.exists()) {
        UIItemCell cell=new UIItemCell(null,cellSize);
        cell.setDrag(false);
        cell.setItemEntity(entity,0);
        cell.setDisplayItemCount(false);
        cell.setVisible(true);
        cell.addClickListener(clickListener);
        cells.add(cell);
        container.addDisplayElement(cell);
      }
    }
  }
}
