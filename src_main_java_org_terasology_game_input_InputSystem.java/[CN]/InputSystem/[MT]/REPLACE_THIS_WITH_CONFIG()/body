{
  registerBindButton(InventoryButton.ID,"Inventory",new InventoryButton());
  linkBindButtonToKey(Keyboard.KEY_I,InventoryButton.ID);
  registerBindButton(ConsoleButton.ID,"Console",new ConsoleButton());
  linkBindButtonToKey(Keyboard.KEY_TAB,ConsoleButton.ID);
  registerBindButton(PauseButton.ID,"Pause",new PauseButton());
  linkBindButtonToKey(Keyboard.KEY_ESCAPE,PauseButton.ID);
  registerBindButton(ForwardsButton.ID,"Forwards",new ForwardsButton());
  linkBindButtonToKey(Keyboard.KEY_W,ForwardsButton.ID);
  registerBindButton(BackwardsButton.ID,"Backwards",new BackwardsButton());
  linkBindButtonToKey(Keyboard.KEY_S,BackwardsButton.ID);
  registerBindAxis(ForwardsMovementAxis.ID,new ForwardsMovementAxis(),ForwardsButton.ID,BackwardsButton.ID).setSendEventMode(BindableAxis.SendEventMode.WHEN_CHANGED);
  registerBindButton(LeftStrafeButton.ID,"Left",new LeftStrafeButton());
  linkBindButtonToKey(Keyboard.KEY_A,LeftStrafeButton.ID);
  registerBindButton(RightStrafeButton.ID,"Right",new RightStrafeButton());
  linkBindButtonToKey(Keyboard.KEY_D,RightStrafeButton.ID);
  registerBindAxis(StrafeMovementAxis.ID,new StrafeMovementAxis(),LeftStrafeButton.ID,RightStrafeButton.ID).setSendEventMode(BindableAxis.SendEventMode.WHEN_CHANGED);
  registerBindButton(JumpButton.ID,"Jump",new JumpButton());
  linkBindButtonToKey(Keyboard.KEY_SPACE,JumpButton.ID);
  registerBindButton(CrouchButton.ID,"Crouch",new CrouchButton());
  linkBindButtonToKey(Keyboard.KEY_C,CrouchButton.ID);
  registerBindAxis(VerticalMovementAxis.ID,new VerticalMovementAxis(),JumpButton.ID,CrouchButton.ID).setSendEventMode(BindableAxis.SendEventMode.WHEN_CHANGED);
  registerBindButton(RunButton.ID,"Run",new RunButton());
  linkBindButtonToKey(Keyboard.KEY_LSHIFT,RunButton.ID);
  linkBindButtonToKey(Keyboard.KEY_RSHIFT,RunButton.ID);
  registerBindButton(AttackButton.ID,"Attack",new AttackButton()).setRepeating(true);
  linkBindButtonToMouse(1,AttackButton.ID);
  registerBindButton(UseItemButton.ID,"Use Held Item",new UseItemButton()).setRepeating(true);
  linkBindButtonToMouse(0,UseItemButton.ID);
  registerBindButton(FrobButton.ID,"Frob",new FrobButton());
  linkBindButtonToKey(Keyboard.KEY_E,FrobButton.ID);
  registerBindButton(ToolbarNextButton.ID,"Toolbar Next",new ToolbarNextButton()).setMode(BindableButton.ActivateMode.PRESS);
  linkBindButtonToMouseWheel(+1,ToolbarNextButton.ID);
  registerBindButton(ToolbarPrevButton.ID,"Toolbar Previous",new ToolbarPrevButton()).setMode(BindableButton.ActivateMode.PRESS);
  linkBindButtonToMouseWheel(-1,ToolbarPrevButton.ID);
  for (int i=0; i < 9; ++i) {
    String inventorySlotBind="engine:toolbarSlot" + i;
    registerBindButton(inventorySlotBind,"Inventory Slot " + (i + 1),new ToolbarSlotButton(i));
    linkBindButtonToKey(Keyboard.KEY_1 + i,inventorySlotBind);
  }
  registerBindButton(ToggleMinionModeButton.ID,"Toggle Minion Mode",new ToggleMinionModeButton()).setMode(BindableButton.ActivateMode.PRESS);
  linkBindButtonToKey(Keyboard.KEY_X,ToggleMinionModeButton.ID);
}
