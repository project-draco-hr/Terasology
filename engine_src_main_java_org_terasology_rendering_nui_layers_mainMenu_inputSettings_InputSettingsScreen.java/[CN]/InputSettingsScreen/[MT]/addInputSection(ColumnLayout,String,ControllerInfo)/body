{
  UILabel categoryHeader=new UILabel(name);
  categoryHeader.setFamily("subheading");
  layout.addWidget(categoryHeader);
  float columnRatio=0.4f;
  UICheckbox invertX=new UICheckbox();
  invertX.bindChecked(BindHelper.bindBeanProperty("invertX",info,Boolean.TYPE));
  layout.addWidget(new RowLayout(new UILabel("Invert X Axis"),invertX).setColumnRatios(columnRatio).setHorizontalSpacing(horizontalSpacing));
  UICheckbox invertY=new UICheckbox();
  invertY.bindChecked(BindHelper.bindBeanProperty("invertY",info,Boolean.TYPE));
  layout.addWidget(new RowLayout(new UILabel("Invert Y Axis"),invertY).setColumnRatios(columnRatio).setHorizontalSpacing(horizontalSpacing));
  UISlider mvmtDeadZone=new UISlider();
  mvmtDeadZone.setIncrement(0.01f);
  mvmtDeadZone.setMinimum(0);
  mvmtDeadZone.setRange(1);
  mvmtDeadZone.setPrecision(2);
  mvmtDeadZone.bindValue(new Binding<Float>(){
    @Override public void set(    Float value){
      info.setMovementDeadZone(value);
      inputSystem.getControllerDevice().setMovementDeadZone(name,value);
    }
    @Override public Float get(){
      return info.getMovementDeadZone();
    }
  }
);
  layout.addWidget(new RowLayout(new UILabel("Movement Axis Dead Zone"),mvmtDeadZone).setColumnRatios(columnRatio).setHorizontalSpacing(horizontalSpacing));
  UISlider rotDeadZone=new UISlider();
  rotDeadZone.setIncrement(0.01f);
  rotDeadZone.setMinimum(0);
  rotDeadZone.setRange(1);
  rotDeadZone.setPrecision(2);
  rotDeadZone.bindValue(new Binding<Float>(){
    @Override public void set(    Float value){
      info.setRotationDeadZone(value);
      inputSystem.getControllerDevice().setMovementDeadZone(name,value);
    }
    @Override public Float get(){
      return info.getRotationDeadZone();
    }
  }
);
  layout.addWidget(new RowLayout(new UILabel("Rotation Axis Dead Zone"),rotDeadZone).setColumnRatios(columnRatio).setHorizontalSpacing(horizontalSpacing));
  layout.addWidget(new UISpace(new Vector2i(0,16)));
}
