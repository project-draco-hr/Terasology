{
  int shaderId=GL20.glCreateShader(type);
  StringBuilder shader=OpenGLShader.createShaderBuilder();
  if (type == GL20.GL_FRAGMENT_SHADER)   shader.append(OpenGLShader.INCLUDED_FUNCTIONS_FRAGMENT).append("\n");
 else   shader.append(OpenGLShader.INCLUDED_FUNCTIONS_VERTEX).append("\n");
  String filename=title;
  if (type == GL20.GL_FRAGMENT_SHADER) {
    filename+="_frag.glsl";
  }
 else   if (type == GL20.GL_VERTEX_SHADER) {
    filename+="_vert.glsl";
  }
  logger.debug("Loading shader {} ({}, type = {})",title,filename,String.valueOf(type));
  shader.append(readShader(filename));
  if (type == GL20.GL_FRAGMENT_SHADER) {
    fragmentProgram=shaderId;
  }
 else   if (type == GL20.GL_VERTEX_SHADER) {
    vertexProgram=shaderId;
  }
  GL20.glShaderSource(shaderId,shader.toString());
  GL20.glCompileShader(shaderId);
  printLogInfo(shaderId);
}
