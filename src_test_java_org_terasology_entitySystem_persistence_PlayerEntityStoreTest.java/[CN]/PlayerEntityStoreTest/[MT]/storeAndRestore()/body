{
  EngineEntityManager entityManager=getEntityManager();
  EntityRef character=entityManager.create("engine:player");
  LocationComponent loc=character.getComponent(LocationComponent.class);
  loc.setWorldPosition(new Vector3f(1,2,3));
  character.saveComponent(loc);
  PlayerEntityStore entityStore=new PlayerEntityStore("testPlayerStore",getEntityManager());
  entityStore.beginStore();
  entityStore.setRelevanceLocation(new Vector3f(413,5,42));
  entityStore.setHasCharacter(true);
  entityStore.store(character,"character");
  entityStore.endStore();
  entityManager.clear();
  entityStore=new PlayerEntityStore("testPlayerStore",getEntityManager());
  entityStore.beginRestore();
  TeraAssert.assertEquals(new Vector3f(413,5,42),entityStore.getRelevanceLocation(),0.001f);
  assertTrue(entityStore.hasCharacter());
  Map<String,EntityRef> loadedEntities=entityStore.restoreAll();
  assertTrue(loadedEntities.containsKey("character"));
  EntityRef characterEntity=loadedEntities.get("character");
  assertNotNull(characterEntity);
  assertTrue(characterEntity.exists());
  assertNotNull(characterEntity.getComponent(LocationComponent.class));
  TeraAssert.assertEquals(new Vector3f(1,2,3),characterEntity.getComponent(LocationComponent.class).getWorldPosition(),0.001f);
}
