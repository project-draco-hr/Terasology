{
  BlockManager blockManager=CoreRegistry.get(BlockManager.class);
  Map<Character,LSystemRule> rules=ImmutableMap.<Character,LSystemRule>builder().put('A',new LSystemRule("[&FFBFA]////[&BFFFA]////[&FBFFA]",1.0f)).put('B',new LSystemRule("[&FFFA]////[&FFFA]////[&FFFA]",0.8f)).build();
  TreeGenerator oakTree=new TreeGeneratorLSystem("FFFFFFA",rules,4,(float)Math.toRadians(30)).setLeafType(blockManager.getBlock("engine:GreenLeaf")).setBarkType(blockManager.getBlock("engine:OakTrunk")).setGenerationProbability(0.08f);
  rules=ImmutableMap.<Character,LSystemRule>builder().put('A',new LSystemRule("[&FFFFFA]////[&FFFFFA]////[&FFFFFA]",1.0f)).build();
  TreeGenerator pineTree=new TreeGeneratorLSystem("FFFFAFFFFFFFAFFFFA",rules,4,(float)Math.toRadians(35)).setLeafType(blockManager.getBlock("engine:DarkLeaf")).setBarkType(blockManager.getBlock("engine:PineTrunk")).setGenerationProbability(0.05f);
  rules=ImmutableMap.<Character,LSystemRule>builder().put('A',new LSystemRule("[&FFFAFFF]////[&FFAFFF]////[&FFFAFFF]",1.0f)).put('B',new LSystemRule("[&FAF]////[&FAF]////[&FAF]",0.8f)).build();
  TreeGenerator birkTree=new TreeGeneratorLSystem("FFFFAFFFFBFFFFAFFFFBFFFFAFFFFBFF",rules,4,(float)Math.toRadians(35)).setLeafType(blockManager.getBlock("engine:DarkLeaf")).setBarkType(blockManager.getBlock("engine:BirkTrunk")).setGenerationProbability(0.02f);
  rules=ImmutableMap.<Character,LSystemRule>builder().put('A',new LSystemRule("[&FFBFA]////[&BFFFA]////[&FBFFAFFA]",1.0f)).put('B',new LSystemRule("[&FFFAFFFF]////[&FFFAFFF]////[&FFFAFFAA]",0.8f)).build();
  TreeGenerator oakVariationTree=new TreeGeneratorLSystem("FFFFFFA",rules,4,(float)Math.toRadians(35)).setLeafType(blockManager.getBlock("engine:GreenLeaf")).setBarkType(blockManager.getBlock("engine:OakTrunk")).setGenerationProbability(0.08f);
  rules=ImmutableMap.<Character,LSystemRule>builder().put('A',new LSystemRule("[&FFAFF]////[&FFAFF]////[&FFAFF]",1.0f)).build();
  TreeGenerator redTree=new TreeGeneratorLSystem("FFFFFAFAFAF",rules,4,(float)Math.toRadians(40)).setLeafType(blockManager.getBlock("engine:RedLeaf")).setBarkType(blockManager.getBlock("engine:OakTrunk")).setGenerationProbability(0.05f);
  TreeGenerator cactus=new TreeGeneratorCactus().setTrunkType(blockManager.getBlock("engine:Cactus")).setGenerationProbability(0.05f);
  mngr.addTreeGenerator(WorldBiomeProvider.Biome.MOUNTAINS,oakTree);
  mngr.addTreeGenerator(WorldBiomeProvider.Biome.MOUNTAINS,pineTree);
  mngr.addTreeGenerator(WorldBiomeProvider.Biome.FOREST,oakTree);
  mngr.addTreeGenerator(WorldBiomeProvider.Biome.FOREST,pineTree);
  mngr.addTreeGenerator(WorldBiomeProvider.Biome.FOREST,oakVariationTree);
  mngr.addTreeGenerator(WorldBiomeProvider.Biome.SNOW,birkTree);
  mngr.addTreeGenerator(WorldBiomeProvider.Biome.PLAINS,redTree);
  mngr.addTreeGenerator(WorldBiomeProvider.Biome.PLAINS,oakTree);
  mngr.addTreeGenerator(WorldBiomeProvider.Biome.DESERT,cactus);
}
