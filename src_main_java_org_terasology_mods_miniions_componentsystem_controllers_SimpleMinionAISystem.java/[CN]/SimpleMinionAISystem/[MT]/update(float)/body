{
  for (  EntityRef entity : entityManager.iteratorEntities(SimpleMinionAIComponent.class,CharacterMovementComponent.class,LocationComponent.class,MinionComponent.class)) {
    LocationComponent location=entity.getComponent(LocationComponent.class);
    SimpleMinionAIComponent ai=entity.getComponent(SimpleMinionAIComponent.class);
    CharacterMovementComponent moveComp=entity.getComponent(CharacterMovementComponent.class);
    MinionComponent minioncomp=entity.getComponent(MinionComponent.class);
    Vector3f worldPos=new Vector3f(location.getWorldPosition());
    moveComp.getDrive().set(0,0,0);
    LocalPlayer localPlayer=CoreRegistry.get(LocalPlayer.class);
    if (localPlayer != null) {
switch (minioncomp.minionBehaviour) {
case Follow:
{
          executeFollowAI(worldPos,localPlayer,ai,entity,moveComp,location);
          break;
        }
case Gather:
{
        executeGatherAI(worldPos,ai,entity,moveComp,location);
        break;
      }
case Move:
{
      executeMoveAI(worldPos,ai,entity,moveComp,location);
      break;
    }
case Patrol:
{
    executePatrolAI(worldPos,ai,entity,moveComp,location);
    break;
  }
case Test:
{
  executeTestAI(worldPos,ai,localPlayer,entity,moveComp,location);
  break;
}
default :
{
break;
}
}
}
}
}
