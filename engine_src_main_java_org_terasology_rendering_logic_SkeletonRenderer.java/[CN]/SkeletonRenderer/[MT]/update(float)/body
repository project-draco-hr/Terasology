{
  for (  EntityRef entity : entityManager.getEntitiesWith(SkeletalMeshComponent.class,LocationComponent.class)) {
    SkeletalMeshComponent skeletalMeshComp=entity.getComponent(SkeletalMeshComponent.class);
    if (skeletalMeshComp.animation == null && skeletalMeshComp.animationPool != null) {
      skeletalMeshComp.animation=randomAnimationData(skeletalMeshComp,random);
    }
    if (skeletalMeshComp.animation == null) {
      continue;
    }
    if (skeletalMeshComp.animation.getFrameCount() <= 0) {
      continue;
    }
    skeletalMeshComp.animationTime+=delta * skeletalMeshComp.animationRate;
    float framePos=skeletalMeshComp.animationTime / skeletalMeshComp.animation.getTimePerFrame();
    if ((int)framePos >= skeletalMeshComp.animation.getFrameCount()) {
      while ((int)framePos >= skeletalMeshComp.animation.getFrameCount()) {
        framePos-=skeletalMeshComp.animation.getFrameCount();
        skeletalMeshComp.animationTime-=skeletalMeshComp.animation.getTimePerFrame() * skeletalMeshComp.animation.getFrameCount();
      }
      if (!skeletalMeshComp.loop) {
        skeletalMeshComp.animation=null;
        entity.send(new AnimEndEvent(skeletalMeshComp.animation));
      }
      MeshAnimation newAnimation=randomAnimationData(skeletalMeshComp,random);
      if (newAnimation == null) {
        MeshAnimationFrame frame=skeletalMeshComp.animation.getFrame(skeletalMeshComp.animation.getFrameCount() - 1);
        updateSkeleton(skeletalMeshComp,frame,frame,1.0f);
        skeletalMeshComp.animation=null;
        entity.saveComponent(skeletalMeshComp);
        continue;
      }
      skeletalMeshComp.animation=newAnimation;
    }
    int frameId=(int)framePos;
    MeshAnimationFrame frameA=skeletalMeshComp.animation.getFrame(frameId);
    MeshAnimationFrame frameB;
    if (skeletalMeshComp.loop) {
      frameB=skeletalMeshComp.animation.getFrame((frameId + 1) % skeletalMeshComp.animation.getFrameCount());
    }
 else {
      frameB=(frameId + 1 >= skeletalMeshComp.animation.getFrameCount()) ? frameA : skeletalMeshComp.animation.getFrame(frameId + 1);
    }
    updateSkeleton(skeletalMeshComp,frameA,frameB,framePos - frameId);
    entity.saveComponent(skeletalMeshComp);
  }
}
