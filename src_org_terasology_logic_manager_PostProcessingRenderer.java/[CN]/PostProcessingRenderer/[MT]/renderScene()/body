{
  generateDownsampledScene();
  updateExposure();
  generateHighPass();
  for (int i=0; i < 3; i++) {
    generateBloom(i);
    generateBlur(i);
  }
  ShaderManager.getInstance().enableShader("fbo");
  PostProcessingRenderer.FBO scene=PostProcessingRenderer.getInstance().getFBO("scene");
  GL13.glActiveTexture(GL13.GL_TEXTURE1);
  PostProcessingRenderer.getInstance().getFBO("sceneBloom2").bindTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE2);
  scene.bindDepthTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE3);
  PostProcessingRenderer.getInstance().getFBO("sceneBlur2").bindTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE0);
  scene.bindTexture();
  int texScene=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("fbo"),"texScene");
  GL20.glUniform1i(texScene,0);
  int texBloom=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("fbo"),"texBloom");
  GL20.glUniform1i(texBloom,1);
  int texDepth=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("fbo"),"texDepth");
  GL20.glUniform1i(texDepth,2);
  int texBlur=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("fbo"),"texBlur");
  GL20.glUniform1i(texBlur,3);
  int expos=GL20.glGetUniformLocation(ShaderManager.getInstance().getShader("fbo"),"exposure");
  GL20.glUniform1f(expos,_exposure);
  renderFullQuad();
  scene.unbindTexture();
  ShaderManager.getInstance().enableShader(null);
}
