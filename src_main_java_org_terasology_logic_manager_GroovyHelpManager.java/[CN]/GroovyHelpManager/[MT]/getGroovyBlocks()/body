{
  HashMap<Byte,String> retval=new HashMap<Byte,String>();
  String[] endfilter={"FRONT","BACK","TOP","BOTTOM","LEFT","RIGHT"};
  String fampref="org.terasology.model.blocks.";
  String tempval="";
  boolean nodup=true;
  for (int i=Byte.MIN_VALUE; i <= Byte.MAX_VALUE; i++) {
    Block b=BlockManager.getInstance().getBlock((byte)i);
    if (b.getId() != 0) {
      if (tempval.length() > 0) {
        if (b.getTitle().startsWith(tempval)) {
          nodup=false;
        }
 else {
          nodup=true;
          tempval="";
        }
      }
 else {
        for (        String element : endfilter) {
          if (b.getTitle().endsWith(element)) {
            tempval=b.getTitle().substring(0,b.getTitle().length() - element.length());
          }
        }
      }
      if (nodup) {
        String tempfam=b.getBlockFamily().toString().split("@")[0];
        if (tempfam.startsWith(fampref)) {
          tempfam=tempfam.substring(fampref.length(),tempfam.length());
        }
        if (tempval.length() < 1) {
          retval.put(b.getId(),b.getTitle() + " and belongs to " + tempfam);
        }
 else {
          retval.put(b.getId(),tempval + " and belongs to " + tempfam);
        }
      }
    }
    if (i == 127) {
      break;
    }
  }
  return retval;
}
