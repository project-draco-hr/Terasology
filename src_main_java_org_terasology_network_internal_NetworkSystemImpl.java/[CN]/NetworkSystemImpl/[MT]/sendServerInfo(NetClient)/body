{
  NetData.ServerInfoMessage.Builder serverInfoMessageBuilder=NetData.ServerInfoMessage.newBuilder();
  serverInfoMessageBuilder.setTime(time.getGameTimeInMs());
  WorldProvider world=CoreRegistry.get(WorldProvider.class);
  if (world != null) {
    NetData.WorldInfo.Builder worldInfoBuilder=NetData.WorldInfo.newBuilder();
    worldInfoBuilder.setTime(world.getWorldTime().getTimeInMs());
    worldInfoBuilder.setTitle(world.getTitle());
    serverInfoMessageBuilder.addWorldInfo(worldInfoBuilder);
  }
  for (  Mod mod : CoreRegistry.get(ModManager.class).getActiveMods()) {
    if (!mod.getModInfo().isServersideOnly()) {
      serverInfoMessageBuilder.addModule(NetData.ModuleInfo.newBuilder().setModuleId(mod.getModInfo().getId()).build());
    }
  }
  for (  Map.Entry<String,Byte> blockMapping : blockManager.getBlockIdMap().entrySet()) {
    serverInfoMessageBuilder.addBlockId(blockMapping.getValue());
    serverInfoMessageBuilder.addBlockName(blockMapping.getKey());
  }
  for (  BlockFamily registeredBlockFamily : blockManager.listRegisteredBlockFamilies()) {
    serverInfoMessageBuilder.addRegisterBlockFamily(registeredBlockFamily.getURI().toString());
  }
  serializeComponentInfo(serverInfoMessageBuilder);
  serializeEventInfo(serverInfoMessageBuilder);
  serverInfoMessageBuilder.setClientId(client.getEntity().getComponent(NetworkComponent.class).getNetworkId());
  client.send(NetData.NetMessage.newBuilder().setTime(time.getGameTimeInMs()).setServerInfo(serverInfoMessageBuilder).build());
}
