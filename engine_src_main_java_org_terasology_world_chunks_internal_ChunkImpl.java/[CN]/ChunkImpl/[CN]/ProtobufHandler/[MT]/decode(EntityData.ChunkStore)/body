{
  Preconditions.checkNotNull(message,"The parameter 'message' must not be null");
  if (!message.hasX() || !message.hasY() || !message.hasZ()) {
    throw new IllegalArgumentException("Ill-formed protobuf message. Missing chunk position.");
  }
  Vector3i pos=new Vector3i(message.getX(),message.getY(),message.getZ());
  if (!message.hasState()) {
    throw new IllegalArgumentException("Ill-formed protobuf message. Missing chunk state.");
  }
  State state=State.lookup(message.getState());
  if (!message.hasBlockData()) {
    throw new IllegalArgumentException("Ill-formed protobuf message. Missing block data.");
  }
  final TeraArrays t=TeraArrays.getInstance();
  final TeraArray blockData=t.decode(message.getBlockData());
  Chunks c=Chunks.getInstance();
  TeraArray extraData;
  if (message.hasLiquidData()) {
    extraData=t.decode(message.getLiquidData());
  }
 else {
    extraData=c.getExtraDataEntry().factory.create(ChunkConstants.SIZE_X,ChunkConstants.SIZE_Y,ChunkConstants.SIZE_Z);
  }
  boolean previouslyComplete=state == State.COMPLETE;
  if (previouslyComplete) {
    state=State.INTERNAL_LIGHT_GENERATION_PENDING;
  }
  return new ChunkImpl(pos,state,blockData,extraData,previouslyComplete);
}
