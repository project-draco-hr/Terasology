{
  C val=m.get(head);
  while (p != 1) {
    int stepson=head - smoothSortLP[pshift];
    if (m.get(stepson).compareTo(val) <= 0)     break;
    if (!isTrusty && pshift > 1) {
      int rt=head - 1;
      int lf=head - 1 - smoothSortLP[pshift - 2];
      if (m.get(rt).compareTo(m.get(stepson)) >= 0 || m.get(lf).compareTo(m.get(stepson)) >= 0)       break;
    }
    m.set(head,m.get(stepson));
    head=stepson;
    int trail=Integer.numberOfTrailingZeros(p & ~1);
    p>>>=trail;
    pshift+=trail;
    isTrusty=false;
  }
  if (!isTrusty) {
    m.set(head,val);
    smoothSortSift(m,pshift,head);
  }
}
