{
  int top=Chunk.SIZE_Y - 1;
  short[] tops=new short[Chunk.SIZE_X * Chunk.SIZE_Z];
  short[] partLit=new short[Chunk.SIZE_X * Chunk.SIZE_Z];
  for (int x=0; x < Chunk.SIZE_X; x++) {
    for (int z=0; z < Chunk.SIZE_Z; z++) {
      int y=top;
      for (; y >= 0; y--) {
        Block block=chunk.getBlock(x,y,z);
        if (block.isTranslucent() && !block.isLiquid()) {
          chunk.setSunlight(x,y,z,Chunk.MAX_LIGHT);
        }
 else {
          break;
        }
      }
      tops[x + Chunk.SIZE_X * z]=(short)y;
    }
  }
  for (int x=0; x < Chunk.SIZE_X; x++) {
    for (int z=0; z < Chunk.SIZE_Z; z++) {
      if (tops[x + Chunk.SIZE_X * z] < top) {
        spreadSunlightInternal(chunk,x,tops[x + Chunk.SIZE_X * z] + 1,z);
      }
      for (int y=top; y >= 0; y--) {
        Block block=chunk.getBlock(x,y,z);
        if (y > tops[x + Chunk.SIZE_X * z] && ((x > 0 && tops[(x - 1) + Chunk.SIZE_X * z] >= y) || (x < Chunk.SIZE_X - 1 && tops[(x + 1) + Chunk.SIZE_X * z] >= y) || (z > 0 && tops[x + Chunk.SIZE_X * (z - 1)] >= y)|| (z < Chunk.SIZE_Z - 1 && tops[x + Chunk.SIZE_X * (z + 1)] >= y))) {
          spreadSunlightInternal(chunk,x,y,z);
        }
        if (block.getLuminance() > 0) {
          chunk.setLight(x,y,z,block.getLuminance());
          spreadLightInternal(chunk,x,y,z);
        }
      }
    }
  }
}
