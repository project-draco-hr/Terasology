{
  final EntityData.World world=entityPersister.serializeWorld();
  File parentFile=file.getParentFile();
  if (parentFile != null) {
    parentFile.mkdirs();
  }
  FileOutputStream out=new FileOutputStream(file);
  BufferedWriter bufferedWriter=new BufferedWriter(new OutputStreamWriter(out));
  try {
switch (format) {
case Binary:
      world.writeTo(out);
    out.flush();
  break;
case Text:
TextFormat.print(world,bufferedWriter);
bufferedWriter.flush();
break;
case JSON:
EntityDataJSONFormat.write(world,bufferedWriter);
bufferedWriter.flush();
break;
}
}
  finally {
try {
out.close();
}
 catch (IOException e) {
logger.log(Level.SEVERE,"Failed to close file",e);
}
}
}
