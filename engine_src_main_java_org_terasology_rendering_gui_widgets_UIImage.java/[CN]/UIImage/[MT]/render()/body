{
  if (mesh == null) {
    return;
  }
  if (mesh.isDisposed()) {
    logger.error("Disposed mesh encountered!");
    return;
  }
  if (texture != null) {
    CoreRegistry.get(ShaderManager.class).enableDefaultTextured();
    Rect2f drawRegion=texture.getRegion();
    glBindTexture(GL11.GL_TEXTURE_2D,texture != null ? texture.getTexture().getId() : 0);
    glMatrixMode(GL_TEXTURE);
    glPushMatrix();
    glTranslatef(drawRegion.minX() + drawRegion.width() * textureOrigin.x,drawRegion.minY() + drawRegion.height() * textureOrigin.y,0.0f);
    glScalef(drawRegion.width() * textureSize.x,drawRegion.height() * textureSize.y,1.0f);
    glMatrixMode(GL11.GL_MODELVIEW);
    glPushMatrix();
    if (rotate > 0f) {
      glRotatef(rotate,0f,0f,1f);
    }
    glScalef(getSize().x,getSize().y,1.0f);
    mesh.render();
    glPopMatrix();
    glMatrixMode(GL_TEXTURE);
    glPopMatrix();
    glMatrixMode(GL11.GL_MODELVIEW);
  }
 else {
    glPushMatrix();
    if (rotate > 0f) {
      glRotatef(rotate,0f,0f,1f);
    }
    glScalef(getSize().x,getSize().y,0.0f);
    mesh.render();
    glPopMatrix();
  }
  super.render();
}
