{
  UIStyle baseStyle=new UIStyle(defaultStyle);
  UIStyleFragment fragment=baseStyles.get(family);
  fragment.applyTo(baseStyle);
  Table<Class<? extends UIElement>,String,UIStyle> familyStyles=HashBasedTable.create();
  Table<Class<? extends UIElement>,String,UIStyleFragment> table=getElementTable(family);
  for (  Class<? extends UIElement> element : elementClasses) {
    UIStyle elementStyle=new UIStyle(baseStyle);
    UIStyleFragment elementFrag=table.get(element,"");
    UIStyleFragment defaultElementFrag=getDefaultElementStyleFrag(element);
    if (defaultElementFrag != null) {
      defaultElementFrag.applyTo(elementStyle);
    }
    if (elementFrag != null) {
      elementFrag.applyTo(elementStyle);
    }
    if (elementFrag != null || defaultElementFrag != null) {
      familyStyles.put(element,"",elementStyle);
      for (      String mode : modes.get(element)) {
        UIStyleFragment defaultMode=getDefaultElementModeFrag(element,mode);
        UIStyleFragment elementMode=table.get(element,mode);
        UIStyle elementModeStyle=new UIStyle(elementStyle);
        if (defaultMode != null) {
          defaultMode.applyTo(elementModeStyle);
        }
        if (elementMode != null) {
          elementMode.applyTo(elementModeStyle);
        }
        familyStyles.put(element,mode,elementModeStyle);
      }
    }
  }
  return new UIStyleFamily(baseStyle,familyStyles);
}
