{
  Texture terrain=Assets.getTexture("engine:terrain");
  if (terrain == null) {
    return;
  }
  WorldRenderer worldRenderer=CoreRegistry.get(WorldRenderer.class);
  LocalPlayer localPlayer=CoreRegistry.get(LocalPlayer.class);
  Time time=CoreRegistry.get(Time.class);
  GL13.glActiveTexture(GL13.GL_TEXTURE1);
  glBindTexture(GL11.GL_TEXTURE_2D,lava.getId());
  GL13.glActiveTexture(GL13.GL_TEXTURE2);
  glBindTexture(GL11.GL_TEXTURE_2D,water.getId());
  GL13.glActiveTexture(GL13.GL_TEXTURE3);
  glBindTexture(GL11.GL_TEXTURE_2D,effects.getId());
  GL13.glActiveTexture(GL13.GL_TEXTURE4);
  PostProcessingRenderer.getInstance().getFBO("sceneReflected").bindTexture();
  GL13.glActiveTexture(GL13.GL_TEXTURE0);
  glBindTexture(GL11.GL_TEXTURE_2D,terrain.getId());
  program.setInt("textureLava",1);
  program.setInt("textureWaterNormal",2);
  program.setInt("textureEffects",3);
  program.setInt("textureWaterReflection",4);
  program.setInt("textureAtlas",0);
  program.setFloat("blockScale",1.0f);
  if (worldRenderer != null) {
    program.setFloat("daylight",(float)worldRenderer.getDaylight());
    program.setFloat("swimming",worldRenderer.isUnderWater() ? 1.0f : 0.0f);
  }
  if (localPlayer != null) {
    program.setInt("carryingTorch",localPlayer.isCarryingTorch() ? 1 : 0);
  }
  if (time != null) {
    program.setFloat("time",worldRenderer.getWorldProvider().getWorldTime().getTimeInDays());
  }
  BlockManager blockManager=CoreRegistry.get(BlockManager.class);
  program.setFloat1("wavingCoordinates",blockManager.calcCoordinatesForWavingBlocks());
  program.setFloat2("grassCoordinate",blockManager.calcCoordinate("engine:grass"));
  program.setFloat2("waterCoordinate",blockManager.calcCoordinate("engine:water"));
  program.setFloat2("lavaCoordinate",blockManager.calcCoordinate("engine:lava"));
}
