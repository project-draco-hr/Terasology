{
  defaultShaderProgram=prepareAndStoreShaderProgramInstance("default",new ShaderParametersDefault());
  defaultTexturedShaderProgram=prepareAndStoreShaderProgramInstance("defaultTextured",new ShaderParametersDefault());
  prepareAndStoreShaderProgramInstance("post",new ShaderParametersPost());
  prepareAndStoreShaderProgramInstance("ssao",new ShaderParametersSSAO());
  prepareAndStoreShaderProgramInstance("lightshaft",new ShaderParametersLightShaft());
  prepareAndStoreShaderProgramInstance("sobel",new ShaderParametersSobel());
  prepareAndStoreShaderProgramInstance("prePost",new ShaderParametersPrePost());
  prepareAndStoreShaderProgramInstance("combine",new ShaderParametersCombine());
  prepareAndStoreShaderProgramInstance("highp",new ShaderParametersDefault());
  prepareAndStoreShaderProgramInstance("blur",new ShaderParametersDefault());
  prepareAndStoreShaderProgramInstance("down",new ShaderParametersDefault());
  prepareAndStoreShaderProgramInstance("hdr",new ShaderParametersHdr());
  prepareAndStoreShaderProgramInstance("sky",new ShaderParametersSky());
  prepareAndStoreShaderProgramInstance("chunk",new ShaderParametersChunk());
  prepareAndStoreShaderProgramInstance("particle",new ShaderParametersParticle());
  prepareAndStoreShaderProgramInstance("block",new ShaderParametersBlock());
  prepareAndStoreShaderProgramInstance("shadowMap",new ShaderParametersShadowMap());
  prepareAndStoreShaderProgramInstance("debug",new ShaderParametersDebug());
  prepareAndStoreShaderProgramInstance("ocDistortion",new ShaderParametersOcDistortion());
  prepareAndStoreShaderProgramInstance("lightBufferPass",new ShaderParametersLightBufferPass());
  prepareAndStoreShaderProgramInstance("lightGeometryPass",new ShaderParametersLightGeometryPass());
  prepareAndStoreShaderProgramInstance("simple",new ShaderParametersDefault());
  prepareAndStoreShaderProgramInstance("ssaoBlur",new ShaderParametersDefault());
}
