{
  context.put(ModuleManager.class,moduleManager);
  mockTime=mock(EngineTime.class);
  context.put(Time.class,mockTime);
  NetworkSystemImpl networkSystem=new NetworkSystemImpl(mockTime,context);
  context.put(NetworkSystem.class,networkSystem);
  EntitySystemSetupUtil.addReflectionBasedLibraries(context);
  EntitySystemSetupUtil.addEntityManagementRelatedClasses(context);
  engineEntityManager=context.get(EngineEntityManager.class);
  Path savePath=PathManager.getInstance().getSavePath("world1");
  context.put(StorageManager.class,new ReadWriteStorageManager(savePath,moduleManager.getEnvironment(),engineEntityManager));
  componentSystemManager=new ComponentSystemManager(context);
  context.put(ComponentSystemManager.class,componentSystemManager);
  LoadPrefabs prefabLoadStep=new LoadPrefabs(context);
  boolean complete=false;
  prefabLoadStep.begin();
  while (!complete) {
    complete=prefabLoadStep.step();
  }
  context.get(ComponentSystemManager.class).initialise();
}
