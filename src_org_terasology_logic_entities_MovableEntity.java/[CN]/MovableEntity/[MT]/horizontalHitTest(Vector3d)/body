{
  boolean result=false;
  ArrayList<BlockPosition> blockPositions=gatherAdjacentBlockPositions(origin);
  for (int i=0; i < blockPositions.size(); i++) {
    BlockPosition p=blockPositions.get(i);
    byte blockType=_parent.getWorldProvider().getBlockAtPosition(new Vector3d(p.x,p.y,p.z));
    Block block=BlockManager.getInstance().getBlock(blockType);
    if (!block.isPenetrable()) {
      for (      AABB blockAABB : block.getColliders(p.x,p.y,p.z)) {
        if (getAABB().overlaps(blockAABB)) {
          result=true;
          Vector3d direction=new Vector3d(getPosition().x,0f,getPosition().z);
          direction.x-=origin.x;
          direction.z-=origin.z;
          Vector3d blockPoi=blockAABB.closestPointOnAABBToPoint(origin);
          Vector3d entityPoi=generateAABBForPosition(origin).closestPointOnAABBToPoint(blockPoi);
          Vector3d planeNormal=blockAABB.getFirstHitPlane(direction,origin,getAABB().getDimensions(),true,false,true);
          Vector3d slideVector=new Vector3d(planeNormal.z,0,-planeNormal.x);
          Vector3d pushBack=new Vector3d();
          pushBack.sub(blockPoi,entityPoi);
          double length=slideVector.dot(direction);
          Vector3d newPosition=new Vector3d();
          newPosition.z=origin.z + pushBack.z * 0.2 + length * slideVector.z;
          newPosition.x=origin.x + pushBack.x * 0.2 + length * slideVector.x;
          newPosition.y=origin.y;
          getPosition().set(newPosition);
        }
      }
    }
  }
  return result;
}
