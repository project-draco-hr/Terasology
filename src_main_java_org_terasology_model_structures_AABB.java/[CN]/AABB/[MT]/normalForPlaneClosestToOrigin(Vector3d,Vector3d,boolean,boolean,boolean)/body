{
  ArrayList<Vector3d> normals=new ArrayList<Vector3d>();
  if (pointOnAABB.z == minZ() && testZ)   normals.add(new Vector3d(0,0,-1));
  if (pointOnAABB.z == maxZ() && testZ)   normals.add(new Vector3d(0,0,1));
  if (pointOnAABB.x == minX() && testX)   normals.add(new Vector3d(-1,0,0));
  if (pointOnAABB.x == maxX() && testX)   normals.add(new Vector3d(1,0,0));
  if (pointOnAABB.y == minY() && testY)   normals.add(new Vector3d(0,-1,0));
  if (pointOnAABB.y == maxY() && testY)   normals.add(new Vector3d(0,1,0));
  double minDistance=Double.MAX_VALUE;
  Vector3d closestNormal=new Vector3d();
  for (int i=0; i < normals.size(); i++) {
    Vector3d n=normals.get(i);
    Vector3d diff=new Vector3d(centerPointForNormal(n));
    diff.sub(origin);
    double distance=diff.length();
    if (distance < minDistance) {
      minDistance=distance;
      closestNormal=n;
    }
  }
  return closestNormal;
}
