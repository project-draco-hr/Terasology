{
  PojoEntityManager entityManager=CoreRegistry.put(EntityManager.class,new PojoEntityManager());
  CoreRegistry.put(EngineEntityManager.class,entityManager);
  TypeSerializationLibrary typeSerializationLibrary=buildTypeLibrary(entityManager,reflectFactory,copyStrategyLibrary);
  entityManager.setTypeSerializerLibrary(typeSerializationLibrary);
  EntitySystemLibrary library=CoreRegistry.put(EntitySystemLibrary.class,new EntitySystemLibrary(reflectFactory,copyStrategyLibrary,typeSerializationLibrary));
  entityManager.setEntitySystemLibrary(library);
  CoreRegistry.put(ComponentLibrary.class,library.getComponentLibrary());
  CoreRegistry.put(EventLibrary.class,library.getEventLibrary());
  PrefabManager prefabManager=new PojoPrefabManager();
  entityManager.setPrefabManager(prefabManager);
  CoreRegistry.put(PrefabManager.class,prefabManager);
  entityManager.setEventSystem(new EventSystemImpl(library.getEventLibrary(),networkSystem));
  CoreRegistry.put(EventSystem.class,entityManager.getEventSystem());
  NodesClassLibrary nodesClassLibrary=new NodesClassLibrary(reflectFactory,copyStrategyLibrary);
  CoreRegistry.put(NodesClassLibrary.class,nodesClassLibrary);
  nodesClassLibrary.scan();
  registerComponents(library.getComponentLibrary(),moduleManager);
  registerEvents(entityManager.getEventSystem(),moduleManager);
  return entityManager;
}
