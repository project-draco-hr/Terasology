{
  context.put(NetworkSystem.class,mock(NetworkSystem.class));
  EntitySystemSetupUtil.addReflectionBasedLibraries(context);
  EntitySystemSetupUtil.addEntityManagementRelatedClasses(context);
  entityManager=context.get(EngineEntityManager.class);
  entityManager.getComponentLibrary().register(new SimpleUri("test","gettersetter"),GetterSetterComponent.class);
  entityManager.getComponentLibrary().register(new SimpleUri("test","string"),StringComponent.class);
  entityManager.getComponentLibrary().register(new SimpleUri("test","integer"),IntegerComponent.class);
  entitySerializer=new EntitySerializer(entityManager);
  componentLibrary=entityManager.getComponentLibrary();
  PrefabData prefabData=new PrefabData();
  prefabData.addComponent(new StringComponent("Value"));
  prefab=Assets.generateAsset(new ResourceUrn("test:Test"),prefabData,Prefab.class);
}
